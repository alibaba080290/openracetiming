{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Nfc15693RequestFlagIOS\", {\n  enumerable: true,\n  get: function get() {\n    return _Iso15693HandlerIOS.Nfc15693RequestFlagIOS;\n  }\n});\nObject.defineProperty(exports, \"Nfc15693ResponseFlagIOS\", {\n  enumerable: true,\n  get: function get() {\n    return _Iso15693HandlerIOS.Nfc15693ResponseFlagIOS;\n  }\n});\nexports.NfcManagerIOS = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeNfcManager = require(\"./NativeNfcManager\");\nvar _NfcManager = require(\"./NfcManager\");\nvar _Iso15693HandlerIOS = require(\"./NfcTech/Iso15693HandlerIOS\");\nvar _NfcError = require(\"./NfcError\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar NfcManagerIOS = exports.NfcManagerIOS = function (_NfcManagerBase) {\n  function NfcManagerIOS() {\n    var _this;\n    (0, _classCallCheck2.default)(this, NfcManagerIOS);\n    _this = _callSuper(this, NfcManagerIOS);\n    _this.isEnabled = (0, _asyncToGenerator2.default)(function* () {\n      return true;\n    });\n    _this.requestTechnology = function () {\n      var _ref2 = (0, _asyncToGenerator2.default)(function* (tech) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        if (typeof tech === 'string') {\n          tech = [tech];\n        }\n        var techList = [];\n        for (var t of tech) {\n          if (t === _NfcManager.NfcTech.NfcA) {\n            techList.push(_NfcManager.NfcTech.MifareIOS);\n          } else if (t === _NfcManager.NfcTech.NfcV) {\n            techList.push(_NfcManager.NfcTech.Iso15693IOS);\n          } else {\n            techList.push(t);\n          }\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('requestTechnology', [techList, Object.assign({}, _NfcManager.DEFAULT_REGISTER_TAG_EVENT_OPTIONS, options)]));\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this.cancelTechnologyRequest = (0, _asyncToGenerator2.default)(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _options$throwOnError = options.throwOnError,\n        throwOnError = _options$throwOnError === void 0 ? false : _options$throwOnError;\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('cancelTechnologyRequest'), !throwOnError);\n    });\n    _this.getBackgroundTag = (0, _asyncToGenerator2.default)(function* () {\n      var ndefMessage = yield (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getBackgroundNdef'));\n      return ndefMessage ? {\n        ndefMessage: ndefMessage\n      } : null;\n    });\n    _this.clearBackgroundTag = (0, _asyncToGenerator2.default)(function* () {\n      return (0, _NativeNfcManager.callNative)('clearBackgroundNdef');\n    });\n    _this.getBackgroundNdef = function () {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getBackgroundNdef'));\n    };\n    _this.setAlertMessage = function (alertMessage) {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('setAlertMessage', [alertMessage]));\n    };\n    _this.setAlertMessageIOS = function (alertMessage) {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('setAlertMessage', [alertMessage]));\n    };\n    _this.invalidateSessionIOS = function () {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('invalidateSession'));\n    };\n    _this.invalidateSessionWithErrorIOS = function () {\n      var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Error';\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('invalidateSessionWithError', [errorMessage]));\n    };\n    _this.sendMifareCommandIOS = function (bytes) {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('sendMifareCommand', [bytes]));\n    };\n    _this.sendFelicaCommandIOS = function (bytes) {\n      return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('sendFelicaCommand', [bytes]));\n    };\n    _this.sendCommandAPDUIOS = function (bytesOrApdu) {\n      if (_reactNative.Platform.OS !== 'ios') {\n        return Promise.reject('not implemented');\n      }\n      if (Array.isArray(bytesOrApdu)) {\n        var bytes = bytesOrApdu;\n        return (0, _NfcError.handleNativeException)(new Promise(function (resolve, reject) {\n          _NativeNfcManager.NativeNfcManager.sendCommandAPDUBytes(bytes, function (err, response, sw1, sw2) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve({\n                response: response,\n                sw1: sw1,\n                sw2: sw2\n              });\n            }\n          });\n        }));\n      } else {\n        var apdu = bytesOrApdu;\n        return (0, _NfcError.handleNativeException)(new Promise(function (resolve, reject) {\n          _NativeNfcManager.NativeNfcManager.sendCommandAPDU(apdu, function (err, response, sw1, sw2) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve({\n                response: response,\n                sw1: sw1,\n                sw2: sw2\n              });\n            }\n          });\n        }));\n      }\n    };\n    return _this;\n  }\n  (0, _inherits2.default)(NfcManagerIOS, _NfcManagerBase);\n  return (0, _createClass2.default)(NfcManagerIOS, [{\n    key: \"iso15693HandlerIOS\",\n    get: function get() {\n      if (!this._iso15693HandlerIOS) {\n        this._iso15693HandlerIOS = new _Iso15693HandlerIOS.Iso15693HandlerIOS();\n      }\n      return this._iso15693HandlerIOS;\n    }\n  }]);\n}(_NfcManager.NfcManagerBase);","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","enumerable","get","_Iso15693HandlerIOS","Nfc15693RequestFlagIOS","Nfc15693ResponseFlagIOS","NfcManagerIOS","_asyncToGenerator2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_reactNative","_NativeNfcManager","_NfcManager","_NfcError","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_NfcManagerBase","_this","isEnabled","requestTechnology","_ref2","tech","options","arguments","length","undefined","techList","NfcTech","NfcA","push","MifareIOS","NfcV","Iso15693IOS","handleNativeException","callNative","assign","DEFAULT_REGISTER_TAG_EVENT_OPTIONS","_x","cancelTechnologyRequest","_options$throwOnError","throwOnError","getBackgroundTag","ndefMessage","clearBackgroundTag","getBackgroundNdef","setAlertMessage","alertMessage","setAlertMessageIOS","invalidateSessionIOS","invalidateSessionWithErrorIOS","errorMessage","sendMifareCommandIOS","bytes","sendFelicaCommandIOS","sendCommandAPDUIOS","bytesOrApdu","Platform","OS","Promise","reject","Array","isArray","resolve","NativeNfcManager","sendCommandAPDUBytes","err","response","sw1","sw2","apdu","sendCommandAPDU","key","_iso15693HandlerIOS","Iso15693HandlerIOS","NfcManagerBase"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcManagerIOS.js"],"sourcesContent":["'use strict';\nimport {Platform} from 'react-native';\nimport {NativeNfcManager, callNative} from './NativeNfcManager';\nimport {\n  NfcTech,\n  NfcManagerBase,\n  DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n} from './NfcManager';\nimport {\n  Nfc15693RequestFlagIOS,\n  Nfc15693ResponseFlagIOS,\n  Iso15693HandlerIOS,\n} from './NfcTech/Iso15693HandlerIOS';\nimport {handleNativeException} from './NfcError';\n\nclass NfcManagerIOS extends NfcManagerBase {\n  constructor() {\n    super();\n  }\n\n  isEnabled = async () => {\n    return true;\n  };\n\n  requestTechnology = async (tech, options = {}) => {\n    if (typeof tech === 'string') {\n      tech = [tech];\n    }\n\n    const techList = [];\n    for (const t of tech) {\n      if (t === NfcTech.NfcA) {\n        techList.push(NfcTech.MifareIOS);\n      } else if (t === NfcTech.NfcV) {\n        techList.push(NfcTech.Iso15693IOS);\n      } else {\n        techList.push(t);\n      }\n    }\n\n    return handleNativeException(\n      callNative('requestTechnology', [\n        techList,\n        {\n          ...DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n          ...options,\n        },\n      ]),\n    );\n  };\n\n  cancelTechnologyRequest = async (options = {}) => {\n    const {throwOnError = false} = options;\n    return handleNativeException(\n      callNative('cancelTechnologyRequest'),\n      !throwOnError,\n    );\n  };\n\n  getBackgroundTag = async () => {\n    // iOS doesn't report the full tag, only the ndefMessage part\n    const ndefMessage = await handleNativeException(callNative('getBackgroundNdef'));\n    return ndefMessage ? { ndefMessage } : null;\n  };\n\n  clearBackgroundTag = async () => callNative('clearBackgroundNdef');\n\n  // -------------------------------------\n  // public only for iOS\n  // -------------------------------------\n  getBackgroundNdef = () =>\n    handleNativeException(callNative('getBackgroundNdef'));\n\n  setAlertMessage = (alertMessage) =>\n    handleNativeException(callNative('setAlertMessage', [alertMessage]));\n\n  setAlertMessageIOS = (alertMessage) =>\n    handleNativeException(callNative('setAlertMessage', [alertMessage]));\n\n  invalidateSessionIOS = () =>\n    handleNativeException(callNative('invalidateSession'));\n\n  invalidateSessionWithErrorIOS = (errorMessage = 'Error') =>\n    handleNativeException(\n      callNative('invalidateSessionWithError', [errorMessage]),\n    );\n\n  // -------------------------------------\n  // (iOS) NfcTech.MifareIOS API\n  // -------------------------------------\n  sendMifareCommandIOS = (bytes) =>\n    handleNativeException(callNative('sendMifareCommand', [bytes]));\n\n  // -------------------------------------\n  // (iOS) NfcTech.FelicaIOS API\n  // -------------------------------------\n  sendFelicaCommandIOS = (bytes) =>\n    handleNativeException(callNative('sendFelicaCommand', [bytes]));\n\n  // -------------------------------------\n  // (iOS) NfcTech.IsoDep API\n  // -------------------------------------\n  sendCommandAPDUIOS = (bytesOrApdu) => {\n    if (Platform.OS !== 'ios') {\n      return Promise.reject('not implemented');\n    }\n\n    if (Array.isArray(bytesOrApdu)) {\n      const bytes = bytesOrApdu;\n      return handleNativeException(\n        new Promise((resolve, reject) => {\n          NativeNfcManager.sendCommandAPDUBytes(\n            bytes,\n            (err, response, sw1, sw2) => {\n              if (err) {\n                reject(err);\n              } else {\n                resolve({response, sw1, sw2});\n              }\n            },\n          );\n        }),\n      );\n    } else {\n      const apdu = bytesOrApdu;\n      return handleNativeException(\n        new Promise((resolve, reject) => {\n          NativeNfcManager.sendCommandAPDU(apdu, (err, response, sw1, sw2) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve({response, sw1, sw2});\n            }\n          });\n        }),\n      );\n    }\n  };\n\n  // -------------------------------------\n  // (iOS) NfcTech.Iso15693IOS API\n  // -------------------------------------\n  get iso15693HandlerIOS() {\n    if (!this._iso15693HandlerIOS) {\n      this._iso15693HandlerIOS = new Iso15693HandlerIOS();\n    }\n    return this._iso15693HandlerIOS;\n  }\n}\n\nexport {NfcManagerIOS, Nfc15693RequestFlagIOS, Nfc15693ResponseFlagIOS};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}