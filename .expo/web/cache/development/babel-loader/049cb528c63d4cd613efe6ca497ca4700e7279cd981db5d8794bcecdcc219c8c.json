{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adjustPaddingOut = exports.adjustPaddingFlat = void 0;\nexports.calculateFlatAffixTopPosition = calculateFlatAffixTopPosition;\nexports.calculateLabelTopPosition = exports.calculateInputHeight = exports.calculateFlatInputHorizontalPadding = void 0;\nexports.calculateOutlinedIconAndAffixTopPosition = calculateOutlinedIconAndAffixTopPosition;\nexports.interpolatePlaceholder = exports.calculatePadding = void 0;\nvar _constants = require(\"./constants\");\nvar _enums = require(\"./Adornment/enums\");\nvar calculateLabelTopPosition = exports.calculateLabelTopPosition = function calculateLabelTopPosition(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var optionalPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var customHeight = height > 0 ? height : 0;\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\nvar calculateInputHeight = exports.calculateInputHeight = function calculateInputHeight(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var minHeight = arguments.length > 2 ? arguments[2] : undefined;\n  var finalHeight = height > 0 ? height : labelHeight;\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\nvar calculatePadding = exports.calculatePadding = function calculatePadding(props) {\n  var height = props.height,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline;\n  var result = 0;\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n  return Math.max(0, result);\n};\nvar calculateTextAreaPadding = function calculateTextAreaPadding(props) {\n  var dense = props.dense;\n  return dense ? 10 : 20;\n};\nvar calculateInputPadding = function calculateInputPadding(_ref) {\n  var topPosition = _ref.topPosition,\n    fontSize = _ref.fontSize,\n    multiline = _ref.multiline,\n    scale = _ref.scale,\n    dense = _ref.dense,\n    offset = _ref.offset,\n    isAndroid = _ref.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = Math.floor(topPosition / 2);\n  result = result + Math.floor((refFontSize - fontSize) / 2) - (scale < 1 ? offset / 2 : 0);\n  if (multiline && isAndroid) result = Math.min(dense ? offset / 2 : offset, result);\n  return result;\n};\nvar adjustPaddingOut = exports.adjustPaddingOut = function adjustPaddingOut(_ref2) {\n  var pad = _ref2.pad,\n    multiline = _ref2.multiline,\n    label = _ref2.label,\n    scale = _ref2.scale,\n    height = _ref2.height,\n    fontSize = _ref2.fontSize,\n    lineHeight = _ref2.lineHeight,\n    dense = _ref2.dense,\n    offset = _ref2.offset,\n    isAndroid = _ref2.isAndroid;\n  var fontHeight = lineHeight !== null && lineHeight !== void 0 ? lineHeight : fontSize;\n  var refFontHeight = scale * fontSize;\n  var result = pad;\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2)\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight / 2 * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight * scale) : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};\nvar adjustPaddingFlat = exports.adjustPaddingFlat = function adjustPaddingFlat(_ref3) {\n  var pad = _ref3.pad,\n    scale = _ref3.scale,\n    multiline = _ref3.multiline,\n    label = _ref3.label,\n    height = _ref3.height,\n    offset = _ref3.offset,\n    dense = _ref3.dense,\n    fontSize = _ref3.fontSize,\n    isAndroid = _ref3.isAndroid,\n    styles = _ref3.styles;\n  var result = pad;\n  var topResult = result;\n  var bottomResult = result;\n  var paddingTop = styles.paddingTop,\n    paddingBottom = styles.paddingBottom;\n  var refFontSize = scale * fontSize;\n  if (!multiline) {\n    if (label) {\n      return {\n        paddingTop: paddingTop,\n        paddingBottom: paddingBottom\n      };\n    }\n    return {\n      paddingTop: result,\n      paddingBottom: result\n    };\n  }\n  if (label) {\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n    if (!isAndroid) {\n      if (dense) {\n        topResult += scale < 1 ? Math.min(result, refFontSize * scale) - result / 2 : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2)\n      };\n    }\n    if (!isAndroid) {\n      if (dense) {\n        result += scale < 1 ? Math.min(offset / 2, fontSize / 2 * scale) : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result += scale < 1 ? Math.min(offset, fontSize * scale) : Math.min(fontSize, offset / 2 * scale);\n      }\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult)\n  };\n};\nvar interpolatePlaceholder = exports.interpolatePlaceholder = function interpolatePlaceholder(labeled, hasActiveOutline) {\n  return labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1]\n  });\n};\nfunction calculateFlatAffixTopPosition(_ref4) {\n  var height = _ref4.height,\n    paddingTop = _ref4.paddingTop,\n    paddingBottom = _ref4.paddingBottom,\n    affixHeight = _ref4.affixHeight;\n  var inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n  var halfOfTheInputHeightDecreasedByAffixHeight = (inputHeightWithoutPadding - affixHeight) / 2;\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\nfunction calculateOutlinedIconAndAffixTopPosition(_ref5) {\n  var height = _ref5.height,\n    affixHeight = _ref5.affixHeight,\n    labelYOffset = _ref5.labelYOffset;\n  return (height - affixHeight + labelYOffset) / 2;\n}\nvar calculateFlatInputHorizontalPadding = exports.calculateFlatInputHorizontalPadding = function calculateFlatInputHorizontalPadding(_ref6) {\n  var adornmentConfig = _ref6.adornmentConfig;\n  var paddingLeft = _constants.LABEL_PADDING_HORIZONTAL;\n  var paddingRight = _constants.LABEL_PADDING_HORIZONTAL;\n  adornmentConfig.forEach(function (_ref7) {\n    var type = _ref7.type,\n      side = _ref7.side;\n    if (type === _enums.AdornmentType.Icon && side === _enums.AdornmentSide.Left) {\n      paddingLeft = _constants.ADORNMENT_SIZE + _constants.ADORNMENT_OFFSET + _constants.FLAT_INPUT_OFFSET;\n    } else if (side === _enums.AdornmentSide.Right) {\n      if (type === _enums.AdornmentType.Affix) {\n        paddingRight = _constants.ADORNMENT_SIZE + _constants.ADORNMENT_OFFSET + _constants.FLAT_INPUT_OFFSET;\n      } else if (type === _enums.AdornmentType.Icon) {\n        paddingRight = _constants.ADORNMENT_SIZE + _constants.ADORNMENT_OFFSET + _constants.FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n  return {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  };\n};","map":{"version":3,"names":["_constants","require","_enums","calculateLabelTopPosition","exports","labelHeight","height","arguments","length","undefined","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","_props$multiline","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","_ref","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","_ref2","pad","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","_ref3","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","_ref4","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","_ref5","labelYOffset","calculateFlatInputHorizontalPadding","_ref6","adornmentConfig","paddingLeft","LABEL_PADDING_HORIZONTAL","paddingRight","forEach","_ref7","type","side","AdornmentType","Icon","AdornmentSide","Left","ADORNMENT_SIZE","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","Right","Affix"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/TextInput/helpers.tsx"],"sourcesContent":["import type { Animated } from 'react-native';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  LABEL_PADDING_HORIZONTAL,\n  ADORNMENT_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\nimport { AdornmentType, AdornmentSide } from './Adornment/enums';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n}: {\n  adornmentConfig: AdornmentConfig[];\n}) => {\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}