{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _reactNative = require(\"react-native\");\nvar _Surface = _interopRequireDefault(require(\"../../Surface\"));\nvar _Icon = _interopRequireDefault(require(\"../../Icon\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"../../TouchableRipple/TouchableRipple\"));\nvar _theming = require(\"../../../core/theming\");\nvar _colors = require(\"../../../styles/colors\");\nvar _AnimatedText = _interopRequireDefault(require(\"../../Typography/AnimatedText\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"icon\", \"label\", \"accessibilityLabel\", \"accessibilityState\", \"color\", \"disabled\", \"onPress\", \"onLongPress\", \"theme\", \"style\", \"visible\", \"uppercase\", \"testID\", \"animateFrom\", \"extended\", \"iconMode\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar SIZE = 56;\nvar BORDER_RADIUS = SIZE / 2;\nvar SCALE = 0.9;\nvar AnimatedFAB = function AnimatedFAB(_ref) {\n  var icon = _ref.icon,\n    label = _ref.label,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,\n    accessibilityState = _ref.accessibilityState,\n    customColor = _ref.color,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    onLongPress = _ref.onLongPress,\n    theme = _ref.theme,\n    style = _ref.style,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    _ref$uppercase = _ref.uppercase,\n    uppercase = _ref$uppercase === void 0 ? true : _ref$uppercase,\n    testID = _ref.testID,\n    _ref$animateFrom = _ref.animateFrom,\n    animateFrom = _ref$animateFrom === void 0 ? 'right' : _ref$animateFrom,\n    _ref$extended = _ref.extended,\n    extended = _ref$extended === void 0 ? false : _ref$extended,\n    _ref$iconMode = _ref.iconMode,\n    iconMode = _ref$iconMode === void 0 ? 'dynamic' : _ref$iconMode,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isIOS = _reactNative.Platform.OS === 'ios';\n  var isAnimatedFromRight = animateFrom === 'right';\n  var isIconStatic = iconMode === 'static';\n  var isRTL = _reactNative.I18nManager.isRTL;\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),\n    visibility = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(0)),\n    animFAB = _React$useRef2.current;\n  var scale = theme.animation.scale;\n  var _React$useState = React.useState(0),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    textWidth = _React$useState2[0],\n    setTextWidth = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    textHeight = _React$useState4[0],\n    setTextHeight = _React$useState4[1];\n  React.useEffect(function () {\n    if (visible) {\n      _reactNative.Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      _reactNative.Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n  var disabledColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.12).rgb().string();\n  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},\n    _ref3$backgroundColor = _ref3.backgroundColor,\n    backgroundColor = _ref3$backgroundColor === void 0 ? disabled ? disabledColor : theme.colors.accent : _ref3$backgroundColor;\n  var foregroundColor;\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.32).rgb().string();\n  } else {\n    foregroundColor = !(0, _color.default)(backgroundColor).isLight() ? _colors.white : 'rgba(0, 0, 0, .54)';\n  }\n  var rippleColor = (0, _color.default)(foregroundColor).alpha(0.32).rgb().string();\n  var extendedWidth = textWidth + 1.5 * SIZE;\n  var distance = isAnimatedFromRight ? -textWidth - BORDER_RADIUS : textWidth + BORDER_RADIUS;\n  React.useEffect(function () {\n    _reactNative.Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: _reactNative.Easing.linear\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n  var onTextLayout = function onTextLayout(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    var currentHeight = Math.ceil(nativeEvent.lines[0].height);\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n      setTextWidth(currentWidth);\n    }\n  };\n  var propForDirection = function propForDirection(right) {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n    return right.reverse();\n  };\n  var combinedStyles = (0, _utils.getCombinedStyles)({\n    isAnimatedFromRight: isAnimatedFromRight,\n    isIconStatic: isIconStatic,\n    distance: distance,\n    animFAB: animFAB\n  });\n  return React.createElement(_Surface.default, _extends({}, rest, {\n    style: [{\n      opacity: visibility,\n      transform: [{\n        scale: visibility\n      }],\n      elevation: isIOS ? 6 : 0\n    }, styles.container, disabled && styles.disabled, style]\n  }), React.createElement(_reactNative.Animated.View, {\n    style: [{\n      transform: [{\n        scaleY: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([SCALE, 1])\n        })\n      }]\n    }, styles.standard]\n  }, React.createElement(_reactNative.View, {\n    style: [_reactNative.StyleSheet.absoluteFill, styles.shadowWrapper]\n  }, React.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.shadow, {\n      width: extendedWidth,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([1, 0.15, 0])\n      })\n    }]\n  }), React.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"none\",\n    style: [_reactNative.StyleSheet.absoluteFill, styles.shadow, {\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.9 * distance, 0]),\n        outputRange: propForDirection([0, 0.85, 1])\n      }),\n      width: SIZE,\n      borderRadius: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0]),\n        outputRange: propForDirection([SIZE / (extendedWidth / SIZE), BORDER_RADIUS])\n      })\n    }, combinedStyles.absoluteFill]\n  })), React.createElement(_reactNative.Animated.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.innerWrapper]\n  }, React.createElement(_reactNative.Animated.View, {\n    style: [styles.standard, {\n      width: extendedWidth,\n      backgroundColor: backgroundColor\n    }, combinedStyles.innerWrapper]\n  }, React.createElement(_TouchableRipple.default, {\n    borderless: true,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    rippleColor: rippleColor,\n    disabled: disabled,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: Object.assign({}, accessibilityState, {\n      disabled: disabled\n    }),\n    testID: testID,\n    style: styles.touchable\n  }, React.createElement(_reactNative.View, {\n    style: [styles.standard, {\n      width: extendedWidth\n    }]\n  }))))), React.createElement(_reactNative.Animated.View, {\n    style: [styles.iconWrapper, combinedStyles.iconWrapper],\n    pointerEvents: \"none\"\n  }, React.createElement(_Icon.default, {\n    source: icon,\n    size: 24,\n    color: foregroundColor\n  })), React.createElement(_reactNative.View, {\n    pointerEvents: \"none\"\n  }, React.createElement(_AnimatedText.default, {\n    numberOfLines: 1,\n    onTextLayout: isIOS ? onTextLayout : undefined,\n    ellipsizeMode: 'tail',\n    style: [(0, _defineProperty2.default)({}, isAnimatedFromRight || isRTL ? 'right' : 'left', isIconStatic ? isIOS ? SIZE - 10 : SIZE - 12 : BORDER_RADIUS), {\n      minWidth: textWidth,\n      top: -BORDER_RADIUS - textHeight / 2,\n      opacity: animFAB.interpolate({\n        inputRange: propForDirection([distance, 0.7 * distance, 0]),\n        outputRange: propForDirection([1, 0, 0])\n      }),\n      transform: [{\n        translateX: animFAB.interpolate({\n          inputRange: propForDirection([distance, 0]),\n          outputRange: propForDirection([0, SIZE])\n        })\n      }]\n    }, styles.label, uppercase && styles.uppercaseLabel, Object.assign({\n      color: foregroundColor\n    }, theme.fonts.medium)]\n  }, label)), !isIOS && React.createElement(_reactNative.ScrollView, {\n    style: styles.textPlaceholderContainer\n  }, React.createElement(_reactNative.Text, {\n    onTextLayout: onTextLayout\n  }, label)));\n};\nvar styles = _reactNative.StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS\n  },\n  disabled: {\n    elevation: 0\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS\n  },\n  shadowWrapper: {\n    elevation: 0\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE\n  },\n  label: {\n    position: 'absolute'\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase'\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute'\n  }\n});\nvar _default = exports.default = (0, _theming.withTheme)(AnimatedFAB);","map":{"version":3,"names":["React","_interopRequireWildcard","require","_color","_interopRequireDefault","_reactNative","_Surface","_Icon","_TouchableRipple","_theming","_colors","_AnimatedText","_utils","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","SIZE","BORDER_RADIUS","SCALE","AnimatedFAB","_ref","icon","label","_ref$accessibilityLab","accessibilityLabel","accessibilityState","customColor","color","disabled","onPress","onLongPress","theme","style","_ref$visible","visible","_ref$uppercase","uppercase","testID","_ref$animateFrom","animateFrom","_ref$extended","extended","_ref$iconMode","iconMode","rest","_objectWithoutProperties2","isIOS","Platform","OS","isAnimatedFromRight","isIconStatic","isRTL","I18nManager","_React$useRef","useRef","Animated","Value","visibility","current","_React$useRef2","animFAB","scale","animation","_React$useState","useState","_React$useState2","_slicedToArray2","textWidth","setTextWidth","_React$useState3","_React$useState4","textHeight","setTextHeight","useEffect","timing","toValue","duration","useNativeDriver","start","disabledColor","dark","white","black","alpha","rgb","string","_ref3","StyleSheet","flatten","_ref3$backgroundColor","backgroundColor","colors","accent","foregroundColor","isLight","rippleColor","extendedWidth","distance","easing","Easing","linear","onTextLayout","_ref2","nativeEvent","currentWidth","Math","ceil","lines","width","currentHeight","height","propForDirection","right","reverse","combinedStyles","getCombinedStyles","createElement","Surface","_extends","opacity","transform","elevation","styles","container","View","scaleY","interpolate","inputRange","outputRange","standard","absoluteFill","shadowWrapper","pointerEvents","shadow","borderRadius","innerWrapper","TouchableRipple","borderless","accessibilityTraits","accessibilityComponentType","accessibilityRole","assign","touchable","iconWrapper","Icon","source","size","AnimatedText","numberOfLines","undefined","ellipsizeMode","_defineProperty2","minWidth","top","translateX","uppercaseLabel","fonts","medium","ScrollView","textPlaceholderContainer","Text","create","position","flexDirection","overflow","alignItems","justifyContent","textTransform","_default","exports","withTheme"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/FAB/AnimatedFAB/AnimatedFAB.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport {\n  Animated,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  Easing,\n  ScrollView,\n  Text,\n  Platform,\n  I18nManager,\n} from 'react-native';\nimport Surface from '../../Surface';\nimport Icon from '../../Icon';\nimport TouchableRipple from '../../TouchableRipple/TouchableRipple';\nimport type { $RemoveChildren } from '../../../types';\nimport type { IconSource } from '../../Icon';\nimport { withTheme } from '../../../core/theming';\nimport type {\n  AccessibilityState,\n  NativeSyntheticEvent,\n  TextLayoutEventData,\n} from 'react-native';\nimport { white, black } from '../../../styles/colors';\nimport AnimatedText from '../../Typography/AnimatedText';\nimport { getCombinedStyles } from './utils';\n\nexport type AnimatedFABIconMode = 'static' | 'dynamic';\nexport type AnimatedFABAnimateFrom = 'left' | 'right';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Label for extended `FAB`.\n   */\n  label: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Whether icon should be translated to the end of extended `FAB` or be static and stay in the same place. The default value is `dynamic`.\n   */\n  iconMode?: AnimatedFABIconMode;\n  /**\n   * Indicates from which direction animation should be performed. The default value is `right`.\n   */\n  animateFrom?: AnimatedFABAnimateFrom;\n  /**\n   * Whether `FAB` should start animation to extend.\n   */\n  extended: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\nconst SIZE = 56;\nconst BORDER_RADIUS = SIZE / 2;\nconst SCALE = 0.9;\n\nconst AnimatedFAB = ({\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  testID,\n  animateFrom = 'right',\n  extended = false,\n  iconMode = 'dynamic',\n  ...rest\n}: Props) => {\n  const isIOS = Platform.OS === 'ios';\n  const isAnimatedFromRight = animateFrom === 'right';\n  const isIconStatic = iconMode === 'static';\n  const { isRTL } = I18nManager;\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { current: animFAB } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { scale } = theme.animation;\n\n  const [textWidth, setTextWidth] = React.useState<number>(0);\n  const [textHeight, setTextHeight] = React.useState<number>(0);\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten<ViewStyle>(style) || {};\n\n  let foregroundColor: string;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor as string).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  const extendedWidth = textWidth + 1.5 * SIZE;\n\n  const distance = isAnimatedFromRight\n    ? -textWidth - BORDER_RADIUS\n    : textWidth + BORDER_RADIUS;\n\n  React.useEffect(() => {\n    Animated.timing(animFAB, {\n      toValue: !extended ? 0 : distance,\n      duration: 150 * scale,\n      useNativeDriver: true,\n      easing: Easing.linear,\n    }).start();\n  }, [animFAB, scale, distance, extended]);\n\n  const onTextLayout = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<TextLayoutEventData>) => {\n    const currentWidth = Math.ceil(nativeEvent.lines[0].width);\n    const currentHeight = Math.ceil(nativeEvent.lines[0].height);\n\n    if (currentWidth !== textWidth || currentHeight !== textHeight) {\n      setTextHeight(currentHeight);\n\n      if (isIOS) {\n        return setTextWidth(currentWidth - 12);\n      }\n\n      setTextWidth(currentWidth);\n    }\n  };\n\n  const propForDirection = <T,>(right: T[]): T[] => {\n    if (isAnimatedFromRight) {\n      return right;\n    }\n\n    return right.reverse();\n  };\n\n  const combinedStyles = getCombinedStyles({\n    isAnimatedFromRight,\n    isIconStatic,\n    distance,\n    animFAB,\n  });\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n            elevation: isIOS ? 6 : 0,\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n    >\n      <Animated.View\n        style={[\n          {\n            transform: [\n              {\n                scaleY: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([SCALE, 1]),\n                }),\n              },\n            ],\n          },\n          styles.standard,\n        ]}\n      >\n        <View style={[StyleSheet.absoluteFill, styles.shadowWrapper]}>\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                width: extendedWidth,\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([1, 0.15, 0]),\n                }),\n              },\n            ]}\n          />\n          <Animated.View\n            pointerEvents=\"none\"\n            style={[\n              StyleSheet.absoluteFill,\n              styles.shadow,\n              {\n                opacity: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0.9 * distance, 0]),\n                  outputRange: propForDirection([0, 0.85, 1]),\n                }),\n                width: SIZE,\n                borderRadius: animFAB.interpolate({\n                  inputRange: propForDirection([distance, 0]),\n                  outputRange: propForDirection([\n                    SIZE / (extendedWidth / SIZE),\n                    BORDER_RADIUS,\n                  ]),\n                }),\n              },\n              combinedStyles.absoluteFill,\n            ]}\n          />\n        </View>\n        <Animated.View pointerEvents=\"box-none\" style={[styles.innerWrapper]}>\n          <Animated.View\n            style={[\n              styles.standard,\n              {\n                width: extendedWidth,\n                backgroundColor,\n              },\n              combinedStyles.innerWrapper,\n            ]}\n          >\n            <TouchableRipple\n              borderless\n              onPress={onPress}\n              onLongPress={onLongPress}\n              rippleColor={rippleColor}\n              disabled={disabled}\n              accessibilityLabel={accessibilityLabel}\n              // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n              accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n              accessibilityComponentType=\"button\"\n              accessibilityRole=\"button\"\n              accessibilityState={{ ...accessibilityState, disabled }}\n              testID={testID}\n              style={styles.touchable}\n            >\n              <View\n                style={[\n                  styles.standard,\n                  {\n                    width: extendedWidth,\n                  },\n                ]}\n              />\n            </TouchableRipple>\n          </Animated.View>\n        </Animated.View>\n      </Animated.View>\n\n      <Animated.View\n        style={[styles.iconWrapper, combinedStyles.iconWrapper]}\n        pointerEvents=\"none\"\n      >\n        <Icon source={icon} size={24} color={foregroundColor} />\n      </Animated.View>\n\n      <View pointerEvents=\"none\">\n        <AnimatedText\n          numberOfLines={1}\n          onTextLayout={isIOS ? onTextLayout : undefined}\n          ellipsizeMode={'tail'}\n          style={[\n            {\n              [isAnimatedFromRight || isRTL ? 'right' : 'left']: isIconStatic\n                ? isIOS\n                  ? SIZE - 10\n                  : SIZE - 12\n                : BORDER_RADIUS,\n            },\n            {\n              minWidth: textWidth,\n              top: -BORDER_RADIUS - textHeight / 2,\n              opacity: animFAB.interpolate({\n                inputRange: propForDirection([distance, 0.7 * distance, 0]),\n                outputRange: propForDirection([1, 0, 0]),\n              }),\n              transform: [\n                {\n                  translateX: animFAB.interpolate({\n                    inputRange: propForDirection([distance, 0]),\n                    outputRange: propForDirection([0, SIZE]),\n                  }),\n                },\n              ],\n            },\n            styles.label,\n            uppercase && styles.uppercaseLabel,\n            {\n              color: foregroundColor,\n              ...theme.fonts.medium,\n            },\n          ]}\n        >\n          {label}\n        </AnimatedText>\n      </View>\n\n      {!isIOS && (\n        // Method `onTextLayout` on Android returns sizes of text visible on the screen,\n        // however during render the text in `FAB` isn't fully visible. In order to get\n        // proper text measurements there is a need to additionaly render that text, but\n        // wrapped in absolutely positioned `ScrollView` which height is 0.\n        <ScrollView style={styles.textPlaceholderContainer}>\n          <Text onTextLayout={onTextLayout}>{label}</Text>\n        </ScrollView>\n      )}\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  standard: {\n    height: SIZE,\n    borderRadius: BORDER_RADIUS,\n  },\n  disabled: {\n    elevation: 0,\n  },\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    borderRadius: BORDER_RADIUS,\n  },\n  innerWrapper: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n    borderRadius: BORDER_RADIUS,\n  },\n  shadowWrapper: {\n    elevation: 0,\n  },\n  shadow: {\n    elevation: 6,\n    borderRadius: BORDER_RADIUS,\n  },\n  touchable: {\n    borderRadius: BORDER_RADIUS,\n  },\n  iconWrapper: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'absolute',\n    height: SIZE,\n    width: SIZE,\n  },\n  label: {\n    position: 'absolute',\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  textPlaceholderContainer: {\n    height: 0,\n    position: 'absolute',\n  },\n});\n\nexport default withTheme(AnimatedFAB);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}