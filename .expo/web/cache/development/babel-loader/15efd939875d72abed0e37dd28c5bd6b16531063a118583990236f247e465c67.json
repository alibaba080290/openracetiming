{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _TouchableRipple = _interopRequireDefault(require(\"./TouchableRipple/TouchableRipple\"));\nvar _Icon = _interopRequireDefault(require(\"./Icon\"));\nvar _CrossFadeIcon = _interopRequireDefault(require(\"./CrossFadeIcon\"));\nvar _theming = require(\"../core/theming\");\nvar _excluded = [\"icon\", \"color\", \"size\", \"accessibilityLabel\", \"disabled\", \"onPress\", \"animated\", \"theme\", \"style\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar IconButton = function IconButton(_ref) {\n  var icon = _ref.icon,\n    customColor = _ref.color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    accessibilityLabel = _ref.accessibilityLabel,\n    disabled = _ref.disabled,\n    onPress = _ref.onPress,\n    _ref$animated = _ref.animated,\n    animated = _ref$animated === void 0 ? false : _ref$animated,\n    theme = _ref.theme,\n    style = _ref.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var iconColor = typeof customColor !== 'undefined' ? customColor : theme.colors.text;\n  var rippleColor = (0, _color.default)(iconColor).alpha(0.32).rgb().string();\n  var IconComponent = animated ? _CrossFadeIcon.default : _Icon.default;\n  var buttonSize = size * 1.5;\n  return React.createElement(_TouchableRipple.default, _extends({\n    borderless: true,\n    centered: true,\n    onPress: onPress,\n    rippleColor: rippleColor,\n    style: [styles.container, {\n      width: buttonSize,\n      height: buttonSize,\n      borderRadius: buttonSize / 2\n    }, disabled && styles.disabled, style],\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    disabled: disabled,\n    hitSlop: _TouchableRipple.default.supported ? {\n      top: 10,\n      left: 10,\n      bottom: 10,\n      right: 10\n    } : {\n      top: 6,\n      left: 6,\n      bottom: 6,\n      right: 6\n    }\n  }, rest), React.createElement(_reactNative.View, null, React.createElement(IconComponent, {\n    color: iconColor,\n    source: icon,\n    size: size\n  })));\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    margin: 6\n  },\n  disabled: {\n    opacity: 0.32\n  }\n});\nvar _default = exports.default = (0, _theming.withTheme)(IconButton);","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_TouchableRipple","_Icon","_CrossFadeIcon","_theming","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","IconButton","_ref","icon","customColor","color","_ref$size","size","accessibilityLabel","disabled","onPress","_ref$animated","animated","theme","style","rest","_objectWithoutProperties2","iconColor","colors","text","rippleColor","alpha","rgb","string","IconComponent","CrossFadeIcon","Icon","buttonSize","createElement","TouchableRipple","_extends","borderless","centered","styles","container","width","height","borderRadius","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","hitSlop","supported","top","left","bottom","right","View","source","StyleSheet","create","alignItems","justifyContent","overflow","margin","opacity","_default","exports","withTheme"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/IconButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  GestureResponderEvent,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport color from 'color';\n\nimport TouchableRipple from './TouchableRipple/TouchableRipple';\nimport Icon, { IconSource } from './Icon';\nimport CrossFadeIcon from './CrossFadeIcon';\nimport { withTheme } from '../core/theming';\n\nimport type { $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Icon to display.\n   */\n  icon: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * Size of the icon.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * An icon button is a button which displays only an icon without a label.\n * By default button has 150% size of the icon.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/icon-button-1.png\" />\n *     <figcaption>Icon button</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/icon-button-2.png\" />\n *     <figcaption>Pressed icon button</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { IconButton, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <IconButton\n *     icon=\"camera\"\n *     color={Colors.red500}\n *     size={20}\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst IconButton = ({\n  icon,\n  color: customColor,\n  size = 24,\n  accessibilityLabel,\n  disabled,\n  onPress,\n  animated = false,\n  theme,\n  style,\n  ...rest\n}: Props) => {\n  const iconColor =\n    typeof customColor !== 'undefined' ? customColor : theme.colors.text;\n  const rippleColor = color(iconColor).alpha(0.32).rgb().string();\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n  const buttonSize = size * 1.5;\n  return (\n    <TouchableRipple\n      borderless\n      centered\n      onPress={onPress}\n      rippleColor={rippleColor}\n      style={[\n        styles.container,\n        { width: buttonSize, height: buttonSize, borderRadius: buttonSize / 2 },\n        disabled && styles.disabled,\n        style,\n      ]}\n      accessibilityLabel={accessibilityLabel}\n      // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"button\"\n      accessibilityState={{ disabled }}\n      disabled={disabled}\n      hitSlop={\n        TouchableRipple.supported\n          ? { top: 10, left: 10, bottom: 10, right: 10 }\n          : { top: 6, left: 6, bottom: 6, right: 6 }\n      }\n      {...rest}\n    >\n      <View>\n        <IconComponent color={iconColor} source={icon} size={size} />\n      </View>\n    </TouchableRipple>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    overflow: 'hidden',\n    margin: 6,\n  },\n  disabled: {\n    opacity: 0.32,\n  },\n});\n\nexport default withTheme(IconButton);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}