{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _routers = require(\"@react-navigation/routers\");\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _checkDuplicateRouteNames = _interopRequireDefault(require(\"./checkDuplicateRouteNames\"));\nvar _checkSerializable = _interopRequireDefault(require(\"./checkSerializable\"));\nvar _createNavigationContainerRef = require(\"./createNavigationContainerRef\");\nvar _EnsureSingleNavigator = _interopRequireDefault(require(\"./EnsureSingleNavigator\"));\nvar _findFocusedRoute = _interopRequireDefault(require(\"./findFocusedRoute\"));\nvar _NavigationBuilderContext = _interopRequireDefault(require(\"./NavigationBuilderContext\"));\nvar _NavigationContainerRefContext = _interopRequireDefault(require(\"./NavigationContainerRefContext\"));\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nvar _NavigationRouteContext = _interopRequireDefault(require(\"./NavigationRouteContext\"));\nvar _NavigationStateContext = _interopRequireDefault(require(\"./NavigationStateContext\"));\nvar _UnhandledActionContext = _interopRequireDefault(require(\"./UnhandledActionContext\"));\nvar _useChildListeners2 = _interopRequireDefault(require(\"./useChildListeners\"));\nvar _useEventEmitter = _interopRequireDefault(require(\"./useEventEmitter\"));\nvar _useKeyedChildListeners = _interopRequireDefault(require(\"./useKeyedChildListeners\"));\nvar _useOptionsGetters2 = _interopRequireDefault(require(\"./useOptionsGetters\"));\nvar _useScheduleUpdate = require(\"./useScheduleUpdate\");\nvar _useSyncState3 = _interopRequireDefault(require(\"./useSyncState\"));\nvar _excluded = [\"key\", \"routeNames\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar serializableWarnings = [];\nvar duplicateNameWarnings = [];\nvar _getPartialState = function getPartialState(state) {\n  if (state === undefined) {\n    return;\n  }\n  var key = state.key,\n    routeNames = state.routeNames,\n    partialState = (0, _objectWithoutProperties2.default)(state, _excluded);\n  return Object.assign({}, partialState, {\n    stale: true,\n    routes: state.routes.map(function (route) {\n      if (route.state === undefined) {\n        return route;\n      }\n      return Object.assign({}, route, {\n        state: _getPartialState(route.state)\n      });\n    })\n  });\n};\nvar BaseNavigationContainer = React.forwardRef(function BaseNavigationContainer(_ref, ref) {\n  var initialState = _ref.initialState,\n    onStateChange = _ref.onStateChange,\n    onUnhandledAction = _ref.onUnhandledAction,\n    independent = _ref.independent,\n    children = _ref.children;\n  var parent = React.useContext(_NavigationStateContext.default);\n  if (!parent.isDefault && !independent) {\n    throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");\n  }\n  var _useSyncState = (0, _useSyncState3.default)(function () {\n      return _getPartialState(initialState == null ? undefined : initialState);\n    }),\n    _useSyncState2 = (0, _slicedToArray2.default)(_useSyncState, 5),\n    state = _useSyncState2[0],\n    getState = _useSyncState2[1],\n    setState = _useSyncState2[2],\n    scheduleUpdate = _useSyncState2[3],\n    flushUpdates = _useSyncState2[4];\n  var isFirstMountRef = React.useRef(true);\n  var navigatorKeyRef = React.useRef();\n  var getKey = React.useCallback(function () {\n    return navigatorKeyRef.current;\n  }, []);\n  var setKey = React.useCallback(function (key) {\n    navigatorKeyRef.current = key;\n  }, []);\n  var _useChildListeners = (0, _useChildListeners2.default)(),\n    listeners = _useChildListeners.listeners,\n    addListener = _useChildListeners.addListener;\n  var _useKeyedChildListene = (0, _useKeyedChildListeners.default)(),\n    keyedListeners = _useKeyedChildListene.keyedListeners,\n    addKeyedListener = _useKeyedChildListene.addKeyedListener;\n  var dispatch = React.useCallback(function (action) {\n    if (listeners.focus[0] == null) {\n      console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(action);\n      });\n    }\n  }, [listeners.focus]);\n  var canGoBack = React.useCallback(function () {\n    if (listeners.focus[0] == null) {\n      return false;\n    }\n    var _listeners$focus$ = listeners.focus[0](function (navigation) {\n        return navigation.canGoBack();\n      }),\n      result = _listeners$focus$.result,\n      handled = _listeners$focus$.handled;\n    if (handled) {\n      return result;\n    } else {\n      return false;\n    }\n  }, [listeners.focus]);\n  var resetRoot = React.useCallback(function (state) {\n    var _state$key, _keyedListeners$getSt, _keyedListeners$getSt2;\n    var target = (_state$key = state === null || state === void 0 ? void 0 : state.key) !== null && _state$key !== void 0 ? _state$key : (_keyedListeners$getSt = (_keyedListeners$getSt2 = keyedListeners.getState).root) === null || _keyedListeners$getSt === void 0 ? void 0 : _keyedListeners$getSt.call(_keyedListeners$getSt2).key;\n    if (target == null) {\n      console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);\n    } else {\n      listeners.focus[0](function (navigation) {\n        return navigation.dispatch(Object.assign({}, _routers.CommonActions.reset(state), {\n          target: target\n        }));\n      });\n    }\n  }, [keyedListeners.getState, listeners.focus]);\n  var getRootState = React.useCallback(function () {\n    var _keyedListeners$getSt3, _keyedListeners$getSt4;\n    return (_keyedListeners$getSt3 = (_keyedListeners$getSt4 = keyedListeners.getState).root) === null || _keyedListeners$getSt3 === void 0 ? void 0 : _keyedListeners$getSt3.call(_keyedListeners$getSt4);\n  }, [keyedListeners.getState]);\n  var getCurrentRoute = React.useCallback(function () {\n    var state = getRootState();\n    if (state == null) {\n      return undefined;\n    }\n    var route = (0, _findFocusedRoute.default)(state);\n    return route;\n  }, [getRootState]);\n  var emitter = (0, _useEventEmitter.default)();\n  var _useOptionsGetters = (0, _useOptionsGetters2.default)({}),\n    addOptionsGetter = _useOptionsGetters.addOptionsGetter,\n    getCurrentOptions = _useOptionsGetters.getCurrentOptions;\n  var navigation = React.useMemo(function () {\n    return Object.assign({}, Object.keys(_routers.CommonActions).reduce(function (acc, name) {\n      acc[name] = function () {\n        return (dispatch(_routers.CommonActions[name].apply(_routers.CommonActions, arguments))\n        );\n      };\n      return acc;\n    }, {}), emitter.create('root'), {\n      dispatch: dispatch,\n      resetRoot: resetRoot,\n      isFocused: function isFocused() {\n        return true;\n      },\n      canGoBack: canGoBack,\n      getParent: function getParent() {\n        return undefined;\n      },\n      getState: function getState() {\n        return stateRef.current;\n      },\n      getRootState: getRootState,\n      getCurrentRoute: getCurrentRoute,\n      getCurrentOptions: getCurrentOptions,\n      isReady: function isReady() {\n        return listeners.focus[0] != null;\n      }\n    });\n  }, [canGoBack, dispatch, emitter, getCurrentOptions, getCurrentRoute, getRootState, listeners.focus, resetRoot]);\n  React.useImperativeHandle(ref, function () {\n    return navigation;\n  }, [navigation]);\n  var onDispatchAction = React.useCallback(function (action, noop) {\n    emitter.emit({\n      type: '__unsafe_action__',\n      data: {\n        action: action,\n        noop: noop,\n        stack: stackRef.current\n      }\n    });\n  }, [emitter]);\n  var lastEmittedOptionsRef = React.useRef();\n  var onOptionsChange = React.useCallback(function (options) {\n    if (lastEmittedOptionsRef.current === options) {\n      return;\n    }\n    lastEmittedOptionsRef.current = options;\n    emitter.emit({\n      type: 'options',\n      data: {\n        options: options\n      }\n    });\n  }, [emitter]);\n  var stackRef = React.useRef();\n  var builderContext = React.useMemo(function () {\n    return {\n      addListener: addListener,\n      addKeyedListener: addKeyedListener,\n      onDispatchAction: onDispatchAction,\n      onOptionsChange: onOptionsChange,\n      stackRef: stackRef\n    };\n  }, [addListener, addKeyedListener, onDispatchAction, onOptionsChange]);\n  var scheduleContext = React.useMemo(function () {\n    return {\n      scheduleUpdate: scheduleUpdate,\n      flushUpdates: flushUpdates\n    };\n  }, [scheduleUpdate, flushUpdates]);\n  var isInitialRef = React.useRef(true);\n  var getIsInitial = React.useCallback(function () {\n    return isInitialRef.current;\n  }, []);\n  var context = React.useMemo(function () {\n    return {\n      state: state,\n      getState: getState,\n      setState: setState,\n      getKey: getKey,\n      setKey: setKey,\n      getIsInitial: getIsInitial,\n      addOptionsGetter: addOptionsGetter\n    };\n  }, [state, getState, setState, getKey, setKey, getIsInitial, addOptionsGetter]);\n  var onStateChangeRef = React.useRef(onStateChange);\n  var stateRef = React.useRef(state);\n  React.useEffect(function () {\n    isInitialRef.current = false;\n    onStateChangeRef.current = onStateChange;\n    stateRef.current = state;\n  });\n  React.useEffect(function () {\n    var hydratedState = getRootState();\n    if (process.env.NODE_ENV !== 'production') {\n      if (hydratedState !== undefined) {\n        var serializableResult = (0, _checkSerializable.default)(hydratedState);\n        if (!serializableResult.serializable) {\n          var location = serializableResult.location,\n            reason = serializableResult.reason;\n          var path = '';\n          var pointer = hydratedState;\n          var params = false;\n          for (var i = 0; i < location.length; i++) {\n            var curr = location[i];\n            var prev = location[i - 1];\n            pointer = pointer[curr];\n            if (!params && curr === 'state') {\n              continue;\n            } else if (!params && curr === 'routes') {\n              if (path) {\n                path += ' > ';\n              }\n            } else if (!params && typeof curr === 'number' && prev === 'routes') {\n              var _pointer;\n              path += (_pointer = pointer) === null || _pointer === void 0 ? void 0 : _pointer.name;\n            } else if (!params) {\n              path += \" > \" + curr;\n              params = true;\n            } else {\n              if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                path += \"[\" + curr + \"]\";\n              } else if (/^[a-z$_]+$/i.test(curr)) {\n                path += \".\" + curr;\n              } else {\n                path += \"[\" + JSON.stringify(curr) + \"]\";\n              }\n            }\n          }\n          var message = \"Non-serializable values were found in the navigation state. Check:\\n\\n\" + path + \" (\" + reason + \")\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.\";\n          if (!serializableWarnings.includes(message)) {\n            serializableWarnings.push(message);\n            console.warn(message);\n          }\n        }\n        var duplicateRouteNamesResult = (0, _checkDuplicateRouteNames.default)(hydratedState);\n        if (duplicateRouteNamesResult.length) {\n          var _message = \"Found screens with the same name nested inside one another. Check:\\n\" + duplicateRouteNamesResult.map(function (locations) {\n            return \"\\n\" + locations.join(', ');\n          }) + \"\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.\";\n          if (!duplicateNameWarnings.includes(_message)) {\n            duplicateNameWarnings.push(_message);\n            console.warn(_message);\n          }\n        }\n      }\n    }\n    emitter.emit({\n      type: 'state',\n      data: {\n        state: state\n      }\n    });\n    if (!isFirstMountRef.current && onStateChangeRef.current) {\n      onStateChangeRef.current(hydratedState);\n    }\n    isFirstMountRef.current = false;\n  }, [getRootState, emitter, state]);\n  var defaultOnUnhandledAction = React.useCallback(function (action) {\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    var payload = action.payload;\n    var message = \"The action '\" + action.type + \"'\" + (payload ? \" with payload \" + JSON.stringify(action.payload) : '') + \" was not handled by any navigator.\";\n    switch (action.type) {\n      case 'NAVIGATE':\n      case 'PUSH':\n      case 'REPLACE':\n      case 'JUMP_TO':\n        if (payload !== null && payload !== void 0 && payload.name) {\n          message += \"\\n\\nDo you have a screen named '\" + payload.name + \"'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\";\n        } else {\n          message += \"\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.\";\n        }\n        break;\n      case 'GO_BACK':\n      case 'POP':\n      case 'POP_TO_TOP':\n        message += \"\\n\\nIs there any screen to go back to?\";\n        break;\n      case 'OPEN_DRAWER':\n      case 'CLOSE_DRAWER':\n      case 'TOGGLE_DRAWER':\n        message += \"\\n\\nIs your screen inside a Drawer navigator?\";\n        break;\n    }\n    message += \"\\n\\nThis is a development-only warning and won't be shown in production.\";\n    console.error(message);\n  }, []);\n  var element = React.createElement(_NavigationContainerRefContext.default.Provider, {\n    value: navigation\n  }, React.createElement(_useScheduleUpdate.ScheduleUpdateContext.Provider, {\n    value: scheduleContext\n  }, React.createElement(_NavigationBuilderContext.default.Provider, {\n    value: builderContext\n  }, React.createElement(_NavigationStateContext.default.Provider, {\n    value: context\n  }, React.createElement(_UnhandledActionContext.default.Provider, {\n    value: onUnhandledAction !== null && onUnhandledAction !== void 0 ? onUnhandledAction : defaultOnUnhandledAction\n  }, React.createElement(_EnsureSingleNavigator.default, null, children))))));\n  if (independent) {\n    element = React.createElement(_NavigationRouteContext.default.Provider, {\n      value: undefined\n    }, React.createElement(_NavigationContext.default.Provider, {\n      value: undefined\n    }, element));\n  }\n  return element;\n});\nvar _default = exports.default = BaseNavigationContainer;","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_checkDuplicateRouteNames","_interopRequireDefault","_checkSerializable","_createNavigationContainerRef","_EnsureSingleNavigator","_findFocusedRoute","_NavigationBuilderContext","_NavigationContainerRefContext","_NavigationContext","_NavigationRouteContext","_NavigationStateContext","_UnhandledActionContext","_useChildListeners2","_useEventEmitter","_useKeyedChildListeners","_useOptionsGetters2","_useScheduleUpdate","_useSyncState3","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","_objectWithoutProperties2","assign","stale","routes","map","route","BaseNavigationContainer","forwardRef","_ref","ref","initialState","onStateChange","onUnhandledAction","independent","children","parent","useContext","NavigationStateContext","isDefault","Error","_useSyncState","useSyncState","_useSyncState2","_slicedToArray2","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","_useChildListeners","useChildListeners","listeners","addListener","_useKeyedChildListene","useKeyedChildListeners","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","NOT_INITIALIZED_ERROR","navigation","canGoBack","_listeners$focus$","result","handled","resetRoot","_state$key","_keyedListeners$getSt","_keyedListeners$getSt2","target","root","CommonActions","reset","getRootState","_keyedListeners$getSt3","_keyedListeners$getSt4","getCurrentRoute","findFocusedRoute","emitter","useEventEmitter","_useOptionsGetters","useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","keys","reduce","acc","name","apply","arguments","create","isFocused","getParent","stateRef","isReady","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","checkSerializable","serializable","location","reason","path","pointer","params","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","checkDuplicateRouteNames","locations","join","defaultOnUnhandledAction","payload","element","createElement","NavigationContainerRefContext","Provider","value","ScheduleUpdateContext","NavigationBuilderContext","UnhandledActionContext","EnsureSingleNavigator","NavigationRouteContext","NavigationContext","_default","exports"],"sources":["/home/admin/openracetiming/node_modules/@react-navigation/core/lib/module/BaseNavigationContainer.tsx"],"sourcesContent":["import {\n  CommonActions,\n  InitialState,\n  NavigationAction,\n  NavigationState,\n  ParamListBase,\n  PartialState,\n  Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport checkSerializable from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport findFocusedRoute from './findFocusedRoute';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationContainerRefContext from './NavigationContainerRefContext';\nimport NavigationContext from './NavigationContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport useChildListeners from './useChildListeners';\nimport useEventEmitter from './useEventEmitter';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useSyncState from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [state, getState, setState, scheduleUpdate, flushUpdates] =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = React.useCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      },\n      [listeners.focus]\n    );\n\n    const canGoBack = React.useCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    }, [listeners.focus]);\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState: () => stateRef.current,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady: () => listeners.focus[0] != null,\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        listeners.focus,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        stackRef,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n    const stateRef = React.useRef(state);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      stateRef.current = state;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <NavigationContainerRefContext.Provider value={navigation}>\n        <ScheduleUpdateContext.Provider value={scheduleContext}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </ScheduleUpdateContext.Provider>\n      </NavigationContainerRefContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"],"mappings":";;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AASA,IAAAC,KAAA,GAAAC,uBAAA,CAAAF,OAAA;AAEA,IAAAG,yBAAA,GAAAC,sBAAA,CAAAJ,OAAA;AACA,IAAAK,kBAAA,GAAAD,sBAAA,CAAAJ,OAAA;AACA,IAAAM,6BAAA,GAAAN,OAAA;AACA,IAAAO,sBAAA,GAAAH,sBAAA,CAAAJ,OAAA;AACA,IAAAQ,iBAAA,GAAAJ,sBAAA,CAAAJ,OAAA;AACA,IAAAS,yBAAA,GAAAL,sBAAA,CAAAJ,OAAA;AACA,IAAAU,8BAAA,GAAAN,sBAAA,CAAAJ,OAAA;AACA,IAAAW,kBAAA,GAAAP,sBAAA,CAAAJ,OAAA;AACA,IAAAY,uBAAA,GAAAR,sBAAA,CAAAJ,OAAA;AACA,IAAAa,uBAAA,GAAAT,sBAAA,CAAAJ,OAAA;AAMA,IAAAc,uBAAA,GAAAV,sBAAA,CAAAJ,OAAA;AACA,IAAAe,mBAAA,GAAAX,sBAAA,CAAAJ,OAAA;AACA,IAAAgB,gBAAA,GAAAZ,sBAAA,CAAAJ,OAAA;AACA,IAAAiB,uBAAA,GAAAb,sBAAA,CAAAJ,OAAA;AACA,IAAAkB,mBAAA,GAAAd,sBAAA,CAAAJ,OAAA;AACA,IAAAmB,kBAAA,GAAAnB,OAAA;AACA,IAAAoB,cAAA,GAAAhB,sBAAA,CAAAJ,OAAA;AAAA,IAAAqB,SAAA;AAAA,SAAAnB,wBAAAoB,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAtB,uBAAA,YAAAA,wBAAAoB,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAIA,IAAMmB,oBAA8B,GAAG,EAAvC;AACA,IAAMC,qBAA+B,GAAG,EAAxC;AAOA,IAAMC,gBAAe,GACnB,SADIA,eAAeA,CACnBC,KADsB,EAEwB;EAC9C,IAAIA,KAAK,KAAKC,SAAd,EAAyB;IACvB;EACD;EAGD,IAAQC,GAAF,GAAuCF,KAA7C,CAAQE,GAAF;IAAOC,UAAP,GAAuCH,KAA7C,CAAaG,UAAP;IAAsBC,YAAA,OAAAC,yBAAA,CAAAlB,OAAA,EAAiBa,KAA7C,EAAAxB,SAAA;EAEA,OAAAkB,MAAA,CAAAY,MAAA,KACKF,YADE;IAELG,KAAK,EAAE,IAFF;IAGLC,MAAM,EAAER,KAAK,CAACQ,MAAN,CAAaC,GAAb,CAAkB,UAAAC,KAAD,EAAW;MAClC,IAAIA,KAAK,CAACV,KAAN,KAAgBC,SAApB,EAA+B;QAC7B,OAAOS,KAAP;MAGD;MAED,OAAAhB,MAAA,CAAAY,MAAA,KAAYI,KAAL;QAAYV,KAAK,EAAED,gBAAe,CAACW,KAAK,CAACV,KAAP;MAAA;IAC1C,CARO;EAAA;AAUX,CAvBD;AAkCA,IAAMW,uBAAuB,GAAGvD,KAAK,CAACwD,UAAN,CAC9B,SAASD,uBAATA,CAAAE,IAAA,EAQEC,GARF,EASE;EAAA,IAPEC,YADF,GAQAF,IAAA,CAPEE,YADF;IAEEC,aAFF,GAQAH,IAAA,CANEG,aAFF;IAGEC,iBAHF,GAQAJ,IAAA,CALEI,iBAHF;IAIEC,WAJF,GAQAL,IAAA,CAJEK,WAJF;IAKEC,QAAA,GAGFN,IAAA,CAHEM,QAAA;EAIF,IAAMC,MAAM,GAAGhE,KAAK,CAACiE,UAAN,CAAiBC,+BAAjB,CAAf;EAEA,IAAI,CAACF,MAAM,CAACG,SAAR,IAAqB,CAACL,WAA1B,EAAuC;IACrC,MAAM,IAAIM,KAAJ,CACJ,0VADI,CAAN;EAGD;EAED,IAAAC,aAAA,GACE,IAAAC,sBAAY,EAAQ;MAAA,OAClB3B,gBAAe,CAACgB,YAAY,IAAI,IAAhB,GAAuBd,SAAvB,GAAmCc,YAApC,CADL;IAAA,EADd;IAAAY,cAAA,OAAAC,eAAA,CAAAzC,OAAA,EAAAsC,aAAA;IAAOzB,KAAD,GAAA2B,cAAA;IAAQE,QAAR,GAAAF,cAAA;IAAkBG,QAAlB,GAAAH,cAAA;IAA4BI,cAA5B,GAAAJ,cAAA;IAA4CK,YAA5C,GAAAL,cAAA;EAKN,IAAMM,eAAe,GAAG7E,KAAK,CAAC8E,MAAN,CAAsB,IAAtB,CAAxB;EAEA,IAAMC,eAAe,GAAG/E,KAAK,CAAC8E,MAAN,EAAxB;EAEA,IAAME,MAAM,GAAGhF,KAAK,CAACiF,WAAN,CAAkB;IAAA,OAAMF,eAAe,CAACG,OAAxC;EAAA,GAAiD,EAAjD,CAAf;EAEA,IAAMC,MAAM,GAAGnF,KAAK,CAACiF,WAAN,CAAmB,UAAAnC,GAAD,EAAiB;IAChDiC,eAAe,CAACG,OAAhB,GAA0BpC,GAA1B;EACD,CAFc,EAEZ,EAFY,CAAf;EAIA,IAAAsC,kBAAA,GAAmC,IAAAC,2BAAiB,GAApD;IAAQC,SAAF,GAAAF,kBAAA,CAAEE,SAAF;IAAaC,WAAA,GAAAH,kBAAA,CAAAG,WAAA;EAEnB,IAAAC,qBAAA,GAA6C,IAAAC,+BAAsB,GAAnE;IAAQC,cAAF,GAAAF,qBAAA,CAAEE,cAAF;IAAkBC,gBAAA,GAAAH,qBAAA,CAAAG,gBAAA;EAExB,IAAMC,QAAQ,GAAG5F,KAAK,CAACiF,WAAN,CAEb,UAAAY,MADF,EAIK;IACH,IAAIP,SAAS,CAACQ,KAAV,CAAgB,CAAhB,KAAsB,IAA1B,EAAgC;MAC9BC,OAAO,CAACC,KAAR,CAAcC,mDAAd;IACD,CAFD,MAEO;MACLX,SAAS,CAACQ,KAAV,CAAgB,CAAhB,EAAoB,UAAAI,UAAD;QAAA,OAAgBA,UAAU,CAACN,QAAX,CAAoBC,MAApB,CAAnC;MAAA;IACD;EACF,CAXc,EAYf,CAACP,SAAS,CAACQ,KAAX,CAZe,CAAjB;EAeA,IAAMK,SAAS,GAAGnG,KAAK,CAACiF,WAAN,CAAkB,YAAM;IACxC,IAAIK,SAAS,CAACQ,KAAV,CAAgB,CAAhB,KAAsB,IAA1B,EAAgC;MAC9B,OAAO,KAAP;IACD;IAED,IAAAM,iBAAA,GAA4Bd,SAAS,CAACQ,KAAV,CAAgB,CAAhB,EAAoB,UAAAI,UAAD;QAAA,OAC7CA,UAAU,CAACC,SAAX,EAD0B;MAAA,EAA5B;MAAQE,MAAF,GAAAD,iBAAA,CAAEC,MAAF;MAAUC,OAAA,GAAAF,iBAAA,CAAAE,OAAA;IAIhB,IAAIA,OAAJ,EAAa;MACX,OAAOD,MAAP;IACD,CAFD,MAEO;MACL,OAAO,KAAP;IACD;EACF,CAdiB,EAcf,CAACf,SAAS,CAACQ,KAAX,CAde,CAAlB;EAgBA,IAAMS,SAAS,GAAGvG,KAAK,CAACiF,WAAN,CACf,UAAArC,KAAD,EAA6D;IAAA,IAAA4D,UAAA,EAAAC,qBAAA,EAAAC,sBAAA;IAC3D,IAAMC,MAAM,IAAAH,UAAA,GAAG5D,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,GAAV,cAAA0D,UAAA,cAAAA,UAAA,IAAAC,qBAAA,GAAiB,CAAAC,sBAAA,GAAAhB,cAAc,CAACjB,QAAf,EAAwBmC,IAAzC,cAAAH,qBAAA,uBAAiBA,qBAAA,CAAApE,IAAA,CAAAqE,sBAAA,EAAiC5D,GAA9D;IAEA,IAAI6D,MAAM,IAAI,IAAd,EAAoB;MAClBZ,OAAO,CAACC,KAAR,CAAcC,mDAAd;IACD,CAFD,MAEO;MACLX,SAAS,CAACQ,KAAV,CAAgB,CAAhB,EAAoB,UAAAI,UAAD;QAAA,OACjBA,UAAU,CAACN,QAAX,CAAAtD,MAAA,CAAAY,MAAA,KACK2D,sBAAa,CAACC,KAAd,CAAoBlE,KAApB,CADe;UAElB+D,MAAA,EAAAA;QAAA,EAFF,CADF;MAAA;IAMD;EACF,CAde,EAehB,CAACjB,cAAc,CAACjB,QAAhB,EAA0Ba,SAAS,CAACQ,KAApC,CAfgB,CAAlB;EAkBA,IAAMiB,YAAY,GAAG/G,KAAK,CAACiF,WAAN,CAAkB,YAAM;IAAA,IAAA+B,sBAAA,EAAAC,sBAAA;IAC3C,QAAAD,sBAAA,GAAO,CAAAC,sBAAA,GAAAvB,cAAc,CAACjB,QAAf,EAAwBmC,IAA/B,cAAAI,sBAAA,uBAAOA,sBAAA,CAAA3E,IAAA,CAAA4E,sBAAA,CAAP;EACD,CAFoB,EAElB,CAACvB,cAAc,CAACjB,QAAhB,CAFkB,CAArB;EAIA,IAAMyC,eAAe,GAAGlH,KAAK,CAACiF,WAAN,CAAkB,YAAM;IAC9C,IAAMrC,KAAK,GAAGmE,YAAY,EAA1B;IAEA,IAAInE,KAAK,IAAI,IAAb,EAAmB;MACjB,OAAOC,SAAP;IACD;IAED,IAAMS,KAAK,GAAG,IAAA6D,yBAAgB,EAACvE,KAAD,CAA9B;IAEA,OAAOU,KAAP;EACD,CAVuB,EAUrB,CAACyD,YAAD,CAVqB,CAAxB;EAYA,IAAMK,OAAO,GAAG,IAAAC,wBAAe,GAA/B;EAEA,IAAAC,kBAAA,GAAgD,IAAAC,2BAAiB,EAAC,EAAD,CAAjE;IAAQC,gBAAF,GAAAF,kBAAA,CAAEE,gBAAF;IAAoBC,iBAAA,GAAAH,kBAAA,CAAAG,iBAAA;EAE1B,IAAMvB,UAAiD,GAAGlG,KAAK,CAAC0H,OAAN,CACxD;IAAA,OAAApF,MAAA,CAAAY,MAAA,KACKZ,MAAM,CAACqF,IAAP,CAAYd,sBAAZ,EAA2Be,MAA3B,CAAuC,UAACC,GAAD,EAAMC,IAAN,EAAe;MACvDD,GAAG,CAACC,IAAD,CAAH,GAAY;QAAA,QAEVlC,QAAQ,CAACiB,sBAAa,CAACiB,IAAD,CAAb,CAAAC,KAAA,CAAAlB,sBAAa,EAAOmB,SAApB,CAAD;QAAA;MAFE,CAAZ;MAGA,OAAOH,GAAP;IACD,CALE,EAKA,EALA,CADE,EAOFT,OAAO,CAACa,MAAR,CAAe,MAAf,CAPE;MAQLrC,QARK,EAQLA,QARK;MASLW,SATK,EASLA,SATK;MAUL2B,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,OAAQ,IAVZ;MAAA;MAWL/B,SAXK,EAWLA,SAXK;MAYLgC,SAAS,EAAE,SAAXA,SAASA,CAAA;QAAA,OAAQtF,SAZZ;MAAA;MAaL4B,QAAQ,EAAE,SAAVA,QAAQA,CAAA;QAAA,OAAQ2D,QAAQ,CAAClD,OAbpB;MAAA;MAcL6B,YAdK,EAcLA,YAdK;MAeLG,eAfK,EAeLA,eAfK;MAgBLO,iBAhBK,EAgBLA,iBAhBK;MAiBLY,OAAO,EAAE,SAATA,OAAOA,CAAA;QAAA,OAAQ/C,SAAS,CAACQ,KAAV,CAAgB,CAAhB,KAAsB;MAAA;IAAA;EAAA,CAlBiB,EAoBxD,CACEK,SADF,EAEEP,QAFF,EAGEwB,OAHF,EAIEK,iBAJF,EAKEP,eALF,EAMEH,YANF,EAOEzB,SAAS,CAACQ,KAPZ,EAQES,SARF,CApBwD,CAA1D;EAgCAvG,KAAK,CAACsI,mBAAN,CAA0B5E,GAA1B,EAA+B;IAAA,OAAMwC,UAArC;EAAA,GAAiD,CAACA,UAAD,CAAjD;EAEA,IAAMqC,gBAAgB,GAAGvI,KAAK,CAACiF,WAAN,CACvB,UAACY,MAAD,EAA2B2C,IAA3B,EAA6C;IAC3CpB,OAAO,CAACqB,IAAR,CAAa;MACXC,IAAI,EAAE,mBADK;MAEXC,IAAI,EAAE;QAAE9C,MAAF,EAAEA,MAAF;QAAU2C,IAAV,EAAUA,IAAV;QAAgBI,KAAK,EAAEC,QAAQ,CAAC3D;MAAhC;IAFK,CAAb;EAID,CANsB,EAOvB,CAACkC,OAAD,CAPuB,CAAzB;EAUA,IAAM0B,qBAAqB,GAAG9I,KAAK,CAAC8E,MAAN,EAA9B;EAEA,IAAMiE,eAAe,GAAG/I,KAAK,CAACiF,WAAN,CACrB,UAAA+D,OAAD,EAAa;IACX,IAAIF,qBAAqB,CAAC5D,OAAtB,KAAkC8D,OAAtC,EAA+C;MAC7C;IACD;IAEDF,qBAAqB,CAAC5D,OAAtB,GAAgC8D,OAAhC;IAEA5B,OAAO,CAACqB,IAAR,CAAa;MACXC,IAAI,EAAE,SADK;MAEXC,IAAI,EAAE;QAAEK,OAAA,EAAAA;MAAF;IAFK,CAAb;EAID,CAZqB,EAatB,CAAC5B,OAAD,CAbsB,CAAxB;EAgBA,IAAMyB,QAAQ,GAAG7I,KAAK,CAAC8E,MAAN,EAAjB;EAEA,IAAMmE,cAAc,GAAGjJ,KAAK,CAAC0H,OAAN,CACrB;IAAA,OAAO;MACLnC,WADK,EACLA,WADK;MAELI,gBAFK,EAELA,gBAFK;MAGL4C,gBAHK,EAGLA,gBAHK;MAILQ,eAJK,EAILA,eAJK;MAKLF,QAAA,EAAAA;IALK,CAAP;EAAA,CADqB,EAQrB,CAACtD,WAAD,EAAcI,gBAAd,EAAgC4C,gBAAhC,EAAkDQ,eAAlD,CARqB,CAAvB;EAWA,IAAMG,eAAe,GAAGlJ,KAAK,CAAC0H,OAAN,CACtB;IAAA,OAAO;MAAE/C,cAAF,EAAEA,cAAF;MAAkBC,YAAA,EAAAA;IAAlB,CAAP;EAAA,CADsB,EAEtB,CAACD,cAAD,EAAiBC,YAAjB,CAFsB,CAAxB;EAKA,IAAMuE,YAAY,GAAGnJ,KAAK,CAAC8E,MAAN,CAAa,IAAb,CAArB;EAEA,IAAMsE,YAAY,GAAGpJ,KAAK,CAACiF,WAAN,CAAkB;IAAA,OAAMkE,YAAY,CAACjE,OAArC;EAAA,GAA8C,EAA9C,CAArB;EAEA,IAAMmE,OAAO,GAAGrJ,KAAK,CAAC0H,OAAN,CACd;IAAA,OAAO;MACL9E,KADK,EACLA,KADK;MAEL6B,QAFK,EAELA,QAFK;MAGLC,QAHK,EAGLA,QAHK;MAILM,MAJK,EAILA,MAJK;MAKLG,MALK,EAKLA,MALK;MAMLiE,YANK,EAMLA,YANK;MAOL5B,gBAAA,EAAAA;IAPK,CAAP;EAAA,CADc,EAUd,CACE5E,KADF,EAEE6B,QAFF,EAGEC,QAHF,EAIEM,MAJF,EAKEG,MALF,EAMEiE,YANF,EAOE5B,gBAPF,CAVc,CAAhB;EAqBA,IAAM8B,gBAAgB,GAAGtJ,KAAK,CAAC8E,MAAN,CAAalB,aAAb,CAAzB;EACA,IAAMwE,QAAQ,GAAGpI,KAAK,CAAC8E,MAAN,CAAalC,KAAb,CAAjB;EAEA5C,KAAK,CAACuJ,SAAN,CAAgB,YAAM;IACpBJ,YAAY,CAACjE,OAAb,GAAuB,KAAvB;IACAoE,gBAAgB,CAACpE,OAAjB,GAA2BtB,aAA3B;IACAwE,QAAQ,CAAClD,OAAT,GAAmBtC,KAAnB;EACD,CAJD;EAMA5C,KAAK,CAACuJ,SAAN,CAAgB,YAAM;IACpB,IAAMC,aAAa,GAAGzC,YAAY,EAAlC;IAEA,IAAI0C,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAIH,aAAa,KAAK3G,SAAtB,EAAiC;QAC/B,IAAM+G,kBAAkB,GAAG,IAAAC,0BAAiB,EAACL,aAAD,CAA5C;QAEA,IAAI,CAACI,kBAAkB,CAACE,YAAxB,EAAsC;UACpC,IAAQC,QAAF,GAAuBH,kBAA7B,CAAQG,QAAF;YAAYC,MAAA,GAAWJ,kBAA7B,CAAkBI,MAAA;UAElB,IAAIC,IAAI,GAAG,EAAX;UACA,IAAIC,OAAyB,GAAGV,aAAhC;UACA,IAAIW,MAAM,GAAG,KAAb;UAEA,KAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmI,QAAQ,CAACK,MAA7B,EAAqCxI,CAAC,EAAtC,EAA0C;YACxC,IAAMyI,IAAI,GAAGN,QAAQ,CAACnI,CAAD,CAArB;YACA,IAAM0I,IAAI,GAAGP,QAAQ,CAACnI,CAAC,GAAG,CAAL,CAArB;YAEAsI,OAAO,GAAGA,OAAO,CAACG,IAAD,CAAjB;YAEA,IAAI,CAACF,MAAD,IAAWE,IAAI,KAAK,OAAxB,EAAiC;cAC/B;YACD,CAFD,MAEO,IAAI,CAACF,MAAD,IAAWE,IAAI,KAAK,QAAxB,EAAkC;cACvC,IAAIJ,IAAJ,EAAU;gBACRA,IAAI,IAAI,KAAR;cACD;YACF,CAJM,MAIA,IACL,CAACE,MAAD,IACA,OAAOE,IAAP,KAAgB,QADhB,IAEAC,IAAI,KAAK,QAHJ,EAIL;cAAA,IAAAC,QAAA;cACAN,IAAI,KAAAM,QAAA,GAAIL,OAAJ,cAAAK,QAAA,uBAAIA,QAAA,CAASzC,IAAjB;YACD,CANM,MAMA,IAAI,CAACqC,MAAL,EAAa;cAClBF,IAAI,YAAUI,IAAd;cACAF,MAAM,GAAG,IAAT;YACD,CAHM,MAGA;cACL,IAAI,OAAOE,IAAP,KAAgB,QAAhB,IAA4B,WAAWG,IAAX,CAAgBH,IAAhB,CAAhC,EAAuD;gBACrDJ,IAAI,UAAQI,IAAK,MAAjB;cACD,CAFD,MAEO,IAAI,cAAcG,IAAd,CAAmBH,IAAnB,CAAJ,EAA8B;gBACnCJ,IAAI,UAAQI,IAAZ;cACD,CAFM,MAEA;gBACLJ,IAAI,UAAQQ,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAqB,MAAjC;cACD;YACF;UACF;UAED,IAAMM,OAAO,8EAA4EV,IAAK,UAAID,MAAO,+aAAzG;UAEA,IAAI,CAACvH,oBAAoB,CAACmI,QAArB,CAA8BD,OAA9B,CAAL,EAA6C;YAC3ClI,oBAAoB,CAACoI,IAArB,CAA0BF,OAA1B;YACA5E,OAAO,CAAC+E,IAAR,CAAaH,OAAb;UACD;QACF;QAED,IAAMI,yBAAyB,GAC7B,IAAAC,iCAAwB,EAACxB,aAAD,CAD1B;QAGA,IAAIuB,yBAAyB,CAACX,MAA9B,EAAsC;UACpC,IAAMO,QAAO,4EAA0EI,yBAAyB,CAAC1H,GAA1B,CACpF,UAAA4H,SAAD;YAAA,cAAoBA,SAAS,CAACC,IAAV,CAAe,IAAf,CAAqB;UAAA,CAD4C,CAErF,kHAFF;UAIA,IAAI,CAACxI,qBAAqB,CAACkI,QAAtB,CAA+BD,QAA/B,CAAL,EAA8C;YAC5CjI,qBAAqB,CAACmI,IAAtB,CAA2BF,QAA3B;YACA5E,OAAO,CAAC+E,IAAR,CAAaH,QAAb;UACD;QACF;MACF;IACF;IAEDvD,OAAO,CAACqB,IAAR,CAAa;MAAEC,IAAI,EAAE,OAAR;MAAiBC,IAAI,EAAE;QAAE/F,KAAA,EAAAA;MAAF;IAAvB,CAAb;IAEA,IAAI,CAACiC,eAAe,CAACK,OAAjB,IAA4BoE,gBAAgB,CAACpE,OAAjD,EAA0D;MACxDoE,gBAAgB,CAACpE,OAAjB,CAAyBsE,aAAzB;IACD;IAED3E,eAAe,CAACK,OAAhB,GAA0B,KAA1B;EACD,CA7ED,EA6EG,CAAC6B,YAAD,EAAeK,OAAf,EAAwBxE,KAAxB,CA7EH;EA+EA,IAAMuI,wBAAwB,GAAGnL,KAAK,CAACiF,WAAN,CAC9B,UAAAY,MAAD,EAA8B;IAC5B,IAAI4D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC;IACD;IAED,IAAMyB,OAAwC,GAAGvF,MAAM,CAACuF,OAAxD;IAEA,IAAIT,OAAO,oBAAkB9E,MAAM,CAAC6C,IAAK,UACvC0C,OAAO,sBAAoBX,IAAI,CAACC,SAAL,CAAe7E,MAAM,CAACuF,OAAtB,CAA+B,GAAI,EAC/D,wCAFD;IAIA,QAAQvF,MAAM,CAAC6C,IAAf;MACE,KAAK,UAAL;MACA,KAAK,MAAL;MACA,KAAK,SAAL;MACA,KAAK,SAAL;QACE,IAAI0C,OAAJ,aAAIA,OAAJ,eAAIA,OAAO,CAAEtD,IAAb,EAAmB;UACjB6C,OAAO,yCAAuCS,OAAO,CAACtD,IAAK,gLAA3D;QACD,CAFD,MAEO;UACL6C,OAAO,uIAAP;QACD;QAED;MACF,KAAK,SAAL;MACA,KAAK,KAAL;MACA,KAAK,YAAL;QACEA,OAAO,4CAAP;QACA;MACF,KAAK,aAAL;MACA,KAAK,cAAL;MACA,KAAK,eAAL;QACEA,OAAO,mDAAP;QACA;IArBJ;IAwBAA,OAAO,8EAAP;IAEA5E,OAAO,CAACC,KAAR,CAAc2E,OAAd;EACD,CAvC8B,EAwC/B,EAxC+B,CAAjC;EA2CA,IAAIU,OAAO,GACTrL,KAAA,CAAAsL,aAAA,CAACC,sCAAD,CAA+BC,QAA/B;IAAwCC,KAAK,EAAEvF;EAA/C,GACElG,KAAA,CAAAsL,aAAA,CAACI,wCAAD,CAAuBF,QAAvB;IAAgCC,KAAK,EAAEvC;EAAvC,GACElJ,KAAA,CAAAsL,aAAA,CAACK,iCAAD,CAA0BH,QAA1B;IAAmCC,KAAK,EAAExC;EAA1C,GACEjJ,KAAA,CAAAsL,aAAA,CAACpH,+BAAD,CAAwBsH,QAAxB;IAAiCC,KAAK,EAAEpC;EAAxC,GACErJ,KAAA,CAAAsL,aAAA,CAACM,+BAAD,CAAwBJ,QAAxB;IACEC,KAAK,EAAE5H,iBAAF,aAAEA,iBAAF,cAAEA,iBAAF,GAAuBsH;EAD9B,GAGEnL,KAAA,CAAAsL,aAAA,CAACO,8BAAD,QAAwB9H,QAAxB,CAHF,CADF,CADF,CADF,CADF,CADF;EAgBA,IAAID,WAAJ,EAAiB;IAEfuH,OAAO,GACLrL,KAAA,CAAAsL,aAAA,CAACQ,+BAAD,CAAwBN,QAAxB;MAAiCC,KAAK,EAAE5I;IAAxC,GACE7C,KAAA,CAAAsL,aAAA,CAACS,0BAAD,CAAmBP,QAAnB;MAA4BC,KAAK,EAAE5I;IAAnC,GACGwI,OADH,CADF,CADF;EAOD;EAED,OAAOA,OAAP;AACD,CAnX6B,CAAhC;AAAA,IAAAW,QAAA,GAAAC,OAAA,CAAAlK,OAAA,GAsXewB,uBAAf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}