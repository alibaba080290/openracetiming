{"ast":null,"code":"var _require = require('./ndef'),\n  createNdefRecord = _require.createNdefRecord,\n  encodeNdefMessage = _require.encodeNdefMessage,\n  decodeNdefMessage = _require.decodeNdefMessage,\n  equalToRecordType = _require.equalToRecordType;\nvar constants = require('./constants');\nvar util = require('./util');\nvar textHelper = require('./ndef-text');\nvar uriHelper = require('./ndef-uri');\nvar wifiSimpleHelper = require('./ndef-wifi-simple');\nvar stringifier = require('./stringifier');\nvar PrimitiveRecord = {\n  emptyRecord: function emptyRecord() {\n    return createNdefRecord(constants.TNF_EMPTY, [], [], []);\n  },\n  absoluteUriRecord: function absoluteUriRecord(uri) {\n    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createNdefRecord(constants.TNF_ABSOLUTE_URI, uri, id, payload);\n  },\n  mimeMediaRecord: function mimeMediaRecord(mimeType, payload) {\n    var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createNdefRecord(constants.TNF_MIME_MEDIA, mimeType, id, payload);\n  },\n  externalTypeRecord: function externalTypeRecord(externalType, payload) {\n    var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createNdefRecord(constants.TNF_EXTERNAL_TYPE, externalType, id, payload);\n  }\n};\nvar WellKnownRecord = {\n  textRecord: function textRecord(text, languageCode) {\n    var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createNdefRecord(constants.TNF_WELL_KNOWN, constants.RTD_TEXT, id, textHelper.encodePayload(text, languageCode));\n  },\n  uriRecord: function uriRecord(uri) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return createNdefRecord(constants.TNF_WELL_KNOWN, constants.RTD_URI, id, uriHelper.encodePayload(uri));\n  },\n  smartPoster: function smartPoster(ndefRecords) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var payload = [];\n    if (ndefRecords) {\n      if (ndefRecords[0] instanceof Object && ndefRecords[0].hasOwnProperty('tnf')) {\n        payload = encodeNdefMessage(ndefRecords);\n      } else {\n        payload = ndefRecords;\n      }\n    } else {\n      console.log('WARNING: Expecting an array of NDEF records');\n    }\n    return createNdefRecord(constants.TNF_WELL_KNOWN, constants.RTD_SMART_POSTER, id, payload);\n  }\n};\nvar ExtraTypeRecord = {\n  androidApplicationRecord: function androidApplicationRecord(packageName) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    return PrimitiveRecord.externalTypeRecord('android.com:pkg', packageName, id);\n  },\n  wifiSimpleRecord: function wifiSimpleRecord(credentials) {\n    var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var payload = wifiSimpleHelper.encodePayload(credentials);\n    return PrimitiveRecord.mimeMediaRecord(constants.MIME_WFA_WSC, payload, id);\n  }\n};\nvar NDEF = Object.assign({}, constants, PrimitiveRecord, WellKnownRecord, ExtraTypeRecord, {\n  record: createNdefRecord,\n  encodeMessage: encodeNdefMessage,\n  decodeMessage: decodeNdefMessage,\n  isType: equalToRecordType,\n  text: textHelper,\n  uri: uriHelper,\n  wifiSimple: wifiSimpleHelper,\n  util: util,\n  stringify: stringifier.stringify\n});\nmodule.exports = NDEF;","map":{"version":3,"names":["_require","require","createNdefRecord","encodeNdefMessage","decodeNdefMessage","equalToRecordType","constants","util","textHelper","uriHelper","wifiSimpleHelper","stringifier","PrimitiveRecord","emptyRecord","TNF_EMPTY","absoluteUriRecord","uri","payload","arguments","length","undefined","id","TNF_ABSOLUTE_URI","mimeMediaRecord","mimeType","TNF_MIME_MEDIA","externalTypeRecord","externalType","TNF_EXTERNAL_TYPE","WellKnownRecord","textRecord","text","languageCode","TNF_WELL_KNOWN","RTD_TEXT","encodePayload","uriRecord","RTD_URI","smartPoster","ndefRecords","Object","hasOwnProperty","console","log","RTD_SMART_POSTER","ExtraTypeRecord","androidApplicationRecord","packageName","wifiSimpleRecord","credentials","MIME_WFA_WSC","NDEF","assign","record","encodeMessage","decodeMessage","isType","wifiSimple","stringify","module","exports"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/ndef-lib/index.js"],"sourcesContent":["// originally from phonegap-nfc.js by Don Coleman\n// adapted for react-native-nfc-manager by Richie Hsieh\n\nconst {\n  createNdefRecord,\n  encodeNdefMessage,\n  decodeNdefMessage,\n  equalToRecordType,\n} = require('./ndef');\nconst constants = require('./constants');\nconst util = require('./util');\nconst textHelper = require('./ndef-text');\nconst uriHelper = require('./ndef-uri');\nconst wifiSimpleHelper = require('./ndef-wifi-simple');\nconst stringifier = require('./stringifier');\n\nconst PrimitiveRecord = {\n  emptyRecord() {\n    return createNdefRecord(constants.TNF_EMPTY, [], [], []);\n  },\n\n  absoluteUriRecord(uri, payload = [], id = []) {\n    return createNdefRecord(constants.TNF_ABSOLUTE_URI, uri, id, payload);\n  },\n\n  mimeMediaRecord(mimeType, payload, id = []) {\n    return createNdefRecord(constants.TNF_MIME_MEDIA, mimeType, id, payload);\n  },\n\n  externalTypeRecord(externalType, payload, id = []) {\n    return createNdefRecord(\n      constants.TNF_EXTERNAL_TYPE,\n      externalType,\n      id,\n      payload,\n    );\n  },\n};\n\nconst WellKnownRecord = {\n  textRecord(text, languageCode, id = []) {\n    return createNdefRecord(\n      constants.TNF_WELL_KNOWN,\n      constants.RTD_TEXT,\n      id,\n      textHelper.encodePayload(text, languageCode),\n    );\n  },\n\n  uriRecord(uri, id = []) {\n    return createNdefRecord(\n      constants.TNF_WELL_KNOWN,\n      constants.RTD_URI,\n      id,\n      uriHelper.encodePayload(uri),\n    );\n  },\n\n  smartPoster(ndefRecords, id = []) {\n    let payload = [];\n\n    if (ndefRecords) {\n      // make sure we have an array of something like NDEF records before encoding\n      if (\n        ndefRecords[0] instanceof Object &&\n        ndefRecords[0].hasOwnProperty('tnf')\n      ) {\n        payload = encodeNdefMessage(ndefRecords);\n      } else {\n        // assume the caller has already encoded the NDEF records into a byte array\n        payload = ndefRecords;\n      }\n    } else {\n      console.log('WARNING: Expecting an array of NDEF records');\n    }\n\n    return createNdefRecord(\n      constants.TNF_WELL_KNOWN,\n      constants.RTD_SMART_POSTER,\n      id,\n      payload,\n    );\n  },\n};\n\nconst ExtraTypeRecord = {\n  androidApplicationRecord(packageName, id = []) {\n    return PrimitiveRecord.externalTypeRecord(\n      'android.com:pkg',\n      packageName,\n      id,\n    );\n  },\n\n  wifiSimpleRecord: function (credentials, id = []) {\n    let payload = wifiSimpleHelper.encodePayload(credentials);\n    return PrimitiveRecord.mimeMediaRecord(constants.MIME_WFA_WSC, payload, id);\n  },\n};\n\nconst NDEF = {\n  ...constants,\n  ...PrimitiveRecord,\n  ...WellKnownRecord,\n  ...ExtraTypeRecord,\n\n  record: createNdefRecord,\n  encodeMessage: encodeNdefMessage,\n  decodeMessage: decodeNdefMessage,\n  isType: equalToRecordType,\n\n  // individual record type helpers\n  text: textHelper,\n  uri: uriHelper,\n  wifiSimple: wifiSimpleHelper,\n\n  // other helpers\n  util,\n  stringify: stringifier.stringify,\n};\n\nmodule.exports = NDEF;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}