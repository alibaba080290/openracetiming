{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MifareClassicHandlerAndroid = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _NativeNfcManager = require(\"../NativeNfcManager\");\nvar _NfcError = require(\"../NfcError\");\nvar MifareClassicHandlerAndroid = exports.MifareClassicHandlerAndroid = function () {\n  function MifareClassicHandlerAndroid(nfcManager) {\n    (0, _classCallCheck2.default)(this, MifareClassicHandlerAndroid);\n    this.nfcManager = nfcManager;\n  }\n  return (0, _createClass2.default)(MifareClassicHandlerAndroid, [{\n    key: \"mifareClassicAuthenticateA\",\n    value: function () {\n      var _mifareClassicAuthenticateA = (0, _asyncToGenerator2.default)(function* (sector, key) {\n        if (!key || !Array.isArray(key) || key.length !== 6) {\n          throw new Error('key should be an Array[6] of integers (0 - 255)');\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicAuthenticateA', [sector, key]));\n      });\n      function mifareClassicAuthenticateA(_x, _x2) {\n        return _mifareClassicAuthenticateA.apply(this, arguments);\n      }\n      return mifareClassicAuthenticateA;\n    }()\n  }, {\n    key: \"mifareClassicAuthenticateB\",\n    value: function () {\n      var _mifareClassicAuthenticateB = (0, _asyncToGenerator2.default)(function* (sector, key) {\n        if (!key || !Array.isArray(key) || key.length !== 6) {\n          throw new Error('key should be an Array[6] of integers (0 - 255)');\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicAuthenticateB', [sector, key]));\n      });\n      function mifareClassicAuthenticateB(_x3, _x4) {\n        return _mifareClassicAuthenticateB.apply(this, arguments);\n      }\n      return mifareClassicAuthenticateB;\n    }()\n  }, {\n    key: \"mifareClassicGetBlockCountInSector\",\n    value: function () {\n      var _mifareClassicGetBlockCountInSector = (0, _asyncToGenerator2.default)(function* (sector) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicGetBlockCountInSector', [sector]));\n      });\n      function mifareClassicGetBlockCountInSector(_x5) {\n        return _mifareClassicGetBlockCountInSector.apply(this, arguments);\n      }\n      return mifareClassicGetBlockCountInSector;\n    }()\n  }, {\n    key: \"mifareClassicGetSectorCount\",\n    value: function () {\n      var _mifareClassicGetSectorCount = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicGetSectorCount'));\n      });\n      function mifareClassicGetSectorCount() {\n        return _mifareClassicGetSectorCount.apply(this, arguments);\n      }\n      return mifareClassicGetSectorCount;\n    }()\n  }, {\n    key: \"mifareClassicSectorToBlock\",\n    value: function () {\n      var _mifareClassicSectorToBlock = (0, _asyncToGenerator2.default)(function* (sector) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicSectorToBlock', [sector]));\n      });\n      function mifareClassicSectorToBlock(_x6) {\n        return _mifareClassicSectorToBlock.apply(this, arguments);\n      }\n      return mifareClassicSectorToBlock;\n    }()\n  }, {\n    key: \"mifareClassicReadBlock\",\n    value: function () {\n      var _mifareClassicReadBlock = (0, _asyncToGenerator2.default)(function* (block) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicReadBlock', [block]));\n      });\n      function mifareClassicReadBlock(_x7) {\n        return _mifareClassicReadBlock.apply(this, arguments);\n      }\n      return mifareClassicReadBlock;\n    }()\n  }, {\n    key: \"mifareClassicReadSector\",\n    value: function () {\n      var _mifareClassicReadSector = (0, _asyncToGenerator2.default)(function* (sector) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicReadSector', [sector]));\n      });\n      function mifareClassicReadSector(_x8) {\n        return _mifareClassicReadSector.apply(this, arguments);\n      }\n      return mifareClassicReadSector;\n    }()\n  }, {\n    key: \"mifareClassicWriteBlock\",\n    value: function () {\n      var _mifareClassicWriteBlock = (0, _asyncToGenerator2.default)(function* (block, data) {\n        if (!data || !Array.isArray(data) || data.length !== this.nfcManager.MIFARE_BLOCK_SIZE) {\n          throw new Error(\"data should be a non-empty Array[\" + this.nfcManager.MIFARE_BLOCK_SIZE + \"] of integers (0 - 255)\");\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicWriteBlock', [block, data]));\n      });\n      function mifareClassicWriteBlock(_x9, _x0) {\n        return _mifareClassicWriteBlock.apply(this, arguments);\n      }\n      return mifareClassicWriteBlock;\n    }()\n  }, {\n    key: \"mifareClassicIncrementBlock\",\n    value: function () {\n      var _mifareClassicIncrementBlock = (0, _asyncToGenerator2.default)(function* (block, value) {\n        if (!value || Number.isNaN(value)) {\n          throw new Error(\"value should be a number\");\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicIncrementBlock', [block, value]));\n      });\n      function mifareClassicIncrementBlock(_x1, _x10) {\n        return _mifareClassicIncrementBlock.apply(this, arguments);\n      }\n      return mifareClassicIncrementBlock;\n    }()\n  }, {\n    key: \"mifareClassicDecrementBlock\",\n    value: function () {\n      var _mifareClassicDecrementBlock = (0, _asyncToGenerator2.default)(function* (block, value) {\n        if (!value || Number.isNaN(value)) {\n          throw new Error(\"value should be a number\");\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicDecrementBlock', [block, value]));\n      });\n      function mifareClassicDecrementBlock(_x11, _x12) {\n        return _mifareClassicDecrementBlock.apply(this, arguments);\n      }\n      return mifareClassicDecrementBlock;\n    }()\n  }, {\n    key: \"mifareClassicTransferBlock\",\n    value: function () {\n      var _mifareClassicTransferBlock = (0, _asyncToGenerator2.default)(function* (block) {\n        if (!block || Number.isNaN(block)) {\n          throw new Error(\"block should be a number\");\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('mifareClassicTransferBlock', [block]));\n      });\n      function mifareClassicTransferBlock(_x13) {\n        return _mifareClassicTransferBlock.apply(this, arguments);\n      }\n      return mifareClassicTransferBlock;\n    }()\n  }]);\n}();","map":{"version":3,"names":["_NativeNfcManager","require","_NfcError","MifareClassicHandlerAndroid","exports","nfcManager","_classCallCheck2","default","_createClass2","key","value","_mifareClassicAuthenticateA","_asyncToGenerator2","sector","Array","isArray","length","Error","handleNativeException","callNative","mifareClassicAuthenticateA","_x","_x2","apply","arguments","_mifareClassicAuthenticateB","mifareClassicAuthenticateB","_x3","_x4","_mifareClassicGetBlockCountInSector","mifareClassicGetBlockCountInSector","_x5","_mifareClassicGetSectorCount","mifareClassicGetSectorCount","_mifareClassicSectorToBlock","mifareClassicSectorToBlock","_x6","_mifareClassicReadBlock","block","mifareClassicReadBlock","_x7","_mifareClassicReadSector","mifareClassicReadSector","_x8","_mifareClassicWriteBlock","data","MIFARE_BLOCK_SIZE","mifareClassicWriteBlock","_x9","_x0","_mifareClassicIncrementBlock","Number","isNaN","mifareClassicIncrementBlock","_x1","_x10","_mifareClassicDecrementBlock","mifareClassicDecrementBlock","_x11","_x12","_mifareClassicTransferBlock","mifareClassicTransferBlock","_x13"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcTech/MifareClassicHandlerAndroid.js"],"sourcesContent":["import {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass MifareClassicHandlerAndroid {\n  constructor(nfcManager) {\n    this.nfcManager = nfcManager;\n  }\n\n  async mifareClassicAuthenticateA(sector, key) {\n    if (!key || !Array.isArray(key) || key.length !== 6) {\n      throw new Error('key should be an Array[6] of integers (0 - 255)');\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicAuthenticateA', [sector, key]),\n    );\n  }\n\n  async mifareClassicAuthenticateB(sector, key) {\n    if (!key || !Array.isArray(key) || key.length !== 6) {\n      throw new Error('key should be an Array[6] of integers (0 - 255)');\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicAuthenticateB', [sector, key]),\n    );\n  }\n\n  async mifareClassicGetBlockCountInSector(sector) {\n    return handleNativeException(\n      callNative('mifareClassicGetBlockCountInSector', [sector]),\n    );\n  }\n\n  async mifareClassicGetSectorCount() {\n    return handleNativeException(callNative('mifareClassicGetSectorCount'));\n  }\n\n  async mifareClassicSectorToBlock(sector) {\n    return handleNativeException(\n      callNative('mifareClassicSectorToBlock', [sector]),\n    );\n  }\n\n  async mifareClassicReadBlock(block) {\n    return handleNativeException(callNative('mifareClassicReadBlock', [block]));\n  }\n\n  async mifareClassicReadSector(sector) {\n    return handleNativeException(\n      callNative('mifareClassicReadSector', [sector]),\n    );\n  }\n\n  async mifareClassicWriteBlock(block, data) {\n    if (\n      !data ||\n      !Array.isArray(data) ||\n      data.length !== this.nfcManager.MIFARE_BLOCK_SIZE\n    ) {\n      throw new Error(\n        `data should be a non-empty Array[${this.nfcManager.MIFARE_BLOCK_SIZE}] of integers (0 - 255)`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicWriteBlock', [block, data]),\n    );\n  }\n\n  async mifareClassicIncrementBlock(block, value) {\n    if (\n      !value ||\n      Number.isNaN(value)) {\n      throw new Error(\n        `value should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicIncrementBlock', [block, value]),\n    );\n  }\n\n  async mifareClassicDecrementBlock(block, value) {\n    if (\n      !value ||\n      Number.isNaN(value)) {\n      throw new Error(\n        `value should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicDecrementBlock', [block, value]),\n    );\n  }\n  async mifareClassicTransferBlock(block) {\n    if (\n      !block ||\n      Number.isNaN(block)) {\n      throw new Error(\n        `block should be a number`,\n      );\n    }\n\n    return handleNativeException(\n      callNative('mifareClassicTransferBlock', [block]),\n    );\n  }\n\n}\n\nexport {MifareClassicHandlerAndroid};\n"],"mappings":";;;;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AAAkD,IAE5CE,2BAA2B,GAAAC,OAAA,CAAAD,2BAAA;EAC/B,SAAAA,4BAAYE,UAAU,EAAE;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAJ,2BAAA;IACtB,IAAI,CAACE,UAAU,GAAGA,UAAU;EAC9B;EAAC,WAAAG,aAAA,CAAAD,OAAA,EAAAJ,2BAAA;IAAAM,GAAA;IAAAC,KAAA;MAAA,IAAAC,2BAAA,OAAAC,kBAAA,CAAAL,OAAA,EAED,WAAiCM,MAAM,EAAEJ,GAAG,EAAE;QAC5C,IAAI,CAACA,GAAG,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,IAAIA,GAAG,CAACO,MAAM,KAAK,CAAC,EAAE;UACnD,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;QACpE;QAEA,OAAO,IAAAC,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,4BAA4B,EAAE,CAACN,MAAM,EAAEJ,GAAG,CAAC,CACxD,CAAC;MACH,CAAC;MAAA,SARKW,0BAA0BA,CAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAX,2BAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA1BJ,0BAA0B;IAAA;EAAA;IAAAX,GAAA;IAAAC,KAAA;MAAA,IAAAe,2BAAA,OAAAb,kBAAA,CAAAL,OAAA,EAUhC,WAAiCM,MAAM,EAAEJ,GAAG,EAAE;QAC5C,IAAI,CAACA,GAAG,IAAI,CAACK,KAAK,CAACC,OAAO,CAACN,GAAG,CAAC,IAAIA,GAAG,CAACO,MAAM,KAAK,CAAC,EAAE;UACnD,MAAM,IAAIC,KAAK,CAAC,iDAAiD,CAAC;QACpE;QAEA,OAAO,IAAAC,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,4BAA4B,EAAE,CAACN,MAAM,EAAEJ,GAAG,CAAC,CACxD,CAAC;MACH,CAAC;MAAA,SARKiB,0BAA0BA,CAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAH,2BAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA1BE,0BAA0B;IAAA;EAAA;IAAAjB,GAAA;IAAAC,KAAA;MAAA,IAAAmB,mCAAA,OAAAjB,kBAAA,CAAAL,OAAA,EAUhC,WAAyCM,MAAM,EAAE;QAC/C,OAAO,IAAAK,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,oCAAoC,EAAE,CAACN,MAAM,CAAC,CAC3D,CAAC;MACH,CAAC;MAAA,SAJKiB,kCAAkCA,CAAAC,GAAA;QAAA,OAAAF,mCAAA,CAAAN,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAlCM,kCAAkC;IAAA;EAAA;IAAArB,GAAA;IAAAC,KAAA;MAAA,IAAAsB,4BAAA,OAAApB,kBAAA,CAAAL,OAAA,EAMxC,aAAoC;QAClC,OAAO,IAAAW,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,6BAA6B,CAAC,CAAC;MACzE,CAAC;MAAA,SAFKc,2BAA2BA,CAAA;QAAA,OAAAD,4BAAA,CAAAT,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA3BS,2BAA2B;IAAA;EAAA;IAAAxB,GAAA;IAAAC,KAAA;MAAA,IAAAwB,2BAAA,OAAAtB,kBAAA,CAAAL,OAAA,EAIjC,WAAiCM,MAAM,EAAE;QACvC,OAAO,IAAAK,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,4BAA4B,EAAE,CAACN,MAAM,CAAC,CACnD,CAAC;MACH,CAAC;MAAA,SAJKsB,0BAA0BA,CAAAC,GAAA;QAAA,OAAAF,2BAAA,CAAAX,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA1BW,0BAA0B;IAAA;EAAA;IAAA1B,GAAA;IAAAC,KAAA;MAAA,IAAA2B,uBAAA,OAAAzB,kBAAA,CAAAL,OAAA,EAMhC,WAA6B+B,KAAK,EAAE;QAClC,OAAO,IAAApB,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,wBAAwB,EAAE,CAACmB,KAAK,CAAC,CAAC,CAAC;MAC7E,CAAC;MAAA,SAFKC,sBAAsBA,CAAAC,GAAA;QAAA,OAAAH,uBAAA,CAAAd,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAtBe,sBAAsB;IAAA;EAAA;IAAA9B,GAAA;IAAAC,KAAA;MAAA,IAAA+B,wBAAA,OAAA7B,kBAAA,CAAAL,OAAA,EAI5B,WAA8BM,MAAM,EAAE;QACpC,OAAO,IAAAK,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,yBAAyB,EAAE,CAACN,MAAM,CAAC,CAChD,CAAC;MACH,CAAC;MAAA,SAJK6B,uBAAuBA,CAAAC,GAAA;QAAA,OAAAF,wBAAA,CAAAlB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAvBkB,uBAAuB;IAAA;EAAA;IAAAjC,GAAA;IAAAC,KAAA;MAAA,IAAAkC,wBAAA,OAAAhC,kBAAA,CAAAL,OAAA,EAM7B,WAA8B+B,KAAK,EAAEO,IAAI,EAAE;QACzC,IACE,CAACA,IAAI,IACL,CAAC/B,KAAK,CAACC,OAAO,CAAC8B,IAAI,CAAC,IACpBA,IAAI,CAAC7B,MAAM,KAAK,IAAI,CAACX,UAAU,CAACyC,iBAAiB,EACjD;UACA,MAAM,IAAI7B,KAAK,uCACuB,IAAI,CAACZ,UAAU,CAACyC,iBAAiB,4BACvE,CAAC;QACH;QAEA,OAAO,IAAA5B,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,yBAAyB,EAAE,CAACmB,KAAK,EAAEO,IAAI,CAAC,CACrD,CAAC;MACH,CAAC;MAAA,SAdKE,uBAAuBA,CAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAL,wBAAA,CAAArB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAvBuB,uBAAuB;IAAA;EAAA;IAAAtC,GAAA;IAAAC,KAAA;MAAA,IAAAwC,4BAAA,OAAAtC,kBAAA,CAAAL,OAAA,EAgB7B,WAAkC+B,KAAK,EAAE5B,KAAK,EAAE;QAC9C,IACE,CAACA,KAAK,IACNyC,MAAM,CAACC,KAAK,CAAC1C,KAAK,CAAC,EAAE;UACrB,MAAM,IAAIO,KAAK,2BAEf,CAAC;QACH;QAEA,OAAO,IAAAC,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,6BAA6B,EAAE,CAACmB,KAAK,EAAE5B,KAAK,CAAC,CAC1D,CAAC;MACH,CAAC;MAAA,SAZK2C,2BAA2BA,CAAAC,GAAA,EAAAC,IAAA;QAAA,OAAAL,4BAAA,CAAA3B,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA3B6B,2BAA2B;IAAA;EAAA;IAAA5C,GAAA;IAAAC,KAAA;MAAA,IAAA8C,4BAAA,OAAA5C,kBAAA,CAAAL,OAAA,EAcjC,WAAkC+B,KAAK,EAAE5B,KAAK,EAAE;QAC9C,IACE,CAACA,KAAK,IACNyC,MAAM,CAACC,KAAK,CAAC1C,KAAK,CAAC,EAAE;UACrB,MAAM,IAAIO,KAAK,2BAEf,CAAC;QACH;QAEA,OAAO,IAAAC,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,6BAA6B,EAAE,CAACmB,KAAK,EAAE5B,KAAK,CAAC,CAC1D,CAAC;MACH,CAAC;MAAA,SAZK+C,2BAA2BA,CAAAC,IAAA,EAAAC,IAAA;QAAA,OAAAH,4BAAA,CAAAjC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA3BiC,2BAA2B;IAAA;EAAA;IAAAhD,GAAA;IAAAC,KAAA;MAAA,IAAAkD,2BAAA,OAAAhD,kBAAA,CAAAL,OAAA,EAajC,WAAiC+B,KAAK,EAAE;QACtC,IACE,CAACA,KAAK,IACNa,MAAM,CAACC,KAAK,CAACd,KAAK,CAAC,EAAE;UACrB,MAAM,IAAIrB,KAAK,2BAEf,CAAC;QACH;QAEA,OAAO,IAAAC,+BAAqB,EAC1B,IAAAC,4BAAU,EAAC,4BAA4B,EAAE,CAACmB,KAAK,CAAC,CAClD,CAAC;MACH,CAAC;MAAA,SAZKuB,0BAA0BA,CAAAC,IAAA;QAAA,OAAAF,2BAAA,CAAArC,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA1BqC,0BAA0B;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}