{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsoDepHandler = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeNfcManager = require(\"../NativeNfcManager\");\nvar _NfcError = require(\"../NfcError\");\nvar IsoDepHandler = exports.IsoDepHandler = function () {\n  function IsoDepHandler() {\n    (0, _classCallCheck2.default)(this, IsoDepHandler);\n  }\n  return (0, _createClass2.default)(IsoDepHandler, [{\n    key: \"transceive\",\n    value: function () {\n      var _transceive = (0, _asyncToGenerator2.default)(function* (bytes) {\n        if (!Array.isArray(bytes)) {\n          throw new Error('IsoDepHandler.transceive only takes input as a byte array');\n        }\n        if (_reactNative.Platform.OS === 'ios') {\n          return (0, _NfcError.handleNativeException)(new Promise(function (resolve, reject) {\n            _NativeNfcManager.NativeNfcManager.sendCommandAPDUBytes(bytes, function (err, response, sw1, sw2) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve([].concat((0, _toConsumableArray2.default)(response), [sw1, sw2]));\n              }\n            });\n          }));\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('transceive', [bytes]));\n      });\n      function transceive(_x) {\n        return _transceive.apply(this, arguments);\n      }\n      return transceive;\n    }()\n  }]);\n}();","map":{"version":3,"names":["_reactNative","require","_NativeNfcManager","_NfcError","IsoDepHandler","exports","_classCallCheck2","default","_createClass2","key","value","_transceive","_asyncToGenerator2","bytes","Array","isArray","Error","Platform","OS","handleNativeException","Promise","resolve","reject","NativeNfcManager","sendCommandAPDUBytes","err","response","sw1","sw2","concat","_toConsumableArray2","callNative","transceive","_x","apply","arguments"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcTech/IsoDepHandler.js"],"sourcesContent":["import {Platform} from 'react-native';\nimport {callNative, NativeNfcManager} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass IsoDepHandler {\n  async transceive(bytes) {\n    if (!Array.isArray(bytes)) {\n      throw new Error(\n        'IsoDepHandler.transceive only takes input as a byte array',\n      );\n    }\n\n    if (Platform.OS === 'ios') {\n      return handleNativeException(\n        new Promise((resolve, reject) => {\n          NativeNfcManager.sendCommandAPDUBytes(\n            bytes,\n            (err, response, sw1, sw2) => {\n              if (err) {\n                reject(err);\n              } else {\n                // TODO: make following data the same format as Android\n                resolve([...response, sw1, sw2]);\n              }\n            },\n          );\n        }),\n      );\n    }\n\n    return handleNativeException(callNative('transceive', [bytes]));\n  }\n}\n\nexport {IsoDepHandler};\n"],"mappings":";;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAkD,IAE5CG,aAAa,GAAAC,OAAA,CAAAD,aAAA;EAAA,SAAAA,cAAA;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,aAAA;EAAA;EAAA,WAAAI,aAAA,CAAAD,OAAA,EAAAH,aAAA;IAAAK,GAAA;IAAAC,KAAA;MAAA,IAAAC,WAAA,OAAAC,kBAAA,CAAAL,OAAA,EACjB,WAAiBM,KAAK,EAAE;QACtB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;UACzB,MAAM,IAAIG,KAAK,CACb,2DACF,CAAC;QACH;QAEA,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;UACzB,OAAO,IAAAC,+BAAqB,EAC1B,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;YAC/BC,kCAAgB,CAACC,oBAAoB,CACnCX,KAAK,EACL,UAACY,GAAG,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,GAAG,EAAK;cAC3B,IAAIH,GAAG,EAAE;gBACPH,MAAM,CAACG,GAAG,CAAC;cACb,CAAC,MAAM;gBAELJ,OAAO,IAAAQ,MAAA,KAAAC,mBAAA,CAAAvB,OAAA,EAAKmB,QAAQ,IAAEC,GAAG,EAAEC,GAAG,EAAC,CAAC;cAClC;YACF,CACF,CAAC;UACH,CAAC,CACH,CAAC;QACH;QAEA,OAAO,IAAAT,+BAAqB,EAAC,IAAAY,4BAAU,EAAC,YAAY,EAAE,CAAClB,KAAK,CAAC,CAAC,CAAC;MACjE,CAAC;MAAA,SA1BKmB,UAAUA,CAAAC,EAAA;QAAA,OAAAtB,WAAA,CAAAuB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAVH,UAAU;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}