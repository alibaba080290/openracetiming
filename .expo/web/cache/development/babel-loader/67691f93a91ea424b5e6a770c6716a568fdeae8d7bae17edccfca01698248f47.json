{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NdefStatus = exports.NdefHandler = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeNfcManager = require(\"../NativeNfcManager\");\nvar _NfcError = require(\"../NfcError\");\nvar NdefStatus = exports.NdefStatus = {\n  NotSupported: 1,\n  ReadWrite: 2,\n  ReadOnly: 3\n};\nvar NdefHandler = exports.NdefHandler = function () {\n  function NdefHandler() {\n    (0, _classCallCheck2.default)(this, NdefHandler);\n  }\n  return (0, _createClass2.default)(NdefHandler, [{\n    key: \"writeNdefMessage\",\n    value: function () {\n      var _writeNdefMessage = (0, _asyncToGenerator2.default)(function* (bytes) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('writeNdefMessage', [bytes]));\n      });\n      function writeNdefMessage(_x) {\n        return _writeNdefMessage.apply(this, arguments);\n      }\n      return writeNdefMessage;\n    }()\n  }, {\n    key: \"getNdefMessage\",\n    value: function () {\n      var _getNdefMessage = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getNdefMessage'));\n      });\n      function getNdefMessage() {\n        return _getNdefMessage.apply(this, arguments);\n      }\n      return getNdefMessage;\n    }()\n  }, {\n    key: \"makeReadOnly\",\n    value: function () {\n      var _makeReadOnly = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('makeReadOnly'));\n      });\n      function makeReadOnly() {\n        return _makeReadOnly.apply(this, arguments);\n      }\n      return makeReadOnly;\n    }()\n  }, {\n    key: \"getNdefStatus\",\n    value: function () {\n      var _getNdefStatus = (0, _asyncToGenerator2.default)(function* () {\n        if (_reactNative.Platform.OS === 'ios') {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('queryNDEFStatus'));\n        } else {\n          try {\n            var result = yield (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getNdefStatus'));\n            return {\n              status: result.isWritable ? NdefStatus.ReadWrite : NdefStatus.ReadOnly,\n              capacity: result.maxSize\n            };\n          } catch (ex) {\n            return {\n              status: NdefStatus.NotSupported,\n              capacity: 0\n            };\n          }\n        }\n      });\n      function getNdefStatus() {\n        return _getNdefStatus.apply(this, arguments);\n      }\n      return getNdefStatus;\n    }()\n  }, {\n    key: \"getCachedNdefMessageAndroid\",\n    value: function () {\n      var _getCachedNdefMessageAndroid = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getCachedNdefMessage'));\n      });\n      function getCachedNdefMessageAndroid() {\n        return _getCachedNdefMessageAndroid.apply(this, arguments);\n      }\n      return getCachedNdefMessageAndroid;\n    }()\n  }]);\n}();","map":{"version":3,"names":["_reactNative","require","_NativeNfcManager","_NfcError","NdefStatus","exports","NotSupported","ReadWrite","ReadOnly","NdefHandler","_classCallCheck2","default","_createClass2","key","value","_writeNdefMessage","_asyncToGenerator2","bytes","handleNativeException","callNative","writeNdefMessage","_x","apply","arguments","_getNdefMessage","getNdefMessage","_makeReadOnly","makeReadOnly","_getNdefStatus","Platform","OS","result","status","isWritable","capacity","maxSize","ex","getNdefStatus","_getCachedNdefMessageAndroid","getCachedNdefMessageAndroid"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcTech/NdefHandler.js"],"sourcesContent":["import {Platform} from 'react-native';\nimport {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nconst NdefStatus = {\n  NotSupported: 1,\n  ReadWrite: 2,\n  ReadOnly: 3,\n};\n\nclass NdefHandler {\n  async writeNdefMessage(bytes) {\n    return handleNativeException(callNative('writeNdefMessage', [bytes]));\n  }\n\n  async getNdefMessage() {\n    return handleNativeException(callNative('getNdefMessage'));\n  }\n\n  async makeReadOnly() {\n    return handleNativeException(callNative('makeReadOnly'));\n  }\n\n  async getNdefStatus() {\n    if (Platform.OS === 'ios') {\n      return handleNativeException(callNative('queryNDEFStatus'));\n    } else {\n      try {\n        const result = await handleNativeException(callNative('getNdefStatus'));\n        return {\n          status: result.isWritable\n            ? NdefStatus.ReadWrite\n            : NdefStatus.ReadOnly,\n          capacity: result.maxSize,\n        };\n      } catch (ex) {\n        return {\n          status: NdefStatus.NotSupported,\n          capacity: 0,\n        };\n      }\n    }\n  }\n\n  async getCachedNdefMessageAndroid() {\n    return handleNativeException(callNative('getCachedNdefMessage'));\n  }\n}\n\nexport {NdefHandler, NdefStatus};\n"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAEA,IAAMG,UAAU,GAAAC,OAAA,CAAAD,UAAA,GAAG;EACjBE,YAAY,EAAE,CAAC;EACfC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE;AACZ,CAAC;AAAC,IAEIC,WAAW,GAAAJ,OAAA,CAAAI,WAAA;EAAA,SAAAA,YAAA;IAAA,IAAAC,gBAAA,CAAAC,OAAA,QAAAF,WAAA;EAAA;EAAA,WAAAG,aAAA,CAAAD,OAAA,EAAAF,WAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,iBAAA,OAAAC,kBAAA,CAAAL,OAAA,EACf,WAAuBM,KAAK,EAAE;QAC5B,OAAO,IAAAC,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,kBAAkB,EAAE,CAACF,KAAK,CAAC,CAAC,CAAC;MACvE,CAAC;MAAA,SAFKG,gBAAgBA,CAAAC,EAAA;QAAA,OAAAN,iBAAA,CAAAO,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAhBH,gBAAgB;IAAA;EAAA;IAAAP,GAAA;IAAAC,KAAA;MAAA,IAAAU,eAAA,OAAAR,kBAAA,CAAAL,OAAA,EAItB,aAAuB;QACrB,OAAO,IAAAO,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,gBAAgB,CAAC,CAAC;MAC5D,CAAC;MAAA,SAFKM,cAAcA,CAAA;QAAA,OAAAD,eAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdE,cAAc;IAAA;EAAA;IAAAZ,GAAA;IAAAC,KAAA;MAAA,IAAAY,aAAA,OAAAV,kBAAA,CAAAL,OAAA,EAIpB,aAAqB;QACnB,OAAO,IAAAO,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,cAAc,CAAC,CAAC;MAC1D,CAAC;MAAA,SAFKQ,YAAYA,CAAA;QAAA,OAAAD,aAAA,CAAAJ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAZI,YAAY;IAAA;EAAA;IAAAd,GAAA;IAAAC,KAAA;MAAA,IAAAc,cAAA,OAAAZ,kBAAA,CAAAL,OAAA,EAIlB,aAAsB;QACpB,IAAIkB,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;UACzB,OAAO,IAAAZ,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,iBAAiB,CAAC,CAAC;QAC7D,CAAC,MAAM;UACL,IAAI;YACF,IAAMY,MAAM,SAAS,IAAAb,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,eAAe,CAAC,CAAC;YACvE,OAAO;cACLa,MAAM,EAAED,MAAM,CAACE,UAAU,GACrB7B,UAAU,CAACG,SAAS,GACpBH,UAAU,CAACI,QAAQ;cACvB0B,QAAQ,EAAEH,MAAM,CAACI;YACnB,CAAC;UACH,CAAC,CAAC,OAAOC,EAAE,EAAE;YACX,OAAO;cACLJ,MAAM,EAAE5B,UAAU,CAACE,YAAY;cAC/B4B,QAAQ,EAAE;YACZ,CAAC;UACH;QACF;MACF,CAAC;MAAA,SAnBKG,aAAaA,CAAA;QAAA,OAAAT,cAAA,CAAAN,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAbc,aAAa;IAAA;EAAA;IAAAxB,GAAA;IAAAC,KAAA;MAAA,IAAAwB,4BAAA,OAAAtB,kBAAA,CAAAL,OAAA,EAqBnB,aAAoC;QAClC,OAAO,IAAAO,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,sBAAsB,CAAC,CAAC;MAClE,CAAC;MAAA,SAFKoB,2BAA2BA,CAAA;QAAA,OAAAD,4BAAA,CAAAhB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAA3BgB,2BAA2B;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}