{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.RadioButtonItem = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _theming = require(\"../../core/theming\");\nvar _RadioButtonGroup = require(\"./RadioButtonGroup\");\nvar _utils = require(\"./utils\");\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _RadioButton = _interopRequireDefault(require(\"./RadioButton\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _RadioButtonAndroid = _interopRequireDefault(require(\"./RadioButtonAndroid\"));\nvar _RadioButtonIOS = _interopRequireDefault(require(\"./RadioButtonIOS\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar RadioButtonItem = function RadioButtonItem(_ref) {\n  var value = _ref.value,\n    label = _ref.label,\n    style = _ref.style,\n    labelStyle = _ref.labelStyle,\n    onPress = _ref.onPress,\n    disabled = _ref.disabled,\n    color = _ref.color,\n    uncheckedColor = _ref.uncheckedColor,\n    status = _ref.status,\n    colors = _ref.theme.colors,\n    accessibilityLabel = _ref.accessibilityLabel,\n    testID = _ref.testID,\n    mode = _ref.mode,\n    _ref$position = _ref.position,\n    position = _ref$position === void 0 ? 'trailing' : _ref$position;\n  var radioButtonProps = {\n    value: value,\n    disabled: disabled,\n    status: status,\n    color: color,\n    uncheckedColor: uncheckedColor\n  };\n  var isLeading = position === 'leading';\n  var radioButton;\n  if (mode === 'android') {\n    radioButton = React.createElement(_RadioButtonAndroid.default, radioButtonProps);\n  } else if (mode === 'ios') {\n    radioButton = React.createElement(_RadioButtonIOS.default, radioButtonProps);\n  } else {\n    radioButton = React.createElement(_RadioButton.default, radioButtonProps);\n  }\n  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {\n    return React.createElement(_TouchableRipple.default, {\n      onPress: disabled ? undefined : function () {\n        return (0, _utils.handlePress)({\n          onPress: onPress,\n          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,\n          value: value\n        });\n      },\n      accessibilityLabel: accessibilityLabel,\n      testID: testID\n    }, React.createElement(_reactNative.View, {\n      style: [styles.container, style],\n      pointerEvents: \"none\"\n    }, isLeading && radioButton, React.createElement(_Text.default, {\n      style: [styles.label, {\n        color: colors.text,\n        textAlign: isLeading ? 'right' : 'left'\n      }, labelStyle]\n    }, label), !isLeading && radioButton));\n  });\n};\nRadioButtonItem.displayName = 'RadioButton.Item';\nvar _default = exports.default = (0, _theming.withTheme)(RadioButtonItem);\nvar RadioButtonItemWithTheme = exports.RadioButtonItem = (0, _theming.withTheme)(RadioButtonItem);\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_theming","_RadioButtonGroup","_utils","_TouchableRipple","_interopRequireDefault","_RadioButton","_Text","_RadioButtonAndroid","_RadioButtonIOS","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","RadioButtonItem","_ref","value","label","style","labelStyle","onPress","disabled","color","uncheckedColor","status","colors","theme","accessibilityLabel","testID","mode","_ref$position","position","radioButtonProps","isLeading","radioButton","createElement","RadioButtonAndroid","RadioButtonIOS","RadioButton","RadioButtonContext","Consumer","context","TouchableRipple","undefined","handlePress","onValueChange","View","styles","container","pointerEvents","Text","text","textAlign","displayName","_default","exports","withTheme","RadioButtonItemWithTheme","StyleSheet","create","flexDirection","alignItems","justifyContent","paddingVertical","paddingHorizontal","fontSize","flexShrink","flexGrow"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/RadioButton/RadioButtonItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  StyleSheet,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { RadioButtonContext, RadioButtonContextType } from './RadioButtonGroup';\nimport { handlePress } from './utils';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport RadioButton from './RadioButton';\nimport Text from '../Typography/Text';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\n\nexport type Props = {\n  /**\n   * Value of the radio button.\n   */\n  value: string;\n  /**\n   * Label to be displayed on the item.\n   */\n  label: string;\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Accessibility label for the touchable. This is read by the screen reader when the user taps the touchable.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Additional styles for container View.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * testID to be used on tests.\n   */\n  testID?: string;\n  /**\n   * Whether `<RadioButton.Android />` or `<RadioButton.IOS />` should be used.\n   * Left undefined `<RadioButton />` will be used.\n   */\n  mode?: 'android' | 'ios';\n  /**\n   * Radio button control position.\n   */\n  position?: 'leading' | 'trailing';\n};\n\n/**\n * RadioButton.Item allows you to press the whole row (item) instead of only the RadioButton.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/radio-item.ios.png\" />\n *     <figcaption>Pressed</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { RadioButton } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [value, setValue] = React.useState('first');\n *\n *   return (\n *     <RadioButton.Group onValueChange={value => setValue(value)} value={value}>\n *       <RadioButton.Item label=\"First item\" value=\"first\" />\n *       <RadioButton.Item label=\"Second item\" value=\"second\" />\n *     </RadioButton.Group>\n *   );\n * };\n *\n * export default MyComponent;\n *```\n */\nconst RadioButtonItem = ({\n  value,\n  label,\n  style,\n  labelStyle,\n  onPress,\n  disabled,\n  color,\n  uncheckedColor,\n  status,\n  theme: { colors },\n  accessibilityLabel,\n  testID,\n  mode,\n  position = 'trailing',\n}: Props) => {\n  const radioButtonProps = { value, disabled, status, color, uncheckedColor };\n  const isLeading = position === 'leading';\n  let radioButton: any;\n\n  if (mode === 'android') {\n    radioButton = <RadioButtonAndroid {...radioButtonProps} />;\n  } else if (mode === 'ios') {\n    radioButton = <RadioButtonIOS {...radioButtonProps} />;\n  } else {\n    radioButton = <RadioButton {...radioButtonProps} />;\n  }\n\n  return (\n    <RadioButtonContext.Consumer>\n      {(context?: RadioButtonContextType) => {\n        return (\n          <TouchableRipple\n            onPress={\n              disabled\n                ? undefined\n                : () =>\n                    handlePress({\n                      onPress: onPress,\n                      onValueChange: context?.onValueChange,\n                      value,\n                    })\n            }\n            accessibilityLabel={accessibilityLabel}\n            testID={testID}\n          >\n            <View style={[styles.container, style]} pointerEvents=\"none\">\n              {isLeading && radioButton}\n              <Text\n                style={[\n                  styles.label,\n                  {\n                    color: colors.text,\n                    textAlign: isLeading ? 'right' : 'left',\n                  },\n                  labelStyle,\n                ]}\n              >\n                {label}\n              </Text>\n              {!isLeading && radioButton}\n            </View>\n          </TouchableRipple>\n        );\n      }}\n    </RadioButtonContext.Consumer>\n  );\n};\n\nRadioButtonItem.displayName = 'RadioButton.Item';\n\nexport default withTheme(RadioButtonItem);\n\n// @component-docs ignore-next-line\nconst RadioButtonItemWithTheme = withTheme(RadioButtonItem);\n// @component-docs ignore-next-line\nexport { RadioButtonItemWithTheme as RadioButtonItem };\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  label: {\n    fontSize: 16,\n    flexShrink: 1,\n    flexGrow: 1,\n  },\n});\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAOA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,iBAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,gBAAA,GAAAC,sBAAA,CAAAN,OAAA;AACA,IAAAO,YAAA,GAAAD,sBAAA,CAAAN,OAAA;AACA,IAAAQ,KAAA,GAAAF,sBAAA,CAAAN,OAAA;AACA,IAAAS,mBAAA,GAAAH,sBAAA,CAAAN,OAAA;AACA,IAAAU,eAAA,GAAAJ,sBAAA,CAAAN,OAAA;AAAA,SAAAD,wBAAAY,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAd,uBAAA,YAAAA,wBAAAY,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AA2FA,IAAMmB,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,IAAA,EAeX;EAAA,IAdXC,KADuB,GAeZD,IAAA,CAdXC,KADuB;IAEvBC,KAFuB,GAeZF,IAAA,CAbXE,KAFuB;IAGvBC,KAHuB,GAeZH,IAAA,CAZXG,KAHuB;IAIvBC,UAJuB,GAeZJ,IAAA,CAXXI,UAJuB;IAKvBC,OALuB,GAeZL,IAAA,CAVXK,OALuB;IAMvBC,QANuB,GAeZN,IAAA,CATXM,QANuB;IAOvBC,KAPuB,GAeZP,IAAA,CARXO,KAPuB;IAQvBC,cARuB,GAeZR,IAAA,CAPXQ,cARuB;IASvBC,MATuB,GAeZT,IAAA,CANXS,MATuB;IAUdC,MAAA,GAKEV,IAAA,CALXW,KAAK,CAAID,MAAA;IACTE,kBAXuB,GAeZZ,IAAA,CAJXY,kBAXuB;IAYvBC,MAZuB,GAeZb,IAAA,CAHXa,MAZuB;IAavBC,IAbuB,GAeZd,IAAA,CAFXc,IAbuB;IAAAC,aAAA,GAeZf,IAAA,CADXgB,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,aAAAA,aAAA;EAEX,IAAME,gBAAgB,GAAG;IAAEhB,KAAF,EAAEA,KAAF;IAASK,QAAT,EAASA,QAAT;IAAmBG,MAAnB,EAAmBA,MAAnB;IAA2BF,KAA3B,EAA2BA,KAA3B;IAAkCC,cAAA,EAAAA;EAAlC,CAAzB;EACA,IAAMU,SAAS,GAAGF,QAAQ,KAAK,SAA/B;EACA,IAAIG,WAAJ;EAEA,IAAIL,IAAI,KAAK,SAAb,EAAwB;IACtBK,WAAW,GAAGrD,KAAA,CAAAsD,aAAA,CAACC,2BAAD,EAAwBJ,gBAAxB,CAAd;EACD,CAFD,MAEO,IAAIH,IAAI,KAAK,KAAb,EAAoB;IACzBK,WAAW,GAAGrD,KAAA,CAAAsD,aAAA,CAACE,uBAAD,EAAoBL,gBAApB,CAAd;EACD,CAFM,MAEA;IACLE,WAAW,GAAGrD,KAAA,CAAAsD,aAAA,CAACG,oBAAD,EAAiBN,gBAAjB,CAAd;EACD;EAED,OACEnD,KAAA,CAAAsD,aAAA,CAACI,oCAAD,CAAoBC,QAApB,QACI,UAAAC,OAAD,EAAsC;IACrC,OACE5D,KAAA,CAAAsD,aAAA,CAACO,wBAAD;MACEtB,OAAO,EACLC,QAAQ,GACJsB,SADI,GAEJ;QAAA,OACE,IAAAC,kBAAW,EAAC;UACVxB,OAAO,EAAEA,OADC;UAEVyB,aAAa,EAAEJ,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEI,aAFd;UAGV7B,KAAA,EAAAA;QAHU,CAAD,CALrB;MAAA;MAWEW,kBAAkB,EAAEA,kBAXtB;MAYEC,MAAM,EAAEA;IAZV,GAcE/C,KAAA,CAAAsD,aAAA,CAACW,iBAAD;MAAM5B,KAAK,EAAE,CAAC6B,MAAM,CAACC,SAAR,EAAmB9B,KAAnB,CAAb;MAAwC+B,aAAa,EAAC;IAAtD,GACGhB,SAAS,IAAIC,WADhB,EAEErD,KAAA,CAAAsD,aAAA,CAACe,aAAD;MACEhC,KAAK,EAAE,CACL6B,MAAM,CAAC9B,KADF,EAEL;QACEK,KAAK,EAAEG,MAAM,CAAC0B,IADhB;QAEEC,SAAS,EAAEnB,SAAS,GAAG,OAAH,GAAa;MAFnC,CAFK,EAMLd,UANK;IADT,GAUGF,KAVH,CAFF,EAcG,CAACgB,SAAD,IAAcC,WAdjB,CAdF,CADF;EAiCD,CAnCH,CADF;AAuCD,CAnED;AAqEApB,eAAe,CAACuC,WAAhB,GAA8B,kBAA9B;AAAA,IAAAC,QAAA,GAAAC,OAAA,CAAAnD,OAAA,GAEe,IAAAoD,kBAAS,EAAC1C,eAAD,CAAxB;AAGA,IAAM2C,wBAAwB,GAAAF,OAAA,CAAAzC,eAAA,GAAG,IAAA0C,kBAAS,EAAC1C,eAAD,CAA1C;AAIA,IAAMiC,MAAM,GAAGW,uBAAU,CAACC,MAAX,CAAkB;EAC/BX,SAAS,EAAE;IACTY,aAAa,EAAE,KADN;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,eAHP;IAITC,eAAe,EAAE,CAJR;IAKTC,iBAAiB,EAAE;EALV,CADoB;EAQ/B/C,KAAK,EAAE;IACLgD,QAAQ,EAAE,EADL;IAELC,UAAU,EAAE,CAFP;IAGLC,QAAQ,EAAE;EAHL;AARwB,CAAlB,CAAf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}