{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.IconAdornment = exports.ICON_SIZE = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _IconButton = _interopRequireDefault(require(\"../../IconButton\"));\nvar _excluded = [\"name\", \"onPress\", \"forceTextInputFocus\", \"color\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ICON_SIZE = exports.ICON_SIZE = 24;\nvar ICON_OFFSET = 12;\nvar StyleContext = _react.default.createContext({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: function forceFocus() {}\n});\nvar IconAdornment = exports.IconAdornment = function IconAdornment(_ref) {\n  var icon = _ref.icon,\n    topPosition = _ref.topPosition,\n    side = _ref.side,\n    isTextInputFocused = _ref.isTextInputFocused,\n    forceFocus = _ref.forceFocus;\n  var style = (0, _defineProperty2.default)({\n    top: topPosition\n  }, side, ICON_OFFSET);\n  var contextState = {\n    style: style,\n    isTextInputFocused: isTextInputFocused,\n    forceFocus: forceFocus\n  };\n  return _react.default.createElement(StyleContext.Provider, {\n    value: contextState\n  }, icon);\n};\nvar TextInputIcon = function TextInputIcon(_ref2) {\n  var name = _ref2.name,\n    onPress = _ref2.onPress,\n    forceTextInputFocus = _ref2.forceTextInputFocus,\n    color = _ref2.color,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n  var _React$useContext = _react.default.useContext(StyleContext),\n    style = _React$useContext.style,\n    isTextInputFocused = _React$useContext.isTextInputFocused,\n    forceFocus = _React$useContext.forceFocus;\n  var onPressWithFocusControl = _react.default.useCallback(function () {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress === null || onPress === void 0 ? void 0 : onPress();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n  return _react.default.createElement(_reactNative.View, {\n    style: [styles.container, style]\n  }, _react.default.createElement(_IconButton.default, _extends({\n    icon: name,\n    style: styles.iconButton,\n    size: ICON_SIZE,\n    onPress: onPressWithFocusControl,\n    color: typeof color === 'function' ? color(isTextInputFocused) : color\n  }, rest)));\n};\nTextInputIcon.displayName = 'TextInput.Icon';\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  iconButton: {\n    margin: 0\n  }\n});\nvar _default = exports.default = TextInputIcon;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_IconButton","_excluded","ICON_SIZE","exports","ICON_OFFSET","StyleContext","React","createContext","style","isTextInputFocused","forceFocus","IconAdornment","_ref","icon","topPosition","side","_defineProperty2","default","top","contextState","createElement","Provider","value","TextInputIcon","_ref2","name","onPress","forceTextInputFocus","color","rest","_objectWithoutProperties2","_React$useContext","useContext","onPressWithFocusControl","useCallback","View","styles","container","IconButton","_extends","iconButton","size","displayName","defaultProps","StyleSheet","create","position","width","height","justifyContent","alignItems","margin","_default"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/TextInput/Adornment/TextInputIcon.tsx"],"sourcesContent":["import React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\n\nimport IconButton from '../../IconButton';\nimport type { $Omit } from '../../../../src/types';\nimport type { IconSource } from '../../Icon';\n\nexport type Props = $Omit<\n  React.ComponentProps<typeof IconButton>,\n  'icon' | 'theme' | 'color'\n> & {\n  /**\n   * Icon to show.\n   */\n  name: IconSource;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the TextInput will focus after onPress.\n   */\n  forceTextInputFocus?: boolean;\n  /**\n   * Color of the icon or a function receiving a boolean indicating whether the TextInput is focused and returning the color.\n   */\n  color?: ((isTextInputFocused: boolean) => string | undefined) | string;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme?: ReactNativePaper.Theme;\n};\n\nexport const ICON_SIZE = 24;\nconst ICON_OFFSET = 12;\n\ntype StyleContextType = {\n  style: StyleProp<ViewStyle>;\n  isTextInputFocused: boolean;\n  forceFocus: () => void;\n};\n\nconst StyleContext = React.createContext<StyleContextType>({\n  style: {},\n  isTextInputFocused: false,\n  forceFocus: () => {},\n});\n\nconst IconAdornment: React.FunctionComponent<\n  {\n    testID: string;\n    icon: React.ReactNode;\n    topPosition: number;\n    side: 'left' | 'right';\n  } & Omit<StyleContextType, 'style'>\n> = ({ icon, topPosition, side, isTextInputFocused, forceFocus }) => {\n  const style = {\n    top: topPosition,\n    [side]: ICON_OFFSET,\n  };\n  const contextState = { style, isTextInputFocused, forceFocus };\n\n  return (\n    <StyleContext.Provider value={contextState}>{icon}</StyleContext.Provider>\n  );\n};\n\n/**\n * A component to render a leading / trailing icon in the TextInput\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.icon.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Password\"\n *       secureTextEntry\n *       right={<TextInput.Icon name=\"eye\" />}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\n\nconst TextInputIcon = ({\n  name,\n  onPress,\n  forceTextInputFocus,\n  color,\n  ...rest\n}: Props) => {\n  const { style, isTextInputFocused, forceFocus } =\n    React.useContext(StyleContext);\n\n  const onPressWithFocusControl = React.useCallback(() => {\n    if (forceTextInputFocus && !isTextInputFocused) {\n      forceFocus();\n    }\n    onPress?.();\n  }, [forceTextInputFocus, forceFocus, isTextInputFocused, onPress]);\n\n  return (\n    <View style={[styles.container, style]}>\n      <IconButton\n        icon={name}\n        style={styles.iconButton}\n        size={ICON_SIZE}\n        onPress={onPressWithFocusControl}\n        color={typeof color === 'function' ? color(isTextInputFocused) : color}\n        {...rest}\n      />\n    </View>\n  );\n};\nTextInputIcon.displayName = 'TextInput.Icon';\n\nTextInputIcon.defaultProps = {\n  forceTextInputFocus: true,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    width: ICON_SIZE,\n    height: ICON_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    margin: 0,\n  },\n});\n\nexport default TextInputIcon;\n\n// @component-docs ignore-next-line\nexport { IconAdornment };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}