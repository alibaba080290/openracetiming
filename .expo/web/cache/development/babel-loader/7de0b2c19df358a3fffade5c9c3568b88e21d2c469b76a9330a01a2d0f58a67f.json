{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _color = _interopRequireDefault(require(\"color\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _TouchableRipple = _interopRequireDefault(require(\"../TouchableRipple/TouchableRipple\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _theming = require(\"../../core/theming\");\nvar _excluded = [\"left\", \"right\", \"title\", \"description\", \"onPress\", \"theme\", \"style\", \"titleStyle\", \"titleNumberOfLines\", \"descriptionNumberOfLines\", \"titleEllipsizeMode\", \"descriptionEllipsizeMode\", \"descriptionStyle\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ListItem = function ListItem(_ref) {\n  var left = _ref.left,\n    right = _ref.right,\n    title = _ref.title,\n    description = _ref.description,\n    onPress = _ref.onPress,\n    theme = _ref.theme,\n    style = _ref.style,\n    titleStyle = _ref.titleStyle,\n    _ref$titleNumberOfLin = _ref.titleNumberOfLines,\n    titleNumberOfLines = _ref$titleNumberOfLin === void 0 ? 1 : _ref$titleNumberOfLin,\n    _ref$descriptionNumbe = _ref.descriptionNumberOfLines,\n    descriptionNumberOfLines = _ref$descriptionNumbe === void 0 ? 2 : _ref$descriptionNumbe,\n    titleEllipsizeMode = _ref.titleEllipsizeMode,\n    descriptionEllipsizeMode = _ref.descriptionEllipsizeMode,\n    descriptionStyle = _ref.descriptionStyle,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var renderDescription = function renderDescription(descriptionColor, description) {\n    return typeof description === 'function' ? description({\n      selectable: false,\n      ellipsizeMode: descriptionEllipsizeMode,\n      color: descriptionColor,\n      fontSize: styles.description.fontSize\n    }) : React.createElement(_Text.default, {\n      selectable: false,\n      numberOfLines: descriptionNumberOfLines,\n      ellipsizeMode: descriptionEllipsizeMode,\n      style: [styles.description, {\n        color: descriptionColor\n      }, descriptionStyle]\n    }, description);\n  };\n  var renderTitle = function renderTitle() {\n    var titleColor = (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();\n    return typeof title === 'function' ? title({\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      color: titleColor,\n      fontSize: styles.title.fontSize\n    }) : React.createElement(_Text.default, {\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      numberOfLines: titleNumberOfLines,\n      style: [styles.title, {\n        color: titleColor\n      }, titleStyle]\n    }, title);\n  };\n  var descriptionColor = (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();\n  return React.createElement(_TouchableRipple.default, _extends({}, rest, {\n    style: [styles.container, style],\n    onPress: onPress\n  }), React.createElement(_reactNative.View, {\n    style: styles.row\n  }, left ? left({\n    color: descriptionColor,\n    style: description ? styles.iconMarginLeft : Object.assign({}, styles.iconMarginLeft, styles.marginVerticalNone)\n  }) : null, React.createElement(_reactNative.View, {\n    style: [styles.item, styles.content]\n  }, renderTitle(), description ? renderDescription(descriptionColor, description) : null), right ? right({\n    color: descriptionColor,\n    style: description ? styles.iconMarginRight : Object.assign({}, styles.iconMarginRight, styles.marginVerticalNone)\n  }) : null));\n};\nListItem.displayName = 'List.Item';\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  marginVerticalNone: {\n    marginVertical: 0\n  },\n  iconMarginLeft: {\n    marginLeft: 0,\n    marginRight: 16\n  },\n  iconMarginRight: {\n    marginRight: 0\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nvar _default = exports.default = (0, _theming.withTheme)(ListItem);","map":{"version":3,"names":["_color","_interopRequireDefault","require","React","_interopRequireWildcard","_reactNative","_TouchableRipple","_Text","_theming","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","ListItem","_ref","left","right","title","description","onPress","theme","style","titleStyle","_ref$titleNumberOfLin","titleNumberOfLines","_ref$descriptionNumbe","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","rest","_objectWithoutProperties2","renderDescription","descriptionColor","selectable","ellipsizeMode","color","fontSize","styles","createElement","Text","numberOfLines","renderTitle","titleColor","colors","text","alpha","rgb","string","TouchableRipple","_extends","container","View","row","iconMarginLeft","assign","marginVerticalNone","item","content","iconMarginRight","displayName","StyleSheet","create","padding","flexDirection","marginVertical","marginLeft","marginRight","paddingLeft","flex","justifyContent","_default","exports","withTheme"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/List/ListItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren, EllipsizeProp } from '../../types';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: {\n    color: string;\n    style: {\n      marginLeft: number;\n      marginRight: number;\n      marginVertical?: number;\n    };\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: {\n    color: string;\n    style?: {\n      marginRight: number;\n      marginVertical?: number;\n    };\n  }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/list-item-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-2.png\" />\n *   <img class=\"medium\" src=\"screenshots/list-item-3.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/touchable-ripple.html\n */\nconst ListItem = ({\n  left,\n  right,\n  title,\n  description,\n  onPress,\n  theme,\n  style,\n  titleStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  titleEllipsizeMode,\n  descriptionEllipsizeMode,\n  descriptionStyle,\n  ...rest\n}: Props) => {\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      style={[styles.container, style]}\n      onPress={onPress}\n    >\n      <View style={styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: description\n                ? styles.iconMarginLeft\n                : {\n                    ...styles.iconMarginLeft,\n                    ...styles.marginVerticalNone,\n                  },\n            })\n          : null}\n        <View style={[styles.item, styles.content]}>\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: description\n                ? styles.iconMarginRight\n                : {\n                    ...styles.iconMarginRight,\n                    ...styles.marginVerticalNone,\n                  },\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  marginVerticalNone: { marginVertical: 0 },\n  iconMarginLeft: { marginLeft: 0, marginRight: 16 },\n  iconMarginRight: { marginRight: 0 },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(ListItem);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}