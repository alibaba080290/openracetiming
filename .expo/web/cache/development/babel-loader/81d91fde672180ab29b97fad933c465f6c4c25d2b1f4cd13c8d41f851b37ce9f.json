{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.FABGroup = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _FAB = _interopRequireDefault(require(\"./FAB\"));\nvar _Text = _interopRequireDefault(require(\"../Typography/Text\"));\nvar _Card = _interopRequireDefault(require(\"../Card/Card\"));\nvar _theming = require(\"../../core/theming\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar FABGroup = function FABGroup(_ref) {\n  var actions = _ref.actions,\n    icon = _ref.icon,\n    open = _ref.open,\n    _onPress = _ref.onPress,\n    accessibilityLabel = _ref.accessibilityLabel,\n    theme = _ref.theme,\n    style = _ref.style,\n    fabStyle = _ref.fabStyle,\n    visible = _ref.visible,\n    testID = _ref.testID,\n    onStateChange = _ref.onStateChange,\n    colorProp = _ref.color,\n    backdropColor = _ref.backdropColor;\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0)),\n    backdrop = _React$useRef.current;\n  var animations = React.useRef(actions.map(function () {\n    return new _reactNative.Animated.Value(open ? 1 : 0);\n  }));\n  var _React$useState = React.useState(null),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    prevActions = _React$useState2[0],\n    setPrevActions = _React$useState2[1];\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    if (open) {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(backdrop, {\n        toValue: 1,\n        duration: 250 * scale,\n        useNativeDriver: true\n      }), _reactNative.Animated.stagger(50 * scale, animations.current.map(function (animation) {\n        return _reactNative.Animated.timing(animation, {\n          toValue: 1,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      }).reverse())]).start();\n    } else {\n      _reactNative.Animated.parallel([_reactNative.Animated.timing(backdrop, {\n        toValue: 0,\n        duration: 200 * scale,\n        useNativeDriver: true\n      })].concat((0, _toConsumableArray2.default)(animations.current.map(function (animation) {\n        return _reactNative.Animated.timing(animation, {\n          toValue: 0,\n          duration: 150 * scale,\n          useNativeDriver: true\n        });\n      })))).start();\n    }\n  }, [open, actions, backdrop, scale]);\n  var close = function close() {\n    return onStateChange({\n      open: false\n    });\n  };\n  var toggle = function toggle() {\n    return onStateChange({\n      open: !open\n    });\n  };\n  var colors = theme.colors;\n  var labelColor = theme.dark ? colors.text : (0, _color.default)(colors.text).fade(0.54).rgb().string();\n  var backdropOpacity = open ? backdrop.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 1, 1]\n  }) : backdrop;\n  var opacities = animations.current;\n  var scales = opacities.map(function (opacity) {\n    return open ? opacity.interpolate({\n      inputRange: [0, 1],\n      outputRange: [0.8, 1]\n    }) : 1;\n  });\n  if (actions.length !== (prevActions === null || prevActions === void 0 ? void 0 : prevActions.length)) {\n    animations.current = actions.map(function (_, i) {\n      return animations.current[i] || new _reactNative.Animated.Value(open ? 1 : 0);\n    });\n    setPrevActions(actions);\n  }\n  return React.createElement(_reactNative.View, {\n    pointerEvents: \"box-none\",\n    style: [styles.container, style]\n  }, React.createElement(_reactNative.TouchableWithoutFeedback, {\n    onPress: close\n  }, React.createElement(_reactNative.Animated.View, {\n    pointerEvents: open ? 'auto' : 'none',\n    style: [styles.backdrop, {\n      opacity: backdropOpacity,\n      backgroundColor: backdropColor || colors.backdrop\n    }]\n  })), React.createElement(_reactNative.SafeAreaView, {\n    pointerEvents: \"box-none\",\n    style: styles.safeArea\n  }, React.createElement(_reactNative.View, {\n    pointerEvents: open ? 'box-none' : 'none'\n  }, actions.map(function (it, i) {\n    var _it$labelTextColor;\n    return React.createElement(_reactNative.View, {\n      key: i,\n      style: [styles.item, {\n        marginHorizontal: typeof it.small === 'undefined' || it.small ? 24 : 16\n      }],\n      pointerEvents: open ? 'box-none' : 'none'\n    }, it.label && React.createElement(_reactNative.View, null, React.createElement(_Card.default, {\n      style: [styles.label, {\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i]\n      }, it.labelStyle],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\"\n    }, React.createElement(_Text.default, {\n      style: {\n        color: (_it$labelTextColor = it.labelTextColor) !== null && _it$labelTextColor !== void 0 ? _it$labelTextColor : labelColor\n      }\n    }, it.label))), React.createElement(_FAB.default, {\n      small: typeof it.small !== 'undefined' ? it.small : true,\n      icon: it.icon,\n      color: it.color,\n      style: [{\n        transform: [{\n          scale: scales[i]\n        }],\n        opacity: opacities[i],\n        backgroundColor: theme.colors.surface\n      }, it.style],\n      onPress: function onPress() {\n        it.onPress();\n        close();\n      },\n      accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n      accessibilityTraits: \"button\",\n      accessibilityComponentType: \"button\",\n      accessibilityRole: \"button\",\n      testID: it.testID,\n      visible: open\n    }));\n  })), React.createElement(_FAB.default, {\n    onPress: function onPress() {\n      _onPress === null || _onPress === void 0 ? void 0 : _onPress();\n      toggle();\n    },\n    icon: icon,\n    color: colorProp,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityTraits: \"button\",\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      expanded: open\n    },\n    style: [styles.fab, fabStyle],\n    visible: visible,\n    testID: testID\n  })));\n};\nFABGroup.displayName = 'FAB.Group';\nvar _default = exports.default = (0, _theming.withTheme)(FABGroup);\nvar FABGroupWithTheme = exports.FABGroup = (0, _theming.withTheme)(FABGroup);\nvar styles = _reactNative.StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_FAB","_Text","_Card","_theming","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","FABGroup","_ref","actions","icon","open","onPress","accessibilityLabel","theme","style","fabStyle","visible","testID","onStateChange","colorProp","color","backdropColor","_React$useRef","useRef","Animated","Value","backdrop","current","animations","map","_React$useState","useState","_React$useState2","_slicedToArray2","prevActions","setPrevActions","scale","animation","useEffect","parallel","timing","toValue","duration","useNativeDriver","stagger","reverse","start","concat","_toConsumableArray2","close","toggle","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","length","_","createElement","View","pointerEvents","styles","container","TouchableWithoutFeedback","backgroundColor","SafeAreaView","safeArea","it","_it$labelTextColor","key","item","marginHorizontal","small","label","Card","transform","labelStyle","accessibilityTraits","accessibilityComponentType","accessibilityRole","Text","labelTextColor","FAB","surface","accessibilityState","expanded","fab","displayName","_default","exports","withTheme","FABGroupWithTheme","StyleSheet","create","alignItems","assign","absoluteFillObject","justifyContent","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/FAB/FABGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `labelTextColor`: custom label text color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `labelStyle`: pass additional styles for the fab item label, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    labelTextColor?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    labelStyle?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Custom backdrop color for opened speed dial background.\n   */\n  backdropColor?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n  backdropColor,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: backdropColor || colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                        it.labelStyle,\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: it.labelTextColor ?? labelColor }}>\n                      {it.label}\n                    </Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          // @ts-expect-error We keep old a11y props for backwards compat with old RN versions\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}