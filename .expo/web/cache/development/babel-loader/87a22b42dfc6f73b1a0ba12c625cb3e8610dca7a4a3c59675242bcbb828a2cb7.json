{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NfcManagerEmitter = exports.NativeNfcManager = void 0;\nexports.callNative = callNative;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _reactNative = require(\"react-native\");\nvar NativeNfcManager = exports.NativeNfcManager = _reactNative.NativeModules.NfcManager;\nvar NfcManagerEmitter = exports.NfcManagerEmitter = new _reactNative.NativeEventEmitter(NativeNfcManager);\nfunction callNative(name) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var nativeMethod = NativeNfcManager[name];\n  if (!nativeMethod) {\n    throw new Error(\"no such native method: \\\"\" + name + \"\\\"\");\n  }\n  if (!Array.isArray(params)) {\n    throw new Error('params must be an array');\n  }\n  var createCallback = function createCallback(resolve, reject) {\n    return function (err, result) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(result);\n      }\n    };\n  };\n  return new Promise(function (resolve, reject) {\n    var callback = createCallback(resolve, reject);\n    var inputParams = [].concat((0, _toConsumableArray2.default)(params), [callback]);\n    nativeMethod.apply(void 0, (0, _toConsumableArray2.default)(inputParams));\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","NfcManagerEmitter","NativeNfcManager","callNative","_toConsumableArray2","_reactNative","NativeModules","NfcManager","NativeEventEmitter","name","params","arguments","length","undefined","nativeMethod","Error","Array","isArray","createCallback","resolve","reject","err","result","Promise","callback","inputParams","concat","default","apply"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NativeNfcManager.js"],"sourcesContent":["'use strict';\nimport {NativeModules, NativeEventEmitter} from 'react-native';\n\nconst NativeNfcManager = NativeModules.NfcManager;\nconst NfcManagerEmitter = new NativeEventEmitter(NativeNfcManager);\n\nfunction callNative(name, params = []) {\n  const nativeMethod = NativeNfcManager[name];\n\n  if (!nativeMethod) {\n    throw new Error(`no such native method: \"${name}\"`);\n  }\n\n  if (!Array.isArray(params)) {\n    throw new Error('params must be an array');\n  }\n\n  const createCallback = (resolve, reject) => (err, result) => {\n    if (err) {\n      reject(err);\n    } else {\n      resolve(result);\n    }\n  };\n\n  return new Promise((resolve, reject) => {\n    const callback = createCallback(resolve, reject);\n    const inputParams = [...params, callback];\n    nativeMethod(...inputParams);\n  });\n}\n\nexport {NativeNfcManager, NfcManagerEmitter, callNative};\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,iBAAA,GAAAF,OAAA,CAAAG,gBAAA;AAAAH,OAAA,CAAAI,UAAA,GAAAA,UAAA;AAAA,IAAAC,mBAAA,GAAAT,sBAAA,CAAAC,OAAA;AACb,IAAAS,YAAA,GAAAT,OAAA;AAEA,IAAMM,gBAAgB,GAAAH,OAAA,CAAAG,gBAAA,GAAGI,0BAAa,CAACC,UAAU;AACjD,IAAMN,iBAAiB,GAAAF,OAAA,CAAAE,iBAAA,GAAG,IAAIO,+BAAkB,CAACN,gBAAgB,CAAC;AAElE,SAASC,UAAUA,CAACM,IAAI,EAAe;EAAA,IAAbC,MAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACnC,IAAMG,YAAY,GAAGZ,gBAAgB,CAACO,IAAI,CAAC;EAE3C,IAAI,CAACK,YAAY,EAAE;IACjB,MAAM,IAAIC,KAAK,+BAA4BN,IAAI,OAAG,CAAC;EACrD;EAEA,IAAI,CAACO,KAAK,CAACC,OAAO,CAACP,MAAM,CAAC,EAAE;IAC1B,MAAM,IAAIK,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,OAAO,EAAEC,MAAM;IAAA,OAAK,UAACC,GAAG,EAAEC,MAAM,EAAK;MAC3D,IAAID,GAAG,EAAE;QACPD,MAAM,CAACC,GAAG,CAAC;MACb,CAAC,MAAM;QACLF,OAAO,CAACG,MAAM,CAAC;MACjB;IACF,CAAC;EAAA;EAED,OAAO,IAAIC,OAAO,CAAC,UAACJ,OAAO,EAAEC,MAAM,EAAK;IACtC,IAAMI,QAAQ,GAAGN,cAAc,CAACC,OAAO,EAAEC,MAAM,CAAC;IAChD,IAAMK,WAAW,MAAAC,MAAA,KAAAtB,mBAAA,CAAAuB,OAAA,EAAOjB,MAAM,IAAEc,QAAQ,EAAC;IACzCV,YAAY,CAAAc,KAAA,aAAAxB,mBAAA,CAAAuB,OAAA,EAAIF,WAAW,EAAC;EAC9B,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}