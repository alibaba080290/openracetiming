{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _TextInputOutlined = _interopRequireDefault(require(\"./TextInputOutlined\"));\nvar _TextInputFlat = _interopRequireDefault(require(\"./TextInputFlat\"));\nvar _TextInputIcon = _interopRequireDefault(require(\"./Adornment/TextInputIcon\"));\nvar _TextInputAffix = _interopRequireDefault(require(\"./Adornment/TextInputAffix\"));\nvar _theming = require(\"../../core/theming\");\nvar _excluded = [\"mode\", \"dense\", \"disabled\", \"error\", \"multiline\", \"editable\", \"render\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar BLUR_ANIMATION_DURATION = 180;\nvar FOCUS_ANIMATION_DURATION = 150;\nvar TextInput = React.forwardRef(function (_ref, ref) {\n  var _ref$mode = _ref.mode,\n    mode = _ref$mode === void 0 ? 'flat' : _ref$mode,\n    _ref$dense = _ref.dense,\n    dense = _ref$dense === void 0 ? false : _ref$dense,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$error = _ref.error,\n    errorProp = _ref$error === void 0 ? false : _ref$error,\n    _ref$multiline = _ref.multiline,\n    multiline = _ref$multiline === void 0 ? false : _ref$multiline,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? true : _ref$editable,\n    _ref$render = _ref.render,\n    render = _ref$render === void 0 ? function (props) {\n      return React.createElement(_reactNative.TextInput, props);\n    } : _ref$render,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var isControlled = rest.value !== undefined;\n  var validInputValue = isControlled ? rest.value : rest.defaultValue;\n  var _React$useRef = React.useRef(new _reactNative.Animated.Value(validInputValue ? 0 : 1)),\n    labeled = _React$useRef.current;\n  var _React$useRef2 = React.useRef(new _reactNative.Animated.Value(errorProp ? 1 : 0)),\n    error = _React$useRef2.current;\n  var _React$useState = React.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    focused = _React$useState2[0],\n    setFocused = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    placeholder = _React$useState4[0],\n    setPlaceholder = _React$useState4[1];\n  var _React$useState5 = React.useState(validInputValue),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    uncontrolledValue = _React$useState6[0],\n    setUncontrolledValue = _React$useState6[1];\n  var value = isControlled ? rest.value : uncontrolledValue;\n  var _React$useState7 = React.useState({\n      measured: false,\n      width: 0,\n      height: 0\n    }),\n    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n    labelLayout = _React$useState8[0],\n    setLabelLayout = _React$useState8[1];\n  var _React$useState9 = React.useState({\n      width: null,\n      height: null\n    }),\n    _React$useState0 = (0, _slicedToArray2.default)(_React$useState9, 2),\n    leftLayout = _React$useState0[0],\n    setLeftLayout = _React$useState0[1];\n  var _React$useState1 = React.useState({\n      width: null,\n      height: null\n    }),\n    _React$useState10 = (0, _slicedToArray2.default)(_React$useState1, 2),\n    rightLayout = _React$useState10[0],\n    setRightLayout = _React$useState10[1];\n  var timer = React.useRef();\n  var root = React.useRef();\n  var scale = rest.theme.animation.scale;\n  React.useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _root$current;\n        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.focus();\n      },\n      clear: function clear() {\n        var _root$current2;\n        return (_root$current2 = root.current) === null || _root$current2 === void 0 ? void 0 : _root$current2.clear();\n      },\n      setNativeProps: function setNativeProps(args) {\n        var _root$current3;\n        return (_root$current3 = root.current) === null || _root$current3 === void 0 ? void 0 : _root$current3.setNativeProps(args);\n      },\n      isFocused: function isFocused() {\n        var _root$current4;\n        return ((_root$current4 = root.current) === null || _root$current4 === void 0 ? void 0 : _root$current4.isFocused()) || false;\n      },\n      blur: function blur() {\n        var _root$current5;\n        return (_root$current5 = root.current) === null || _root$current5 === void 0 ? void 0 : _root$current5.blur();\n      },\n      forceFocus: function forceFocus() {\n        var _root$current6;\n        return (_root$current6 = root.current) === null || _root$current6 === void 0 ? void 0 : _root$current6.focus();\n      }\n    };\n  });\n  React.useEffect(function () {\n    if (errorProp) {\n      _reactNative.Animated.timing(error, {\n        toValue: 1,\n        duration: FOCUS_ANIMATION_DURATION * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      {\n        _reactNative.Animated.timing(error, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, [errorProp, scale, error]);\n  React.useEffect(function () {\n    if (focused || !rest.label) {\n      timer.current = setTimeout(function () {\n        return setPlaceholder(rest.placeholder);\n      }, 50);\n    } else {\n      setPlaceholder('');\n    }\n    return function () {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n    };\n  }, [focused, rest.label, rest.placeholder]);\n  React.useEffect(function () {\n    if (value || focused) {\n      _reactNative.Animated.timing(labeled, {\n        toValue: 0,\n        duration: BLUR_ANIMATION_DURATION * scale,\n        useNativeDriver: true\n      }).start();\n    } else {\n      {\n        _reactNative.Animated.timing(labeled, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, [focused, value, labeled, scale]);\n  var onLeftAffixLayoutChange = function onLeftAffixLayoutChange(event) {\n    setLeftLayout({\n      height: event.nativeEvent.layout.height,\n      width: event.nativeEvent.layout.width\n    });\n  };\n  var onRightAffixLayoutChange = function onRightAffixLayoutChange(event) {\n    setRightLayout({\n      width: event.nativeEvent.layout.width,\n      height: event.nativeEvent.layout.height\n    });\n  };\n  var handleFocus = function handleFocus(args) {\n    var _rest$onFocus;\n    if (disabled || !editable) {\n      return;\n    }\n    setFocused(true);\n    (_rest$onFocus = rest.onFocus) === null || _rest$onFocus === void 0 ? void 0 : _rest$onFocus.call(rest, args);\n  };\n  var handleBlur = function handleBlur(args) {\n    var _rest$onBlur;\n    if (!editable) {\n      return;\n    }\n    setFocused(false);\n    (_rest$onBlur = rest.onBlur) === null || _rest$onBlur === void 0 ? void 0 : _rest$onBlur.call(rest, args);\n  };\n  var handleChangeText = function handleChangeText(value) {\n    var _rest$onChangeText;\n    if (!editable || disabled) {\n      return;\n    }\n    if (!isControlled) {\n      setUncontrolledValue(value);\n    }\n    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, value);\n  };\n  var handleLayoutAnimatedText = function handleLayoutAnimatedText(e) {\n    setLabelLayout({\n      width: e.nativeEvent.layout.width,\n      height: e.nativeEvent.layout.height,\n      measured: true\n    });\n  };\n  var forceFocus = function forceFocus() {\n    var _root$current7;\n    return (_root$current7 = root.current) === null || _root$current7 === void 0 ? void 0 : _root$current7.focus();\n  };\n  var _rest$maxFontSizeMult = rest.maxFontSizeMultiplier,\n    maxFontSizeMultiplier = _rest$maxFontSizeMult === void 0 ? 1.5 : _rest$maxFontSizeMult;\n  if (mode === 'outlined') {\n    return React.createElement(_TextInputOutlined.default, _extends({\n      dense: dense,\n      disabled: disabled,\n      error: errorProp,\n      multiline: multiline,\n      editable: editable,\n      render: render\n    }, rest, {\n      value: value,\n      parentState: {\n        labeled: labeled,\n        error: error,\n        focused: focused,\n        placeholder: placeholder,\n        value: value,\n        labelLayout: labelLayout,\n        leftLayout: leftLayout,\n        rightLayout: rightLayout\n      },\n      innerRef: function innerRef(ref) {\n        root.current = ref;\n      },\n      onFocus: handleFocus,\n      forceFocus: forceFocus,\n      onBlur: handleBlur,\n      onChangeText: handleChangeText,\n      onLayoutAnimatedText: handleLayoutAnimatedText,\n      onLeftAffixLayoutChange: onLeftAffixLayoutChange,\n      onRightAffixLayoutChange: onRightAffixLayoutChange,\n      maxFontSizeMultiplier: maxFontSizeMultiplier\n    }));\n  }\n  return React.createElement(_TextInputFlat.default, _extends({\n    dense: dense,\n    disabled: disabled,\n    error: errorProp,\n    multiline: multiline,\n    editable: editable,\n    render: render\n  }, rest, {\n    value: value,\n    parentState: {\n      labeled: labeled,\n      error: error,\n      focused: focused,\n      placeholder: placeholder,\n      value: value,\n      labelLayout: labelLayout,\n      leftLayout: leftLayout,\n      rightLayout: rightLayout\n    },\n    innerRef: function innerRef(ref) {\n      root.current = ref;\n    },\n    onFocus: handleFocus,\n    forceFocus: forceFocus,\n    onBlur: handleBlur,\n    onChangeText: handleChangeText,\n    onLayoutAnimatedText: handleLayoutAnimatedText,\n    onLeftAffixLayoutChange: onLeftAffixLayoutChange,\n    onRightAffixLayoutChange: onRightAffixLayoutChange,\n    maxFontSizeMultiplier: maxFontSizeMultiplier\n  }));\n});\nTextInput.Icon = _TextInputIcon.default;\nTextInput.Affix = _TextInputAffix.default;\nvar _default = exports.default = (0, _theming.withTheme)(TextInput);","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_TextInputOutlined","_interopRequireDefault","_TextInputFlat","_TextInputIcon","_TextInputAffix","_theming","_excluded","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","forwardRef","_ref","ref","_ref$mode","mode","_ref$dense","dense","_ref$disabled","disabled","_ref$error","error","errorProp","_ref$multiline","multiline","_ref$editable","editable","_ref$render","render","props","createElement","NativeTextInput","rest","_objectWithoutProperties2","isControlled","value","undefined","validInputValue","defaultValue","_React$useRef","useRef","Animated","Value","labeled","current","_React$useRef2","_React$useState","useState","_React$useState2","_slicedToArray2","focused","setFocused","_React$useState3","_React$useState4","placeholder","setPlaceholder","_React$useState5","_React$useState6","uncontrolledValue","setUncontrolledValue","_React$useState7","measured","width","height","_React$useState8","labelLayout","setLabelLayout","_React$useState9","_React$useState0","leftLayout","setLeftLayout","_React$useState1","_React$useState10","rightLayout","setRightLayout","timer","root","scale","theme","animation","useImperativeHandle","focus","_root$current","clear","_root$current2","setNativeProps","args","_root$current3","isFocused","_root$current4","blur","_root$current5","forceFocus","_root$current6","useEffect","timing","toValue","duration","useNativeDriver","start","label","setTimeout","clearTimeout","onLeftAffixLayoutChange","event","nativeEvent","layout","onRightAffixLayoutChange","handleFocus","_rest$onFocus","onFocus","handleBlur","_rest$onBlur","onBlur","handleChangeText","_rest$onChangeText","onChangeText","handleLayoutAnimatedText","_root$current7","_rest$maxFontSizeMult","maxFontSizeMultiplier","TextInputOutlined","_extends","parentState","innerRef","onLayoutAnimatedText","TextInputFlat","Icon","TextInputIcon","Affix","TextInputAffix","_default","exports","withTheme"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/TextInput/TextInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextInput as NativeTextInput,\n  LayoutChangeEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TextInputOutlined from './TextInputOutlined';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputIcon, {\n  Props as TextInputIconProps,\n} from './Adornment/TextInputIcon';\nimport TextInputAffix, {\n  Props as TextInputAffixProps,\n} from './Adornment/TextInputAffix';\nimport { withTheme } from '../../core/theming';\nimport type { RenderProps, TextInputLabelProp } from './types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type TextInputProps = React.ComponentPropsWithRef<\n  typeof NativeTextInput\n> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text or component to use for the floating label.\n   */\n  label?: TextInputLabelProp;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input\n   */\n  selectionColor?: string;\n  /**\n   * Inactive underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Active underline color of the input.\n   */\n  activeUnderlineColor?: string;\n  /**\n   * Inactive outline color of the input.\n   */\n  outlineColor?: string;\n  /**\n   * Active outline color of the input.\n   */\n  activeOutlineColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `height` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\ninterface CompoundedComponent\n  extends React.ForwardRefExoticComponent<\n    TextInputProps & React.RefAttributes<TextInputHandles>\n  > {\n  Icon: React.FunctionComponent<TextInputIconProps>;\n  Affix: React.FunctionComponent<Partial<TextInputAffixProps>>;\n}\n\ntype TextInputHandles = Pick<\n  NativeTextInput,\n  'focus' | 'clear' | 'blur' | 'isFocused' | 'setNativeProps'\n>;\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState(\"\");\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nconst TextInput = React.forwardRef<TextInputHandles, TextInputProps>(\n  (\n    {\n      mode = 'flat',\n      dense = false,\n      disabled = false,\n      error: errorProp = false,\n      multiline = false,\n      editable = true,\n      render = (props: RenderProps) => <NativeTextInput {...props} />,\n      ...rest\n    }: TextInputProps,\n    ref\n  ) => {\n    const isControlled = rest.value !== undefined;\n    const validInputValue = isControlled ? rest.value : rest.defaultValue;\n\n    const { current: labeled } = React.useRef<Animated.Value>(\n      new Animated.Value(validInputValue ? 0 : 1)\n    );\n    const { current: error } = React.useRef<Animated.Value>(\n      new Animated.Value(errorProp ? 1 : 0)\n    );\n    const [focused, setFocused] = React.useState<boolean>(false);\n    const [placeholder, setPlaceholder] = React.useState<string | undefined>(\n      ''\n    );\n    const [uncontrolledValue, setUncontrolledValue] = React.useState<\n      string | undefined\n    >(validInputValue);\n    // Use value from props instead of local state when input is controlled\n    const value = isControlled ? rest.value : uncontrolledValue;\n\n    const [labelLayout, setLabelLayout] = React.useState<{\n      measured: boolean;\n      width: number;\n      height: number;\n    }>({\n      measured: false,\n      width: 0,\n      height: 0,\n    });\n    const [leftLayout, setLeftLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n    const [rightLayout, setRightLayout] = React.useState<{\n      height: number | null;\n      width: number | null;\n    }>({\n      width: null,\n      height: null,\n    });\n\n    const timer = React.useRef<NodeJS.Timeout | undefined>();\n\n    const root = React.useRef<NativeTextInput | undefined | null>();\n\n    const { scale } = rest.theme.animation;\n\n    React.useImperativeHandle(ref, () => ({\n      focus: () => root.current?.focus(),\n      clear: () => root.current?.clear(),\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      isFocused: () => root.current?.isFocused() || false,\n      blur: () => root.current?.blur(),\n      forceFocus: () => root.current?.focus(),\n    }));\n\n    React.useEffect(() => {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (errorProp) {\n        // show error\n        Animated.timing(error, {\n          toValue: 1,\n          duration: FOCUS_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // hide error\n        {\n          Animated.timing(error, {\n            toValue: 0,\n            duration: BLUR_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [errorProp, scale, error]);\n\n    React.useEffect(() => {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (focused || !rest.label) {\n        // Set the placeholder in a delay to offset the label animation\n        // If we show it immediately, they'll overlap and look ugly\n        timer.current = setTimeout(\n          () => setPlaceholder(rest.placeholder),\n          50\n        ) as unknown as NodeJS.Timeout;\n      } else {\n        // hidePlaceholder\n        setPlaceholder('');\n      }\n\n      return () => {\n        if (timer.current) {\n          clearTimeout(timer.current);\n        }\n      };\n    }, [focused, rest.label, rest.placeholder]);\n\n    React.useEffect(() => {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      if (value || focused) {\n        // minimize label\n        Animated.timing(labeled, {\n          toValue: 0,\n          duration: BLUR_ANIMATION_DURATION * scale,\n          // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n          useNativeDriver: true,\n        }).start();\n      } else {\n        // restore label\n        {\n          Animated.timing(labeled, {\n            toValue: 1,\n            duration: FOCUS_ANIMATION_DURATION * scale,\n            // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n            useNativeDriver: true,\n          }).start();\n        }\n      }\n    }, [focused, value, labeled, scale]);\n\n    const onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setLeftLayout({\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      });\n    };\n\n    const onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n      setRightLayout({\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      });\n    };\n\n    const handleFocus = (args: any) => {\n      if (disabled || !editable) {\n        return;\n      }\n\n      setFocused(true);\n\n      rest.onFocus?.(args);\n    };\n\n    const handleBlur = (args: Object) => {\n      if (!editable) {\n        return;\n      }\n\n      setFocused(false);\n      rest.onBlur?.(args);\n    };\n\n    const handleChangeText = (value: string) => {\n      if (!editable || disabled) {\n        return;\n      }\n\n      if (!isControlled) {\n        // Keep track of value in local state when input is not controlled\n        setUncontrolledValue(value);\n      }\n      rest.onChangeText?.(value);\n    };\n\n    const handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n      setLabelLayout({\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      });\n    };\n    const forceFocus = () => root.current?.focus();\n\n    const { maxFontSizeMultiplier = 1.5 } = rest;\n\n    if (mode === 'outlined') {\n      return (\n        <TextInputOutlined\n          dense={dense}\n          disabled={disabled}\n          error={errorProp}\n          multiline={multiline}\n          editable={editable}\n          render={render}\n          {...rest}\n          value={value}\n          parentState={{\n            labeled,\n            error,\n            focused,\n            placeholder,\n            value,\n            labelLayout,\n            leftLayout,\n            rightLayout,\n          }}\n          innerRef={(ref) => {\n            root.current = ref;\n          }}\n          onFocus={handleFocus}\n          forceFocus={forceFocus}\n          onBlur={handleBlur}\n          onChangeText={handleChangeText}\n          onLayoutAnimatedText={handleLayoutAnimatedText}\n          onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n          onRightAffixLayoutChange={onRightAffixLayoutChange}\n          maxFontSizeMultiplier={maxFontSizeMultiplier}\n        />\n      );\n    }\n\n    return (\n      <TextInputFlat\n        dense={dense}\n        disabled={disabled}\n        error={errorProp}\n        multiline={multiline}\n        editable={editable}\n        render={render}\n        {...rest}\n        value={value}\n        parentState={{\n          labeled,\n          error,\n          focused,\n          placeholder,\n          value,\n          labelLayout,\n          leftLayout,\n          rightLayout,\n        }}\n        innerRef={(ref) => {\n          root.current = ref;\n        }}\n        onFocus={handleFocus}\n        forceFocus={forceFocus}\n        onBlur={handleBlur}\n        onChangeText={handleChangeText}\n        onLayoutAnimatedText={handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={onRightAffixLayoutChange}\n        maxFontSizeMultiplier={maxFontSizeMultiplier}\n      />\n    );\n  }\n) as CompoundedComponent;\n// @component ./Adornment/TextInputIcon.tsx\nTextInput.Icon = TextInputIcon;\n\n// @component ./Adornment/TextInputAffix.tsx\n// @ts-ignore Types of property 'theme' are incompatible.\nTextInput.Affix = TextInputAffix;\n\nexport default withTheme(TextInput);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}