{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeDocumentPicker = _interopRequireDefault(require(\"react-native-document-picker\"));\nvar _reactNativePaper = require(\"react-native-paper\");\nvar _reactNativeCsv = require(\"react-native-csv\");\nvar _reactNativeNfcManager = _interopRequireWildcard(require(\"react-native-nfc-manager\"));\nvar _LocalStorage = _interopRequireDefault(require(\"../lib/LocalStorage\"));\nvar _Utils = _interopRequireDefault(require(\"../lib/Utils\"));\nvar _EntrantRecordLine = _interopRequireDefault(require(\"./EntrantRecordLine\"));\nvar _Styles = _interopRequireDefault(require(\"../style/Styles\"));\nvar _CurrentRaceView = _interopRequireDefault(require(\"./CurrentRaceView\"));\nvar _native = require(\"@react-navigation/native\");\nvar _this = this,\n  _jsxFileName = \"/home/admin/openracetiming/src/components/Registration.tsx\";\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar Registration = function Registration() {\n  var _React$useState = React.useState([]),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    records = _React$useState2[0],\n    setRecords = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    entryData = _React$useState4[0],\n    setEntryData = _React$useState4[1];\n  var _React$useState5 = React.useState(0),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    currentlySelectedIndex = _React$useState6[0],\n    setCurrentlySelectedIndex = _React$useState6[1];\n  var _React$useState7 = React.useState(false),\n    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n    addOrEdit = _React$useState8[0],\n    setAddOrEdit = _React$useState8[1];\n  var _React$useState9 = React.useState(false),\n    _React$useState0 = (0, _slicedToArray2.default)(_React$useState9, 2),\n    displaySaveButton = _React$useState0[0],\n    setDisplaySaveButton = _React$useState0[1];\n  var _React$useState1 = React.useState(''),\n    _React$useState10 = (0, _slicedToArray2.default)(_React$useState1, 2),\n    statusMessage = _React$useState10[0],\n    setStatusMessage = _React$useState10[1];\n  var defaultEntryFields = ['Firstname', 'Lastname', 'Club', 'Category'];\n  var _React$useState11 = React.useState(false),\n    _React$useState12 = (0, _slicedToArray2.default)(_React$useState11, 2),\n    nfcRegistered = _React$useState12[0],\n    setNfcRegistered = _React$useState12[1];\n  var _React$useState13 = React.useState({}),\n    _React$useState14 = (0, _slicedToArray2.default)(_React$useState13, 2),\n    currentRace = _React$useState14[0],\n    setCurrentRace = _React$useState14[1];\n  var _React$useState15 = React.useState(''),\n    _React$useState16 = (0, _slicedToArray2.default)(_React$useState15, 2),\n    debug = _React$useState16[0],\n    setDebug = _React$useState16[1];\n  var parseCSV = function parseCSV(data) {\n    var results = (0, _reactNativeCsv.readString)(data, {\n      header: true,\n      skipEmptyLines: true\n    });\n    return results.data;\n  };\n  var headerLine = function headerLine(keys) {\n    return React.createElement(_reactNativePaper.DataTable.Header, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, keys.map(function (field) {\n      return React.createElement(_reactNativePaper.DataTable.Title, {\n        key: field,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }\n      }, field);\n    }));\n  };\n  var selectRecord = function selectRecord(record) {\n    setNfcRegistered(record.nfcId);\n    setEntryData(record);\n    setAddOrEdit(true);\n    setDisplaySaveButton(true);\n  };\n  var keyFromObject = function keyFromObject(obj) {\n    return obj[Object.keys(obj)[0]] + obj[Object.keys(obj)[1]];\n  };\n  var rowsLine = function rowsLine(index, entrantRecord) {\n    return React.createElement(_reactNative.TouchableOpacity, {\n      key: keyFromObject(entrantRecord),\n      onPress: function onPress() {\n        setCurrentlySelectedIndex(index);\n        selectRecord(entrantRecord);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, React.createElement(_EntrantRecordLine.default, {\n      record: entrantRecord,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  };\n  var updateTextField = function updateTextField(key, text) {\n    setEntryData(Object.assign({}, entryData, {\n      key: entryData[key] + text\n    }));\n  };\n  var entryForm = function entryForm(key, value) {\n    return React.createElement(_reactNative.TextInput, {\n      key: key,\n      editable: false,\n      placeholder: key,\n      value: value,\n      onChangeText: function onChangeText(changedText) {\n        return updateTextField(key, changedText);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    });\n  };\n  React.useEffect(function () {\n    var initNfc = function () {\n      var _ref = (0, _asyncToGenerator2.default)(function* () {\n        yield _reactNativeNfcManager.default.registerTagEvent();\n      });\n      return function initNfc() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initNfc().catch(function (e) {\n      return _reactNative.Alert.alert(JSON.stringify(e));\n    });\n  });\n  (0, _native.useFocusEffect)(function () {\n    if (!currentRace || Object.keys(currentRace).length === 0) {\n      _LocalStorage.default.getCurrentRace().then(function (raceDetails) {\n        console.log(raceDetails);\n        if (raceDetails) {\n          setCurrentRace(JSON.parse(raceDetails));\n          populateExistingEntryList(JSON.parse(raceDetails));\n        }\n      });\n    }\n  });\n  var populateExistingEntryList = function populateExistingEntryList(raceDetails) {\n    _LocalStorage.default.getAllEntrants(_Utils.default.getRaceKey(raceDetails)).then(function (entrants) {\n      var parsedEntrants = entrants.filter(function (entrant) {\n        return entrant;\n      }).map(function (entrant) {\n        return JSON.parse(entrant);\n      });\n      setRecords.apply(void 0, (0, _toConsumableArray2.default)(records).concat([parsedEntrants]));\n      populateEntryTable.apply(void 0, (0, _toConsumableArray2.default)(records).concat([parsedEntrants]));\n    }).catch(function (e) {\n      return setDebug(e.message);\n    });\n  };\n  var registerId = function registerId(nfcId) {\n    var copyRecords = records;\n    copyRecords[currentlySelectedIndex].nfcId = nfcId;\n    setRecords(copyRecords);\n    setNfcRegistered(true);\n    _LocalStorage.default.addToStarterList(_Utils.default.getRaceKey(currentRace), records[currentlySelectedIndex]);\n  };\n  React.useEffect(function () {\n    _reactNativeNfcManager.default.setEventListener(_reactNativeNfcManager.NfcEvents.DiscoverTag, function (tag) {\n      if (addOrEdit) {\n        registerId(tag.id);\n      } else {}\n    });\n  });\n  var populateEntryTable = function populateEntryTable(entrants) {\n    return React.createElement(React.Fragment, null, entrants.length > 0 ? headerLine(Object.keys(entrants[0])) : '', entrants.length > 0 ? entrants.map(function (record, index) {\n      return rowsLine(index, record);\n    }) : '');\n  };\n  return React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, React.createElement(_CurrentRaceView.default, {\n    raceDetails: currentRace,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }), React.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, debug), React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.Button, {\n    title: \"Import csv\",\n    color: \"#e69138ff\",\n    onPress: (0, _asyncToGenerator2.default)(function* () {\n      try {\n        var response = yield _reactNativeDocumentPicker.default.pick({\n          presentationStyle: 'fullScreen'\n        });\n        var file = yield fetch(response[0].uri);\n        var data = yield file.text();\n        setRecords(parseCSV(data));\n      } catch (e) {\n        setStatusMessage('ERROR:' + e.message);\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }))), React.createElement(_reactNative.ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNativePaper.DataTable, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, records && populateEntryTable(records))), addOrEdit ? React.createElement(_reactNative.View, {\n    style: _Styles.default.RegisterEntryBox,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, Object.keys(entryData).length > 0 ? Object.keys(entryData).map(function (key) {\n    return entryForm(key, entryData[key]);\n  }) : '', React.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, nfcRegistered ? entryData.nfcId : 'Electronic timing chip not yet registered')) : '', React.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, !displaySaveButton ? React.createElement(_reactNative.Button, {\n    title: \"Add entry\",\n    color: _Styles.default.button.color,\n    disabled: true,\n    onPress: function onPress() {\n      setAddOrEdit(true);\n      var entryObject = defaultEntryFields.reduce(function (o, key) {\n        return Object.assign(o, (0, _defineProperty2.default)({}, key, ''));\n      }, {});\n      setEntryData(entryObject);\n      setDisplaySaveButton(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }) : '', displaySaveButton && false ? React.createElement(_reactNative.Button, {\n    title: \"Save\",\n    disabled: true,\n    color: \"#e69138ff\",\n    onPress: (0, _asyncToGenerator2.default)(function* () {}),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }) : '', displaySaveButton && false ? React.createElement(_reactNative.Button, {\n    title: \"Cancel\",\n    color: \"#e69138ff\",\n    disabled: true,\n    onPress: (0, _asyncToGenerator2.default)(function* () {\n      setAddOrEdit(false);\n      setEntryData([]);\n      setDisplaySaveButton(false);\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }) : '')), React.createElement(_reactNative.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, statusMessage)));\n};\nvar _default = exports.default = Registration;","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_reactNativeDocumentPicker","_interopRequireDefault","_reactNativePaper","_reactNativeCsv","_reactNativeNfcManager","_LocalStorage","_Utils","_EntrantRecordLine","_Styles","_CurrentRaceView","_native","_this","_jsxFileName","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","Registration","_React$useState","useState","_React$useState2","_slicedToArray2","records","setRecords","_React$useState3","_React$useState4","entryData","setEntryData","_React$useState5","_React$useState6","currentlySelectedIndex","setCurrentlySelectedIndex","_React$useState7","_React$useState8","addOrEdit","setAddOrEdit","_React$useState9","_React$useState0","displaySaveButton","setDisplaySaveButton","_React$useState1","_React$useState10","statusMessage","setStatusMessage","defaultEntryFields","_React$useState11","_React$useState12","nfcRegistered","setNfcRegistered","_React$useState13","_React$useState14","currentRace","setCurrentRace","_React$useState15","_React$useState16","debug","setDebug","parseCSV","data","results","readString","header","skipEmptyLines","headerLine","keys","createElement","DataTable","Header","__self","__source","fileName","lineNumber","columnNumber","map","field","Title","key","selectRecord","record","nfcId","keyFromObject","obj","rowsLine","index","entrantRecord","TouchableOpacity","onPress","updateTextField","text","assign","entryForm","value","TextInput","editable","placeholder","onChangeText","changedText","useEffect","initNfc","_ref","_asyncToGenerator2","NfcManager","registerTagEvent","apply","arguments","catch","Alert","alert","JSON","stringify","useFocusEffect","length","LocalStorage","getCurrentRace","then","raceDetails","console","log","parse","populateExistingEntryList","getAllEntrants","Utils","getRaceKey","entrants","parsedEntrants","filter","entrant","_toConsumableArray2","concat","populateEntryTable","message","registerId","copyRecords","addToStarterList","setEventListener","NfcEvents","DiscoverTag","tag","id","Fragment","View","Text","Button","title","color","response","DocumentPicker","pick","presentationStyle","file","fetch","uri","ScrollView","style","styles","RegisterEntryBox","button","disabled","entryObject","reduce","_defineProperty2","_default","exports"],"sources":["/home/admin/openracetiming/src/components/Registration.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ScrollView,\n  Text,\n  Button,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n} from 'react-native';\nimport DocumentPicker from 'react-native-document-picker';\nimport { DataTable } from 'react-native-paper';\nimport { readString } from 'react-native-csv';\nimport NfcManager, { NfcEvents } from 'react-native-nfc-manager';\nimport LocalStorage from '../lib/LocalStorage';\nimport Utils from '../lib/Utils';\nimport EntrantRecordLine from './EntrantRecordLine';\nimport styles from '../style/Styles';\nimport CurrentRaceView from './CurrentRaceView';\nimport { useFocusEffect } from '@react-navigation/native';\n\nconst Registration = () => {\n  const [records, setRecords] = React.useState([]);\n  //   const [allEntriesData, setAllEntriesData] = React.useState([]);\n  const [entryData, setEntryData] = React.useState([]);\n  const [currentlySelectedIndex, setCurrentlySelectedIndex] = React.useState(0);\n  const [addOrEdit, setAddOrEdit] = React.useState(false);\n  const [displaySaveButton, setDisplaySaveButton] = React.useState(false);\n  const [statusMessage, setStatusMessage] = React.useState('');\n  const defaultEntryFields = ['Firstname', 'Lastname', 'Club', 'Category'];\n  //   const [raceNumber, setRaceNumber] = React.useState('');\n  const [nfcRegistered, setNfcRegistered] = React.useState(false);\n  const [currentRace, setCurrentRace] = React.useState({});\n  const [debug, setDebug] = React.useState('');\n  //   const [tableContent, setTableContent] = React.useState('');\n\n  const parseCSV = (data) => {\n    const results = readString(data, { header: true, skipEmptyLines: true });\n    return results.data; //handle errors\n  };\n\n  const headerLine = (keys) => {\n    return (\n      <DataTable.Header>\n        {keys.map((field) => {\n          return <DataTable.Title key={field}>{field}</DataTable.Title>;\n        })}\n        {/*         <DataTable.Title key='rn'>Race Number</DataTable.Title> */}\n        {/*<DataTable.Title key=\"tag\">Registered eTag</DataTable.Title>*/}\n      </DataTable.Header>\n    );\n  };\n\n  const selectRecord = (record) => {\n    setNfcRegistered(record.nfcId);\n    setEntryData(record);\n    setAddOrEdit(true);\n    setDisplaySaveButton(true);\n  };\n\n  const keyFromObject = (obj) => {\n    return obj[Object.keys(obj)[0]] + obj[Object.keys(obj)[1]];\n  };\n\n  const rowsLine = (index, entrantRecord) => {\n    return (\n      <TouchableOpacity\n        key={keyFromObject(entrantRecord)}\n        onPress={() => {\n          setCurrentlySelectedIndex(index);\n          selectRecord(entrantRecord);\n        }}\n      >\n        <EntrantRecordLine record={entrantRecord} />\n      </TouchableOpacity>\n    );\n  };\n\n  const updateTextField = (key, text) => {\n    setEntryData({ ...entryData, key: entryData[key] + text });\n  };\n\n  const entryForm = (key, value) => {\n    return (\n      <TextInput\n        key={key}\n        editable={false}\n        placeholder={key}\n        value={value}\n        onChangeText={(changedText) => updateTextField(key, changedText)}\n      />\n    );\n  };\n\n  React.useEffect(() => {\n    const initNfc = async () => {\n      await NfcManager.registerTagEvent();\n    };\n    initNfc().catch((e) => Alert.alert(JSON.stringify(e)));\n  });\n\n  useFocusEffect(() => {\n    if (!currentRace || Object.keys(currentRace).length === 0) {\n      LocalStorage.getCurrentRace().then((raceDetails) => {\n        console.log(raceDetails);\n        if (raceDetails) {\n          setCurrentRace(JSON.parse(raceDetails));\n          populateExistingEntryList(JSON.parse(raceDetails));\n        }\n      });\n    }\n  });\n  // consistently populates the table on the SECOND load of the csv file. So something somewhere in state is broken\n\n  const populateExistingEntryList = (raceDetails) => {\n    LocalStorage.getAllEntrants(Utils.getRaceKey(raceDetails))\n      .then((entrants) => {\n        const parsedEntrants = entrants\n          .filter((entrant) => entrant)\n          .map((entrant) => JSON.parse(entrant));\n        setRecords(...records, parsedEntrants);\n        populateEntryTable(...records, parsedEntrants);\n      })\n      .catch((e) => setDebug(e.message));\n  };\n\n  const registerId = (nfcId: string) => {\n    let copyRecords = records;\n    copyRecords[currentlySelectedIndex].nfcId = nfcId;\n    setRecords(copyRecords);\n    //         Alert.alert(JSON.stringify(parsedData[currentlySelectedIndex]));\n    setNfcRegistered(true);\n    //TODO this is a really shitty way of implementing this functionality - too big a refresh?\n    LocalStorage.addToStarterList(\n      Utils.getRaceKey(currentRace),\n      records[currentlySelectedIndex]\n    );\n  };\n\n  React.useEffect(() => {\n    NfcManager.setEventListener(NfcEvents.DiscoverTag, (tag: any) => {\n      if (addOrEdit) {\n        registerId(tag.id);\n      } else {\n      }\n    });\n  });\n\n  const populateEntryTable = (entrants) => {\n    return (\n      <>\n        {entrants.length > 0 ? headerLine(Object.keys(entrants[0])) : ''}\n        {entrants.length > 0\n          ? entrants.map((record, index) => rowsLine(index, record))\n          : ''}\n      </>\n    );\n  };\n\n  return (\n    <View>\n      <CurrentRaceView raceDetails={currentRace} />\n      <Text>{debug}</Text>\n      <View>\n        <Text>\n          <Button\n            title=\"Import csv\"\n            color=\"#e69138ff\"\n            onPress={async () => {\n              try {\n                const response = await DocumentPicker.pick({\n                  presentationStyle: 'fullScreen',\n                });\n                const file = await fetch(response[0].uri);\n                const data = await file.text(); //JSON.stringify(file);\n                setRecords(parseCSV(data));\n              } catch (e) {\n                setStatusMessage('ERROR:' + e.message);\n              }\n            }}\n          />\n        </Text>\n      </View>\n      <ScrollView>\n        <View>\n          <DataTable>{records && populateEntryTable(records)}</DataTable>\n        </View>\n        {addOrEdit ? (\n          <View style={styles.RegisterEntryBox}>\n            {Object.keys(entryData).length > 0\n              ? Object.keys(entryData).map((key) =>\n                  entryForm(key, entryData[key])\n                )\n              : ''}\n            {/*<TextInput\n            placeholder=\"Race number\"\n            value={raceNumber}\n            onChangeText={setRaceNumber}\n          />*/}\n            <Text>\n              {nfcRegistered\n                ? entryData.nfcId\n                : 'Electronic timing chip not yet registered'}\n            </Text>\n          </View>\n        ) : (\n          ''\n        )}\n\n        <View>\n          <Text>\n            {!displaySaveButton ? (\n              <Button\n                title=\"Add entry\"\n                color={styles.button.color}\n                disabled={true}\n                onPress={() => {\n                  setAddOrEdit(true);\n                  const entryObject = defaultEntryFields.reduce(\n                    (o, key) => Object.assign(o, { [key]: '' }),\n                    {}\n                  );\n                  setEntryData(entryObject);\n                  setDisplaySaveButton(true);\n                }}\n              />\n            ) : (\n              ''\n            )}\n\n            {displaySaveButton && false ? (\n              <Button\n                title=\"Save\"\n                disabled={true}\n                color=\"#e69138ff\"\n                onPress={async () => {}}\n              />\n            ) : (\n              ''\n            )}\n            {displaySaveButton && false ? (\n              <Button\n                title=\"Cancel\"\n                color=\"#e69138ff\"\n                disabled={true}\n                onPress={async () => {\n                  setAddOrEdit(false);\n                  setEntryData([]);\n                  setDisplaySaveButton(false);\n                }}\n              />\n            ) : (\n              ''\n            )}\n          </Text>\n        </View>\n\n        <Text>{statusMessage}</Text>\n      </ScrollView>\n    </View>\n  );\n};\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}