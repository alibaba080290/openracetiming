{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_REGISTER_TAG_EVENT_OPTIONS = void 0;\nObject.defineProperty(exports, \"NdefStatus\", {\n  enumerable: true,\n  get: function get() {\n    return _NdefHandler.NdefStatus;\n  }\n});\nexports.NfcTech = exports.NfcManagerBase = exports.NfcEvents = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeNfcManager = require(\"./NativeNfcManager\");\nvar _NdefHandler = require(\"./NfcTech/NdefHandler\");\nvar _NfcAHandler = require(\"./NfcTech/NfcAHandler\");\nvar _NfcVHandler = require(\"./NfcTech/NfcVHandler\");\nvar _IsoDepHandler = require(\"./NfcTech/IsoDepHandler\");\nvar _NfcError = require(\"./NfcError\");\nvar NfcEvents = exports.NfcEvents = {\n  DiscoverTag: 'NfcManagerDiscoverTag',\n  DiscoverBackgroundTag: 'NfcManagerDiscoverBackgroundTag',\n  SessionClosed: 'NfcManagerSessionClosed',\n  StateChanged: 'NfcManagerStateChanged'\n};\nvar NfcTech = exports.NfcTech = {\n  Ndef: 'Ndef',\n  NfcA: 'NfcA',\n  NfcB: 'NfcB',\n  NfcF: 'NfcF',\n  NfcV: 'NfcV',\n  IsoDep: 'IsoDep',\n  MifareClassic: 'MifareClassic',\n  MifareUltralight: 'MifareUltralight',\n  MifareIOS: 'mifare',\n  Iso15693IOS: 'iso15693',\n  FelicaIOS: 'felica',\n  NdefFormatable: 'NdefFormatable'\n};\nvar DEFAULT_REGISTER_TAG_EVENT_OPTIONS = exports.DEFAULT_REGISTER_TAG_EVENT_OPTIONS = {\n  alertMessage: 'Please tap NFC tags',\n  invalidateAfterFirstRead: false,\n  isReaderModeEnabled: false,\n  readerModeFlags: 0,\n  readerModeDelay: 10\n};\nfunction NotImpl() {\n  throw new Error('not implemented');\n}\nfunction DoNothing() {\n  return _DoNothing.apply(this, arguments);\n}\nfunction _DoNothing() {\n  _DoNothing = (0, _asyncToGenerator2.default)(function* () {});\n  return _DoNothing.apply(this, arguments);\n}\nvar NfcManagerBase = exports.NfcManagerBase = function () {\n  function NfcManagerBase() {\n    var _this = this;\n    (0, _classCallCheck2.default)(this, NfcManagerBase);\n    this.requestTechnology = NotImpl;\n    this.cancelTechnologyRequest = NotImpl;\n    this.getBackgroundTag = NotImpl;\n    this.clearBackgroundTag = NotImpl;\n    this.setAlertMessage = DoNothing;\n    this._onDiscoverTag = function (tag) {\n      var callback = _this._clientListeners[NfcEvents.DiscoverTag];\n      if (callback) {\n        callback(tag);\n      }\n    };\n    this._onDiscoverBackgroundTag = function (tag) {\n      var callback = _this._clientListeners[NfcEvents.DiscoverBackgroundTag];\n      if (callback) {\n        callback(tag);\n      }\n    };\n    this._onSessionClosedIOS = function (resp) {\n      var callback = _this._clientListeners[NfcEvents.SessionClosed];\n      if (callback) {\n        var error = (0, _NfcError.buildNfcExceptionIOS)(resp.error);\n        callback(error instanceof _NfcError.UserCancel ? null : error);\n      }\n    };\n    this._onStateChangedAndroid = function (state) {\n      var callback = _this._clientListeners[NfcEvents.StateChanged];\n      if (callback) {\n        callback(state);\n      }\n    };\n    this._subscribeNativeEvents = function () {\n      _this._subscriptions = {};\n      _this._clientListeners = {};\n      _this._subscriptions[NfcEvents.DiscoverTag] = _NativeNfcManager.NfcManagerEmitter.addListener(NfcEvents.DiscoverTag, _this._onDiscoverTag);\n      _this._subscriptions[NfcEvents.DiscoverBackgroundTag] = _NativeNfcManager.NfcManagerEmitter.addListener(NfcEvents.DiscoverBackgroundTag, _this._onDiscoverBackgroundTag);\n      if (_reactNative.Platform.OS === 'ios') {\n        _this._subscriptions[NfcEvents.SessionClosed] = _NativeNfcManager.NfcManagerEmitter.addListener(NfcEvents.SessionClosed, _this._onSessionClosedIOS);\n      }\n      if (_reactNative.Platform.OS === 'android') {\n        _this._subscriptions[NfcEvents.StateChanged] = _NativeNfcManager.NfcManagerEmitter.addListener(NfcEvents.StateChanged, _this._onStateChangedAndroid);\n      }\n    };\n    this._subscribeNativeEvents();\n  }\n  return (0, _createClass2.default)(NfcManagerBase, [{\n    key: \"start\",\n    value: function () {\n      var _start = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('start'));\n      });\n      function start() {\n        return _start.apply(this, arguments);\n      }\n      return start;\n    }()\n  }, {\n    key: \"isSupported\",\n    value: function () {\n      var _isSupported = (0, _asyncToGenerator2.default)(function* () {\n        var tech = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('isSupported', [tech]));\n      });\n      function isSupported() {\n        return _isSupported.apply(this, arguments);\n      }\n      return isSupported;\n    }()\n  }, {\n    key: \"registerTagEvent\",\n    value: function () {\n      var _registerTagEvent = (0, _asyncToGenerator2.default)(function* () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var optionsWithDefault = Object.assign({}, DEFAULT_REGISTER_TAG_EVENT_OPTIONS, options);\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('registerTagEvent', [optionsWithDefault]));\n      });\n      function registerTagEvent() {\n        return _registerTagEvent.apply(this, arguments);\n      }\n      return registerTagEvent;\n    }()\n  }, {\n    key: \"unregisterTagEvent\",\n    value: function () {\n      var _unregisterTagEvent = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('unregisterTagEvent'));\n      });\n      function unregisterTagEvent() {\n        return _unregisterTagEvent.apply(this, arguments);\n      }\n      return unregisterTagEvent;\n    }()\n  }, {\n    key: \"getTag\",\n    value: function () {\n      var _getTag = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getTag'));\n      });\n      function getTag() {\n        return _getTag.apply(this, arguments);\n      }\n      return getTag;\n    }()\n  }, {\n    key: \"setEventListener\",\n    value: function setEventListener(name, callback) {\n      var allNfcEvents = Object.keys(NfcEvents).map(function (k) {\n        return NfcEvents[k];\n      });\n      if (allNfcEvents.indexOf(name) === -1) {\n        throw new Error('no such event');\n      }\n      this._clientListeners[name] = callback;\n    }\n  }, {\n    key: \"writeNdefMessage\",\n    value: function () {\n      var _writeNdefMessage = (0, _asyncToGenerator2.default)(function* (bytes) {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('writeNdefMessage', [bytes]));\n      });\n      function writeNdefMessage(_x) {\n        return _writeNdefMessage.apply(this, arguments);\n      }\n      return writeNdefMessage;\n    }()\n  }, {\n    key: \"getNdefMessage\",\n    value: function () {\n      var _getNdefMessage = (0, _asyncToGenerator2.default)(function* () {\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('getNdefMessage'));\n      });\n      function getNdefMessage() {\n        return _getNdefMessage.apply(this, arguments);\n      }\n      return getNdefMessage;\n    }()\n  }, {\n    key: \"ndefHandler\",\n    get: function get() {\n      if (!this._ndefHandler) {\n        this._ndefHandler = new _NdefHandler.NdefHandler();\n      }\n      return this._ndefHandler;\n    }\n  }, {\n    key: \"nfcAHandler\",\n    get: function get() {\n      if (!this._nfcAHandler) {\n        this._nfcAHandler = new _NfcAHandler.NfcAHandler();\n      }\n      return this._nfcAHandler;\n    }\n  }, {\n    key: \"nfcVHandler\",\n    get: function get() {\n      if (!this._nfcVHandler) {\n        this._nfcVHandler = new _NfcVHandler.NfcVHandler();\n      }\n      return this._nfcVHandler;\n    }\n  }, {\n    key: \"isoDepHandler\",\n    get: function get() {\n      if (!this._isoDepHandler) {\n        this._isoDepHandler = new _IsoDepHandler.IsoDepHandler();\n      }\n      return this._isoDepHandler;\n    }\n  }, {\n    key: \"MIFARE_BLOCK_SIZE\",\n    get: function get() {\n      return _NativeNfcManager.NativeNfcManager.MIFARE_BLOCK_SIZE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_PAGE_SIZE\",\n    get: function get() {\n      return _NativeNfcManager.NativeNfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE\",\n    get: function get() {\n      return _NativeNfcManager.NativeNfcManager.MIFARE_ULTRALIGHT_TYPE;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE_C\",\n    get: function get() {\n      return _NativeNfcManager.NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_C;\n    }\n  }, {\n    key: \"MIFARE_ULTRALIGHT_TYPE_UNKNOWN\",\n    get: function get() {\n      return _NativeNfcManager.NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_UNKNOWN;\n    }\n  }]);\n}();","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DEFAULT_REGISTER_TAG_EVENT_OPTIONS","enumerable","get","_NdefHandler","NdefStatus","NfcTech","NfcManagerBase","NfcEvents","_classCallCheck2","_createClass2","_asyncToGenerator2","_reactNative","_NativeNfcManager","_NfcAHandler","_NfcVHandler","_IsoDepHandler","_NfcError","DiscoverTag","DiscoverBackgroundTag","SessionClosed","StateChanged","Ndef","NfcA","NfcB","NfcF","NfcV","IsoDep","MifareClassic","MifareUltralight","MifareIOS","Iso15693IOS","FelicaIOS","NdefFormatable","alertMessage","invalidateAfterFirstRead","isReaderModeEnabled","readerModeFlags","readerModeDelay","NotImpl","Error","DoNothing","_DoNothing","apply","arguments","default","_this","requestTechnology","cancelTechnologyRequest","getBackgroundTag","clearBackgroundTag","setAlertMessage","_onDiscoverTag","tag","callback","_clientListeners","_onDiscoverBackgroundTag","_onSessionClosedIOS","resp","error","buildNfcExceptionIOS","UserCancel","_onStateChangedAndroid","state","_subscribeNativeEvents","_subscriptions","NfcManagerEmitter","addListener","Platform","OS","key","_start","handleNativeException","callNative","start","_isSupported","tech","length","undefined","isSupported","_registerTagEvent","options","optionsWithDefault","assign","registerTagEvent","_unregisterTagEvent","unregisterTagEvent","_getTag","getTag","setEventListener","name","allNfcEvents","keys","map","k","indexOf","_writeNdefMessage","bytes","writeNdefMessage","_x","_getNdefMessage","getNdefMessage","_ndefHandler","NdefHandler","_nfcAHandler","NfcAHandler","_nfcVHandler","NfcVHandler","_isoDepHandler","IsoDepHandler","NativeNfcManager","MIFARE_BLOCK_SIZE","MIFARE_ULTRALIGHT_PAGE_SIZE","MIFARE_ULTRALIGHT_TYPE","MIFARE_ULTRALIGHT_TYPE_C","MIFARE_ULTRALIGHT_TYPE_UNKNOWN"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcManager.js"],"sourcesContent":["'use strict';\nimport {Platform} from 'react-native';\nimport {\n  NativeNfcManager,\n  NfcManagerEmitter,\n  callNative,\n} from './NativeNfcManager';\nimport {NdefHandler, NdefStatus} from './NfcTech/NdefHandler';\nimport {NfcAHandler} from './NfcTech/NfcAHandler';\nimport {NfcVHandler} from './NfcTech/NfcVHandler';\nimport {IsoDepHandler} from './NfcTech/IsoDepHandler';\nimport {\n  handleNativeException,\n  buildNfcExceptionIOS,\n  UserCancel,\n} from './NfcError';\n\nconst NfcEvents = {\n  DiscoverTag: 'NfcManagerDiscoverTag',\n  DiscoverBackgroundTag: 'NfcManagerDiscoverBackgroundTag',\n  SessionClosed: 'NfcManagerSessionClosed',\n  StateChanged: 'NfcManagerStateChanged',\n};\n\nconst NfcTech = {\n  Ndef: 'Ndef',\n  NfcA: 'NfcA',\n  NfcB: 'NfcB',\n  NfcF: 'NfcF',\n  NfcV: 'NfcV',\n  IsoDep: 'IsoDep',\n  MifareClassic: 'MifareClassic',\n  MifareUltralight: 'MifareUltralight',\n  MifareIOS: 'mifare',\n  Iso15693IOS: 'iso15693',\n  FelicaIOS: 'felica',\n  NdefFormatable: 'NdefFormatable',\n};\n\nconst DEFAULT_REGISTER_TAG_EVENT_OPTIONS = {\n  alertMessage: 'Please tap NFC tags',\n  invalidateAfterFirstRead: false,\n  isReaderModeEnabled: false,\n  readerModeFlags: 0,\n  readerModeDelay: 10,\n};\n\nfunction NotImpl() {\n  throw new Error('not implemented');\n}\n\nasync function DoNothing() {\n  // allow derived class to not implment it\n}\n\nclass NfcManagerBase {\n  constructor() {\n    this._subscribeNativeEvents();\n  }\n\n  async start() {\n    return handleNativeException(callNative('start'));\n  }\n\n  async isSupported(tech = '') {\n    return handleNativeException(callNative('isSupported', [tech]));\n  }\n\n  async registerTagEvent(options = {}) {\n    const optionsWithDefault = {\n      ...DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n      ...options,\n    };\n\n    return handleNativeException(\n      callNative('registerTagEvent', [optionsWithDefault]),\n    );\n  }\n\n  async unregisterTagEvent() {\n    return handleNativeException(callNative('unregisterTagEvent'));\n  }\n\n  async getTag() {\n    return handleNativeException(callNative('getTag'));\n  }\n\n  setEventListener(name, callback) {\n    const allNfcEvents = Object.keys(NfcEvents).map((k) => NfcEvents[k]);\n    if (allNfcEvents.indexOf(name) === -1) {\n      throw new Error('no such event');\n    }\n\n    this._clientListeners[name] = callback;\n  }\n\n  requestTechnology = NotImpl;\n\n  cancelTechnologyRequest = NotImpl;\n\n  getBackgroundTag = NotImpl;\n\n  clearBackgroundTag = NotImpl;\n\n  setAlertMessage = DoNothing;\n\n  async writeNdefMessage(bytes) {\n    return handleNativeException(callNative('writeNdefMessage', [bytes]));\n  }\n\n  async getNdefMessage() {\n    return handleNativeException(callNative('getNdefMessage'));\n  }\n\n  get ndefHandler() {\n    if (!this._ndefHandler) {\n      this._ndefHandler = new NdefHandler();\n    }\n    return this._ndefHandler;\n  }\n\n  get nfcAHandler() {\n    if (!this._nfcAHandler) {\n      this._nfcAHandler = new NfcAHandler();\n    }\n    return this._nfcAHandler;\n  }\n\n  get nfcVHandler() {\n    if (!this._nfcVHandler) {\n      this._nfcVHandler = new NfcVHandler();\n    }\n    return this._nfcVHandler;\n  }\n\n  get isoDepHandler() {\n    if (!this._isoDepHandler) {\n      this._isoDepHandler = new IsoDepHandler();\n    }\n    return this._isoDepHandler;\n  }\n\n  get MIFARE_BLOCK_SIZE() {\n    return NativeNfcManager.MIFARE_BLOCK_SIZE;\n  }\n  get MIFARE_ULTRALIGHT_PAGE_SIZE() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_PAGE_SIZE;\n  }\n  get MIFARE_ULTRALIGHT_TYPE() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE;\n  }\n  get MIFARE_ULTRALIGHT_TYPE_C() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_C;\n  }\n  get MIFARE_ULTRALIGHT_TYPE_UNKNOWN() {\n    return NativeNfcManager.MIFARE_ULTRALIGHT_TYPE_UNKNOWN;\n  }\n\n  _onDiscoverTag = (tag) => {\n    const callback = this._clientListeners[NfcEvents.DiscoverTag];\n    if (callback) {\n      callback(tag);\n    }\n  };\n\n  _onDiscoverBackgroundTag = (tag) => {\n    const callback = this._clientListeners[NfcEvents.DiscoverBackgroundTag];\n    if (callback) {\n      callback(tag);\n    }\n  };\n\n  _onSessionClosedIOS = (resp) => {\n    const callback = this._clientListeners[NfcEvents.SessionClosed];\n    if (callback) {\n      const error = buildNfcExceptionIOS(resp.error);\n      callback(error instanceof UserCancel ? null : error);\n    }\n  };\n\n  _onStateChangedAndroid = (state) => {\n    const callback = this._clientListeners[NfcEvents.StateChanged];\n    if (callback) {\n      callback(state);\n    }\n  };\n\n  _subscribeNativeEvents = () => {\n    this._subscriptions = {};\n    this._clientListeners = {};\n    this._subscriptions[NfcEvents.DiscoverTag] = NfcManagerEmitter.addListener(\n      NfcEvents.DiscoverTag,\n      this._onDiscoverTag,\n    );\n\n    this._subscriptions[NfcEvents.DiscoverBackgroundTag] = NfcManagerEmitter.addListener(\n      NfcEvents.DiscoverBackgroundTag,\n      this._onDiscoverBackgroundTag,\n    );\n\n    if (Platform.OS === 'ios') {\n      this._subscriptions[\n        NfcEvents.SessionClosed\n      ] = NfcManagerEmitter.addListener(\n        NfcEvents.SessionClosed,\n        this._onSessionClosedIOS,\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      this._subscriptions[\n        NfcEvents.StateChanged\n      ] = NfcManagerEmitter.addListener(\n        NfcEvents.StateChanged,\n        this._onStateChangedAndroid,\n      );\n    }\n  };\n}\n\nexport {\n  NfcTech,\n  NfcEvents,\n  NfcManagerBase,\n  NdefStatus,\n  DEFAULT_REGISTER_TAG_EVENT_OPTIONS,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}