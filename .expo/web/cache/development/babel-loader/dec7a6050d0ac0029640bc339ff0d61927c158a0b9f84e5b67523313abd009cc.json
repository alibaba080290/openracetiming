{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useFocusEvents;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _NavigationContext = _interopRequireDefault(require(\"./NavigationContext\"));\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction useFocusEvents(_ref) {\n  var state = _ref.state,\n    emitter = _ref.emitter;\n  var navigation = React.useContext(_NavigationContext.default);\n  var lastFocusedKeyRef = React.useRef();\n  var currentFocusedKey = state.routes[state.index].key;\n  React.useEffect(function () {\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', function () {\n      lastFocusedKeyRef.current = currentFocusedKey;\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    });\n  }, [currentFocusedKey, emitter, navigation]);\n  React.useEffect(function () {\n    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('blur', function () {\n      lastFocusedKeyRef.current = undefined;\n      emitter.emit({\n        type: 'blur',\n        target: currentFocusedKey\n      });\n    });\n  }, [currentFocusedKey, emitter, navigation]);\n  React.useEffect(function () {\n    var lastFocusedKey = lastFocusedKeyRef.current;\n    lastFocusedKeyRef.current = currentFocusedKey;\n    if (lastFocusedKey === undefined && !navigation) {\n      emitter.emit({\n        type: 'focus',\n        target: currentFocusedKey\n      });\n    }\n    if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {\n      return;\n    }\n    if (lastFocusedKey === undefined) {\n      return;\n    }\n    emitter.emit({\n      type: 'blur',\n      target: lastFocusedKey\n    });\n    emitter.emit({\n      type: 'focus',\n      target: currentFocusedKey\n    });\n  }, [currentFocusedKey, emitter, navigation]);\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_NavigationContext","_interopRequireDefault","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useFocusEvents","_ref","state","emitter","navigation","useContext","NavigationContext","lastFocusedKeyRef","useRef","currentFocusedKey","routes","index","key","useEffect","addListener","current","emit","type","target","undefined","lastFocusedKey","isFocused"],"sources":["/home/admin/openracetiming/node_modules/@react-navigation/core/lib/module/useFocusEvents.tsx"],"sourcesContent":["import type { NavigationState } from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport NavigationContext from './NavigationContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\n\ntype Options<State extends NavigationState> = {\n  state: State;\n  emitter: NavigationEventEmitter<EventMapCore<State>>;\n};\n\n/**\n * Hook to take care of emitting `focus` and `blur` events.\n */\nexport default function useFocusEvents<State extends NavigationState>({\n  state,\n  emitter,\n}: Options<State>) {\n  const navigation = React.useContext(NavigationContext);\n  const lastFocusedKeyRef = React.useRef<string | undefined>();\n\n  const currentFocusedKey = state.routes[state.index].key;\n\n  // When the parent screen changes its focus state, we also need to change child's focus\n  // Coz the child screen can't be focused if the parent screen is out of focus\n  React.useEffect(\n    () =>\n      navigation?.addListener('focus', () => {\n        lastFocusedKeyRef.current = currentFocusedKey;\n        emitter.emit({ type: 'focus', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(\n    () =>\n      navigation?.addListener('blur', () => {\n        lastFocusedKeyRef.current = undefined;\n        emitter.emit({ type: 'blur', target: currentFocusedKey });\n      }),\n    [currentFocusedKey, emitter, navigation]\n  );\n\n  React.useEffect(() => {\n    const lastFocusedKey = lastFocusedKeyRef.current;\n\n    lastFocusedKeyRef.current = currentFocusedKey;\n\n    // We wouldn't have `lastFocusedKey` on initial mount\n    // Fire focus event for the current route on mount if there's no parent navigator\n    if (lastFocusedKey === undefined && !navigation) {\n      emitter.emit({ type: 'focus', target: currentFocusedKey });\n    }\n\n    // We should only emit events when the focused key changed and navigator is focused\n    // When navigator is not focused, screens inside shouldn't receive focused status either\n    if (\n      lastFocusedKey === currentFocusedKey ||\n      !(navigation ? navigation.isFocused() : true)\n    ) {\n      return;\n    }\n\n    if (lastFocusedKey === undefined) {\n      // Only fire events after initial mount\n      return;\n    }\n\n    emitter.emit({ type: 'blur', target: lastFocusedKey });\n    emitter.emit({ type: 'focus', target: currentFocusedKey });\n  }, [currentFocusedKey, emitter, navigation]);\n}\n"],"mappings":";;;;;AACA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,kBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAAA,SAAAD,wBAAAI,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAN,uBAAA,YAAAA,wBAAAI,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAYe,SAASmB,cAATA,CAAAC,IAAA,EAGI;EAAA,IAFjBC,KADoE,GAGnDD,IAAA,CAFjBC,KADoE;IAEpEC,OAAA,GACiBF,IAAA,CADjBE,OAAA;EAEA,IAAMC,UAAU,GAAG7B,KAAK,CAAC8B,UAAN,CAAiBC,0BAAjB,CAAnB;EACA,IAAMC,iBAAiB,GAAGhC,KAAK,CAACiC,MAAN,EAA1B;EAEA,IAAMC,iBAAiB,GAAGP,KAAK,CAACQ,MAAN,CAAaR,KAAK,CAACS,KAAnB,EAA0BC,GAApD;EAIArC,KAAK,CAACsC,SAAN,CACE;IAAA,OACET,UADF,aACEA,UADF,uBACEA,UAAU,CAAEU,WAAZ,CAAwB,OAAxB,EAAiC,YAAM;MACrCP,iBAAiB,CAACQ,OAAlB,GAA4BN,iBAA5B;MACAN,OAAO,CAACa,IAAR,CAAa;QAAEC,IAAI,EAAE,OAAR;QAAiBC,MAAM,EAAET;MAAzB,CAAb;IACD,CAHD,CAFJ;EAAA,GAME,CAACA,iBAAD,EAAoBN,OAApB,EAA6BC,UAA7B,CANF;EASA7B,KAAK,CAACsC,SAAN,CACE;IAAA,OACET,UADF,aACEA,UADF,uBACEA,UAAU,CAAEU,WAAZ,CAAwB,MAAxB,EAAgC,YAAM;MACpCP,iBAAiB,CAACQ,OAAlB,GAA4BI,SAA5B;MACAhB,OAAO,CAACa,IAAR,CAAa;QAAEC,IAAI,EAAE,MAAR;QAAgBC,MAAM,EAAET;MAAxB,CAAb;IACD,CAHD,CAFJ;EAAA,GAME,CAACA,iBAAD,EAAoBN,OAApB,EAA6BC,UAA7B,CANF;EASA7B,KAAK,CAACsC,SAAN,CAAgB,YAAM;IACpB,IAAMO,cAAc,GAAGb,iBAAiB,CAACQ,OAAzC;IAEAR,iBAAiB,CAACQ,OAAlB,GAA4BN,iBAA5B;IAIA,IAAIW,cAAc,KAAKD,SAAnB,IAAgC,CAACf,UAArC,EAAiD;MAC/CD,OAAO,CAACa,IAAR,CAAa;QAAEC,IAAI,EAAE,OAAR;QAAiBC,MAAM,EAAET;MAAzB,CAAb;IACD;IAID,IACEW,cAAc,KAAKX,iBAAnB,IACA,EAAEL,UAAU,GAAGA,UAAU,CAACiB,SAAX,EAAH,GAA4B,IAAxC,CAFF,EAGE;MACA;IACD;IAED,IAAID,cAAc,KAAKD,SAAvB,EAAkC;MAEhC;IACD;IAEDhB,OAAO,CAACa,IAAR,CAAa;MAAEC,IAAI,EAAE,MAAR;MAAgBC,MAAM,EAAEE;IAAxB,CAAb;IACAjB,OAAO,CAACa,IAAR,CAAa;MAAEC,IAAI,EAAE,OAAR;MAAiBC,MAAM,EAAET;IAAzB,CAAb;EACD,CA3BD,EA2BG,CAACA,iBAAD,EAAoBN,OAApB,EAA6BC,UAA7B,CA3BH;AA4BD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}