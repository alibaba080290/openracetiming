{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NfcAHandler = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _NativeNfcManager = require(\"../NativeNfcManager\");\nvar _NfcError = require(\"../NfcError\");\nvar NfcAHandler = exports.NfcAHandler = function () {\n  function NfcAHandler() {\n    (0, _classCallCheck2.default)(this, NfcAHandler);\n  }\n  return (0, _createClass2.default)(NfcAHandler, [{\n    key: \"transceive\",\n    value: function () {\n      var _transceive = (0, _asyncToGenerator2.default)(function* (bytes) {\n        if (_reactNative.Platform.OS === 'ios') {\n          return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('sendMifareCommand', [bytes]));\n        }\n        return (0, _NfcError.handleNativeException)((0, _NativeNfcManager.callNative)('transceive', [bytes]));\n      });\n      function transceive(_x) {\n        return _transceive.apply(this, arguments);\n      }\n      return transceive;\n    }()\n  }]);\n}();","map":{"version":3,"names":["_reactNative","require","_NativeNfcManager","_NfcError","NfcAHandler","exports","_classCallCheck2","default","_createClass2","key","value","_transceive","_asyncToGenerator2","bytes","Platform","OS","handleNativeException","callNative","transceive","_x","apply","arguments"],"sources":["/home/admin/openracetiming/node_modules/react-native-nfc-manager/src/NfcTech/NfcAHandler.js"],"sourcesContent":["import {Platform} from 'react-native';\nimport {callNative} from '../NativeNfcManager';\nimport {handleNativeException} from '../NfcError';\n\nclass NfcAHandler {\n  async transceive(bytes) {\n    if (Platform.OS === 'ios') {\n      return handleNativeException(callNative('sendMifareCommand', [bytes]));\n    }\n    return handleNativeException(callNative('transceive', [bytes]));\n  }\n}\n\nexport {NfcAHandler};\n"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,iBAAA,GAAAD,OAAA;AACA,IAAAE,SAAA,GAAAF,OAAA;AAAkD,IAE5CG,WAAW,GAAAC,OAAA,CAAAD,WAAA;EAAA,SAAAA,YAAA;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,WAAA;EAAA;EAAA,WAAAI,aAAA,CAAAD,OAAA,EAAAH,WAAA;IAAAK,GAAA;IAAAC,KAAA;MAAA,IAAAC,WAAA,OAAAC,kBAAA,CAAAL,OAAA,EACf,WAAiBM,KAAK,EAAE;QACtB,IAAIC,qBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;UACzB,OAAO,IAAAC,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,mBAAmB,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC;QACxE;QACA,OAAO,IAAAG,+BAAqB,EAAC,IAAAC,4BAAU,EAAC,YAAY,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC;MACjE,CAAC;MAAA,SALKK,UAAUA,CAAAC,EAAA;QAAA,OAAAR,WAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAVH,UAAU;IAAA;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}