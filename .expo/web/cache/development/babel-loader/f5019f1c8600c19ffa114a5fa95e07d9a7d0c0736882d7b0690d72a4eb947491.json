{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.getAdornmentConfig = getAdornmentConfig;\nexports.getAdornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TextInputIcon = _interopRequireWildcard(require(\"./TextInputIcon\"));\nvar _TextInputAffix = _interopRequireWildcard(require(\"./TextInputAffix\"));\nvar _constants = require(\"../constants\");\nvar _enums = require(\"./enums\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction getAdornmentConfig(_ref) {\n  var left = _ref.left,\n    right = _ref.right;\n  var adornmentConfig = [];\n  if (left || right) {\n    [{\n      side: _enums.AdornmentSide.Left,\n      adornment: left\n    }, {\n      side: _enums.AdornmentSide.Right,\n      adornment: right\n    }].forEach(function (_ref2) {\n      var side = _ref2.side,\n        adornment = _ref2.adornment;\n      if (adornment && _react.default.isValidElement(adornment)) {\n        var type;\n        if (adornment.type === _TextInputAffix.default) {\n          type = _enums.AdornmentType.Affix;\n        } else if (adornment.type === _TextInputIcon.default) {\n          type = _enums.AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side: side,\n          type: type\n        });\n      }\n    });\n  }\n  return adornmentConfig;\n}\nfunction getAdornmentStyleAdjustmentForNativeInput(_ref3) {\n  var adornmentConfig = _ref3.adornmentConfig,\n    leftAffixWidth = _ref3.leftAffixWidth,\n    rightAffixWidth = _ref3.rightAffixWidth,\n    paddingHorizontal = _ref3.paddingHorizontal,\n    _ref3$inputOffset = _ref3.inputOffset,\n    inputOffset = _ref3$inputOffset === void 0 ? 0 : _ref3$inputOffset,\n    mode = _ref3.mode;\n  if (adornmentConfig.length) {\n    var adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(function (_ref4) {\n      var type = _ref4.type,\n        side = _ref4.side;\n      var isLeftSide = side === _enums.AdornmentSide.Left;\n      var inputModeAdornemntOffset = mode === _enums.InputMode.Outlined ? _constants.ADORNMENT_OFFSET + _constants.OUTLINED_INPUT_OFFSET : _constants.ADORNMENT_OFFSET;\n      var paddingKey = \"padding\" + captalize(side);\n      var affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n      var padding = typeof paddingHorizontal === 'number' ? paddingHorizontal : inputModeAdornemntOffset;\n      var offset = affixWidth + padding;\n      var isAffix = type === _enums.AdornmentType.Affix;\n      var marginKey = \"margin\" + captalize(side);\n      return (0, _defineProperty2.default)((0, _defineProperty2.default)({}, marginKey, isAffix ? 0 : offset), paddingKey, isAffix ? offset : inputOffset);\n    });\n    var allStyleAdjustmentsMerged = adornmentStyleAdjustmentForNativeInput.reduce(function (mergedStyles, currentStyle) {\n      return Object.assign({}, mergedStyles, currentStyle);\n    }, {});\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\nvar captalize = function captalize(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\nvar TextInputAdornment = function TextInputAdornment(_ref5) {\n  var adornmentConfig = _ref5.adornmentConfig,\n    left = _ref5.left,\n    right = _ref5.right,\n    onAffixChange = _ref5.onAffixChange,\n    textStyle = _ref5.textStyle,\n    visible = _ref5.visible,\n    topPosition = _ref5.topPosition,\n    isTextInputFocused = _ref5.isTextInputFocused,\n    forceFocus = _ref5.forceFocus,\n    paddingHorizontal = _ref5.paddingHorizontal,\n    maxFontSizeMultiplier = _ref5.maxFontSizeMultiplier;\n  if (adornmentConfig.length) {\n    return _react.default.createElement(_react.default.Fragment, null, adornmentConfig.map(function (_ref6) {\n      var type = _ref6.type,\n        side = _ref6.side;\n      var inputAdornmentComponent;\n      if (side === _enums.AdornmentSide.Left) {\n        inputAdornmentComponent = left;\n      } else if (side === _enums.AdornmentSide.Right) {\n        inputAdornmentComponent = right;\n      }\n      var commonProps = {\n        key: side,\n        side: side,\n        testID: side + \"-\" + type + \"-adornment\",\n        isTextInputFocused: isTextInputFocused,\n        paddingHorizontal: paddingHorizontal\n      };\n      if (type === _enums.AdornmentType.Icon) {\n        return _react.default.createElement(_TextInputIcon.IconAdornment, _extends({}, commonProps, {\n          icon: inputAdornmentComponent,\n          topPosition: topPosition[_enums.AdornmentType.Icon],\n          forceFocus: forceFocus\n        }));\n      } else if (type === _enums.AdornmentType.Affix) {\n        return _react.default.createElement(_TextInputAffix.AffixAdornment, _extends({}, commonProps, {\n          topPosition: topPosition[_enums.AdornmentType.Affix][side],\n          affix: inputAdornmentComponent,\n          textStyle: textStyle,\n          onLayout: onAffixChange[side],\n          visible: visible,\n          maxFontSizeMultiplier: maxFontSizeMultiplier\n        }));\n      } else {\n        return null;\n      }\n    }));\n  } else {\n    return null;\n  }\n};\nvar _default = exports.default = TextInputAdornment;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_TextInputIcon","_interopRequireWildcard","_TextInputAffix","_constants","_enums","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","getAdornmentConfig","_ref","left","right","adornmentConfig","side","AdornmentSide","Left","adornment","Right","forEach","_ref2","React","isValidElement","type","TextInputAffix","AdornmentType","Affix","TextInputIcon","Icon","push","getAdornmentStyleAdjustmentForNativeInput","_ref3","leftAffixWidth","rightAffixWidth","paddingHorizontal","_ref3$inputOffset","inputOffset","mode","length","adornmentStyleAdjustmentForNativeInput","map","_ref4","isLeftSide","inputModeAdornemntOffset","InputMode","Outlined","ADORNMENT_OFFSET","OUTLINED_INPUT_OFFSET","paddingKey","captalize","affixWidth","padding","offset","isAffix","marginKey","_defineProperty2","allStyleAdjustmentsMerged","reduce","mergedStyles","currentStyle","assign","text","charAt","toUpperCase","slice","TextInputAdornment","_ref5","onAffixChange","textStyle","visible","topPosition","isTextInputFocused","forceFocus","maxFontSizeMultiplier","createElement","Fragment","_ref6","inputAdornmentComponent","commonProps","key","testID","IconAdornment","_extends","icon","AffixAdornment","affix","onLayout","_default","exports"],"sources":["/home/admin/openracetiming/node_modules/react-native-paper/lib/module/components/TextInput/Adornment/TextInputAdornment.tsx"],"sourcesContent":["import React from 'react';\nimport TextInputIcon, { IconAdornment } from './TextInputIcon';\nimport TextInputAffix, { AffixAdornment } from './TextInputAffix';\nimport { ADORNMENT_OFFSET, OUTLINED_INPUT_OFFSET } from '../constants';\nimport type {\n  LayoutChangeEvent,\n  TextStyle,\n  StyleProp,\n  Animated,\n} from 'react-native';\nimport type {\n  AdornmentConfig,\n  AdornmentStyleAdjustmentForNativeInput,\n} from './types';\nimport { AdornmentSide, AdornmentType, InputMode } from './enums';\n\nexport function getAdornmentConfig({\n  left,\n  right,\n}: {\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n}): Array<AdornmentConfig> {\n  let adornmentConfig: any[] = [];\n  if (left || right) {\n    [\n      { side: AdornmentSide.Left, adornment: left },\n      { side: AdornmentSide.Right, adornment: right },\n    ].forEach(({ side, adornment }) => {\n      if (adornment && React.isValidElement(adornment)) {\n        let type;\n        if (adornment.type === TextInputAffix) {\n          type = AdornmentType.Affix;\n        } else if (adornment.type === TextInputIcon) {\n          type = AdornmentType.Icon;\n        }\n        adornmentConfig.push({\n          side,\n          type,\n        });\n      }\n    });\n  }\n\n  return adornmentConfig;\n}\n\nexport function getAdornmentStyleAdjustmentForNativeInput({\n  adornmentConfig,\n  leftAffixWidth,\n  rightAffixWidth,\n  paddingHorizontal,\n  inputOffset = 0,\n  mode,\n}: {\n  inputOffset?: number;\n  adornmentConfig: AdornmentConfig[];\n  leftAffixWidth: number;\n  rightAffixWidth: number;\n  mode?: 'outlined' | 'flat';\n  paddingHorizontal?: number | string;\n}): AdornmentStyleAdjustmentForNativeInput | {} {\n  if (adornmentConfig.length) {\n    const adornmentStyleAdjustmentForNativeInput = adornmentConfig.map(\n      ({ type, side }: AdornmentConfig) => {\n        const isLeftSide = side === AdornmentSide.Left;\n        const inputModeAdornemntOffset =\n          mode === InputMode.Outlined\n            ? ADORNMENT_OFFSET + OUTLINED_INPUT_OFFSET\n            : ADORNMENT_OFFSET;\n        const paddingKey = `padding${captalize(side)}`;\n        const affixWidth = isLeftSide ? leftAffixWidth : rightAffixWidth;\n        const padding =\n          typeof paddingHorizontal === 'number'\n            ? paddingHorizontal\n            : inputModeAdornemntOffset;\n        const offset = affixWidth + padding;\n\n        const isAffix = type === AdornmentType.Affix;\n        const marginKey = `margin${captalize(side)}`;\n\n        return {\n          [marginKey]: isAffix ? 0 : offset,\n          [paddingKey]: isAffix ? offset : inputOffset,\n        };\n      }\n    );\n    const allStyleAdjustmentsMerged =\n      adornmentStyleAdjustmentForNativeInput.reduce(\n        (mergedStyles, currentStyle) => {\n          return {\n            ...mergedStyles,\n            ...currentStyle,\n          };\n        },\n        {}\n      );\n    return allStyleAdjustmentsMerged;\n  } else {\n    return [{}];\n  }\n}\n\nconst captalize = (text: string) =>\n  text.charAt(0).toUpperCase() + text.slice(1);\n\nexport interface TextInputAdornmentProps {\n  forceFocus: () => void;\n  adornmentConfig: AdornmentConfig[];\n  topPosition: {\n    [AdornmentType.Affix]: {\n      [AdornmentSide.Left]: number | null;\n      [AdornmentSide.Right]: number | null;\n    };\n    [AdornmentType.Icon]: number;\n  };\n  onAffixChange: {\n    [AdornmentSide.Left]: (event: LayoutChangeEvent) => void;\n    [AdornmentSide.Right]: (event: LayoutChangeEvent) => void;\n  };\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  textStyle?: StyleProp<TextStyle>;\n  visible?: Animated.Value;\n  isTextInputFocused: boolean;\n  paddingHorizontal?: number | string;\n  maxFontSizeMultiplier?: number | undefined | null;\n}\n\nconst TextInputAdornment: React.FunctionComponent<TextInputAdornmentProps> = ({\n  adornmentConfig,\n  left,\n  right,\n  onAffixChange,\n  textStyle,\n  visible,\n  topPosition,\n  isTextInputFocused,\n  forceFocus,\n  paddingHorizontal,\n  maxFontSizeMultiplier,\n}) => {\n  if (adornmentConfig.length) {\n    return (\n      <>\n        {adornmentConfig.map(({ type, side }: AdornmentConfig) => {\n          let inputAdornmentComponent;\n          if (side === AdornmentSide.Left) {\n            inputAdornmentComponent = left;\n          } else if (side === AdornmentSide.Right) {\n            inputAdornmentComponent = right;\n          }\n\n          const commonProps = {\n            key: side,\n            side: side,\n            testID: `${side}-${type}-adornment`,\n            isTextInputFocused,\n            paddingHorizontal,\n          };\n          if (type === AdornmentType.Icon) {\n            return (\n              <IconAdornment\n                {...commonProps}\n                icon={inputAdornmentComponent}\n                topPosition={topPosition[AdornmentType.Icon]}\n                forceFocus={forceFocus}\n              />\n            );\n          } else if (type === AdornmentType.Affix) {\n            return (\n              <AffixAdornment\n                {...commonProps}\n                topPosition={topPosition[AdornmentType.Affix][side]}\n                affix={inputAdornmentComponent}\n                textStyle={textStyle}\n                onLayout={onAffixChange[side]}\n                visible={visible}\n                maxFontSizeMultiplier={maxFontSizeMultiplier}\n              />\n            );\n          } else {\n            return null;\n          }\n        })}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default TextInputAdornment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}